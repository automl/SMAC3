name: examples

on:
  # Manual trigger option in github
  workflow_dispatch:

  # Trigger on push to these branches
  push:
    branches:
      - main
      - development

  # Trigger on a open/push to a PR targeting one of these branches
  pull_request:
    branches:
      - main
      - development

jobs:
  ubuntu:

    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.9]
      fail-fast:  false

    steps:
    - uses: actions/checkout@v2
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Conda Install test dependencies
      run: |
        # Miniconda is available in $CONDA env var
        $CONDA/bin/conda create -n testenv --yes pip wheel gxx_linux-64 gcc_linux-64 swig python=${{ matrix.python-version }}
        $CONDA/envs/testenv/bin/python3 -m pip install --upgrade pip
        $CONDA/envs/testenv/bin/pip3 install .[all]

    - name: Spear-QCP ROAR (Commandline)
      timeout-minutes: 20
      run: |
        # Activate anaconda so default python is from conda
        export PATH="$CONDA/envs/testenv/bin:$PATH"

        # cd examples/commandline
        bash examples/commandline/spear_qcp_roar.sh

    - name: Spear-QCP SMAC (Commandline)
      timeout-minutes: 20
      run: |
        # Activate anaconda so default python is from conda
        export PATH="$CONDA/envs/testenv/bin:$PATH"

        # cd examples/commandline
        bash examples/commandline/spear_qcp_smac.sh

    - name:  Branin (Commandline)
      timeout-minutes: 20
      run: |
        # Activate anaconda so default python is from conda
        export PATH="$CONDA/envs/testenv/bin:$PATH"

        # cd examples/commandline
        python ./scripts/smac.py --scenario examples/commandline/branin/scenario.txt
