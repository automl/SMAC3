name: examples

on: [push, pull_request]

jobs:
  ubuntu:

    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.8]
      fail-fast:  false

    steps:
    - uses: actions/checkout@v2
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Conda Install test dependencies
      run: |
        # Miniconda is available in $CONDA env var
        $CONDA/bin/conda create -n testenv --yes pip wheel gxx_linux-64 gcc_linux-64 swig python=${{ matrix.python-version }}
        $CONDA/envs/testenv/bin/python3 -m pip install --upgrade pip
        $CONDA/envs/testenv/bin/pip3 install -e .[all]
    - name: Spear QCP SMAC
      timeout-minutes: 20
      run: |
        # Activate anaconda so default python is from conda
        export PATH="$CONDA/envs/testenv/bin:$PATH"
        cd examples/quickstart/spear_qcp
        bash run_SMAC.sh
    - name: Spear QCP ROAR
      timeout-minutes: 20
      run: |
        # Activate anaconda so default python is from conda
        export PATH="$CONDA/envs/testenv/bin:$PATH"
        cd examples/quickstart/spear_qcp
        bash run_ROAR.sh
    - name: Spear QCP Successive halving
      timeout-minutes: 20
      run: |
        # Activate anaconda so default python is from conda
        export PATH="$CONDA/envs/testenv/bin:$PATH"
        cd examples/quickstart/spear_qcp
        python SMAC4AC_SH_spear_qcp.py
    - name:  Branin from the command line
      timeout-minutes: 20
      run: |
        # Activate anaconda so default python is from conda
        export PATH="$CONDA/envs/testenv/bin:$PATH"
        cd examples/quickstart/branin
        python ../../../scripts/smac --scenario scenario.txt
