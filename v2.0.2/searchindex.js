Search.setIndex({"docnames": ["10_experimental", "1_installation", "2_package_overview", "3_getting_started", "4_minimal_example", "5_api", "6_references", "7_glossary", "8_faq", "9_license", "advanced_usage/10_continue", "advanced_usage/11_reproducibility", "advanced_usage/12_optimizations", "advanced_usage/1_components", "advanced_usage/2_multi_fidelity", "advanced_usage/3_multi_objective", "advanced_usage/4_instances", "advanced_usage/5_ask_and_tell", "advanced_usage/6_commandline", "advanced_usage/7_stopping_criteria", "advanced_usage/8_logging", "advanced_usage/9_parallelism", "advanced_usage/index", "api/smac.acquisition", "api/smac.acquisition.function", "api/smac.acquisition.function.abstract_acquisition_function", "api/smac.acquisition.function.confidence_bound", "api/smac.acquisition.function.expected_improvement", "api/smac.acquisition.function.integrated_acquisition_function", "api/smac.acquisition.function.prior_acqusition_function", "api/smac.acquisition.function.probability_improvement", "api/smac.acquisition.function.thompson", "api/smac.acquisition.maximizer", "api/smac.acquisition.maximizer.abstract_acqusition_maximizer", "api/smac.acquisition.maximizer.differential_evolution", "api/smac.acquisition.maximizer.helpers", "api/smac.acquisition.maximizer.local_and_random_search", "api/smac.acquisition.maximizer.local_search", "api/smac.acquisition.maximizer.random_search", "api/smac.callback", "api/smac.callback.callback", "api/smac.callback.metadata_callback", "api/smac.facade", "api/smac.facade.abstract_facade", "api/smac.facade.algorithm_configuration_facade", "api/smac.facade.blackbox_facade", "api/smac.facade.hyperband_facade", "api/smac.facade.hyperparameter_optimization_facade", "api/smac.facade.multi_fidelity_facade", "api/smac.facade.random_facade", "api/smac.initial_design", "api/smac.initial_design.abstract_initial_design", "api/smac.initial_design.default_design", "api/smac.initial_design.factorial_design", "api/smac.initial_design.latin_hypercube_design", "api/smac.initial_design.random_design", "api/smac.initial_design.sobol_design", "api/smac.intensifier", "api/smac.intensifier.abstract_intensifier", "api/smac.intensifier.hyperband", "api/smac.intensifier.intensifier", "api/smac.intensifier.successive_halving", "api/smac.main", "api/smac.main.config_selector", "api/smac.main.smbo", "api/smac.model", "api/smac.model.abstract_model", "api/smac.model.gaussian_process", "api/smac.model.gaussian_process.abstract_gaussian_process", "api/smac.model.gaussian_process.gaussian_process", "api/smac.model.gaussian_process.gpytorch_gaussian_process", "api/smac.model.gaussian_process.kernels", "api/smac.model.gaussian_process.kernels.base_kernels", "api/smac.model.gaussian_process.kernels.hamming_kernel", "api/smac.model.gaussian_process.kernels.matern_kernel", "api/smac.model.gaussian_process.kernels.rbf_kernel", "api/smac.model.gaussian_process.kernels.white_kernel", "api/smac.model.gaussian_process.mcmc_gaussian_process", "api/smac.model.gaussian_process.priors", "api/smac.model.gaussian_process.priors.abstract_prior", "api/smac.model.gaussian_process.priors.gamma_prior", "api/smac.model.gaussian_process.priors.horseshoe_prior", "api/smac.model.gaussian_process.priors.log_normal_prior", "api/smac.model.gaussian_process.priors.tophat_prior", "api/smac.model.multi_objective_model", "api/smac.model.random_forest", "api/smac.model.random_forest.abstract_random_forest", "api/smac.model.random_forest.random_forest", "api/smac.model.random_model", "api/smac.multi_objective", "api/smac.multi_objective.abstract_multi_objective_algorithm", "api/smac.multi_objective.aggregation_strategy", "api/smac.multi_objective.parego", "api/smac.random_design", "api/smac.random_design.abstract_random_design", "api/smac.random_design.annealing_design", "api/smac.random_design.modulus_design", "api/smac.random_design.probability_design", "api/smac.runhistory", "api/smac.runhistory.dataclasses", "api/smac.runhistory.encoder", "api/smac.runhistory.encoder.abstract_encoder", "api/smac.runhistory.encoder.boing_encoder", "api/smac.runhistory.encoder.eips_encoder", "api/smac.runhistory.encoder.encoder", "api/smac.runhistory.encoder.inverse_scaled_encoder", "api/smac.runhistory.encoder.log_encoder", "api/smac.runhistory.encoder.log_scaled_encoder", "api/smac.runhistory.encoder.scaled_encoder", "api/smac.runhistory.encoder.sqrt_scaled_encoder", "api/smac.runhistory.enumerations", "api/smac.runhistory.errors", "api/smac.runhistory.runhistory", "api/smac.runner", "api/smac.runner.abstract_runner", "api/smac.runner.abstract_serial_runner", "api/smac.runner.dask_runner", "api/smac.runner.exceptions", "api/smac.runner.target_function_runner", "api/smac.runner.target_function_script_runner", "api/smac.scenario", "api/smac.utils", "api/smac.utils.configspace", "api/smac.utils.data_structures", "api/smac.utils.logging", "api/smac.utils.multi_objective", "api/smac.utils.pareto_front", "api/smac.utils.subspaces", "api/smac.utils.subspaces.boing_subspace", "api/smac.utils.subspaces.turbo_subspace", "examples/1_basics/1_quadratic_function", "examples/1_basics/2_svm_cv", "examples/1_basics/3_ask_and_tell", "examples/1_basics/4_callback", "examples/1_basics/5_continue", "examples/1_basics/6_priors", "examples/1_basics/index", "examples/1_basics/sg_execution_times", "examples/2_multi_fidelity/1_mlp_epochs", "examples/2_multi_fidelity/2_sgd_datasets", "examples/2_multi_fidelity/index", "examples/2_multi_fidelity/sg_execution_times", "examples/3_multi_objective/1_schaffer", "examples/3_multi_objective/2_parego", "examples/3_multi_objective/index", "examples/3_multi_objective/sg_execution_times", "examples/5_commandline/1_call_target_function_script", "examples/5_commandline/index", "examples/5_commandline/sg_execution_times", "examples/index", "examples/sg_execution_times", "images/README", "index", "sg_execution_times"], "filenames": ["10_experimental.rst", "1_installation.rst", "2_package_overview.rst", "3_getting_started.rst", "4_minimal_example.rst", "5_api.rst", "6_references.rst", "7_glossary.rst", "8_faq.rst", "9_license.rst", "advanced_usage/10_continue.rst", "advanced_usage/11_reproducibility.rst", "advanced_usage/12_optimizations.rst", "advanced_usage/1_components.rst", "advanced_usage/2_multi_fidelity.rst", "advanced_usage/3_multi_objective.rst", "advanced_usage/4_instances.rst", "advanced_usage/5_ask_and_tell.rst", "advanced_usage/6_commandline.rst", "advanced_usage/7_stopping_criteria.rst", "advanced_usage/8_logging.rst", "advanced_usage/9_parallelism.rst", "advanced_usage/index.rst", "api/smac.acquisition.rst", "api/smac.acquisition.function.rst", "api/smac.acquisition.function.abstract_acquisition_function.rst", "api/smac.acquisition.function.confidence_bound.rst", "api/smac.acquisition.function.expected_improvement.rst", "api/smac.acquisition.function.integrated_acquisition_function.rst", "api/smac.acquisition.function.prior_acqusition_function.rst", "api/smac.acquisition.function.probability_improvement.rst", "api/smac.acquisition.function.thompson.rst", "api/smac.acquisition.maximizer.rst", "api/smac.acquisition.maximizer.abstract_acqusition_maximizer.rst", "api/smac.acquisition.maximizer.differential_evolution.rst", "api/smac.acquisition.maximizer.helpers.rst", "api/smac.acquisition.maximizer.local_and_random_search.rst", "api/smac.acquisition.maximizer.local_search.rst", "api/smac.acquisition.maximizer.random_search.rst", "api/smac.callback.rst", "api/smac.callback.callback.rst", "api/smac.callback.metadata_callback.rst", "api/smac.facade.rst", "api/smac.facade.abstract_facade.rst", "api/smac.facade.algorithm_configuration_facade.rst", "api/smac.facade.blackbox_facade.rst", "api/smac.facade.hyperband_facade.rst", "api/smac.facade.hyperparameter_optimization_facade.rst", "api/smac.facade.multi_fidelity_facade.rst", "api/smac.facade.random_facade.rst", "api/smac.initial_design.rst", "api/smac.initial_design.abstract_initial_design.rst", "api/smac.initial_design.default_design.rst", "api/smac.initial_design.factorial_design.rst", "api/smac.initial_design.latin_hypercube_design.rst", "api/smac.initial_design.random_design.rst", "api/smac.initial_design.sobol_design.rst", "api/smac.intensifier.rst", "api/smac.intensifier.abstract_intensifier.rst", "api/smac.intensifier.hyperband.rst", "api/smac.intensifier.intensifier.rst", "api/smac.intensifier.successive_halving.rst", "api/smac.main.rst", "api/smac.main.config_selector.rst", "api/smac.main.smbo.rst", "api/smac.model.rst", "api/smac.model.abstract_model.rst", "api/smac.model.gaussian_process.rst", "api/smac.model.gaussian_process.abstract_gaussian_process.rst", "api/smac.model.gaussian_process.gaussian_process.rst", "api/smac.model.gaussian_process.gpytorch_gaussian_process.rst", "api/smac.model.gaussian_process.kernels.rst", "api/smac.model.gaussian_process.kernels.base_kernels.rst", "api/smac.model.gaussian_process.kernels.hamming_kernel.rst", "api/smac.model.gaussian_process.kernels.matern_kernel.rst", "api/smac.model.gaussian_process.kernels.rbf_kernel.rst", "api/smac.model.gaussian_process.kernels.white_kernel.rst", "api/smac.model.gaussian_process.mcmc_gaussian_process.rst", "api/smac.model.gaussian_process.priors.rst", "api/smac.model.gaussian_process.priors.abstract_prior.rst", "api/smac.model.gaussian_process.priors.gamma_prior.rst", "api/smac.model.gaussian_process.priors.horseshoe_prior.rst", "api/smac.model.gaussian_process.priors.log_normal_prior.rst", "api/smac.model.gaussian_process.priors.tophat_prior.rst", "api/smac.model.multi_objective_model.rst", "api/smac.model.random_forest.rst", "api/smac.model.random_forest.abstract_random_forest.rst", "api/smac.model.random_forest.random_forest.rst", "api/smac.model.random_model.rst", "api/smac.multi_objective.rst", "api/smac.multi_objective.abstract_multi_objective_algorithm.rst", "api/smac.multi_objective.aggregation_strategy.rst", "api/smac.multi_objective.parego.rst", "api/smac.random_design.rst", "api/smac.random_design.abstract_random_design.rst", "api/smac.random_design.annealing_design.rst", "api/smac.random_design.modulus_design.rst", "api/smac.random_design.probability_design.rst", "api/smac.runhistory.rst", "api/smac.runhistory.dataclasses.rst", "api/smac.runhistory.encoder.rst", "api/smac.runhistory.encoder.abstract_encoder.rst", "api/smac.runhistory.encoder.boing_encoder.rst", "api/smac.runhistory.encoder.eips_encoder.rst", "api/smac.runhistory.encoder.encoder.rst", "api/smac.runhistory.encoder.inverse_scaled_encoder.rst", "api/smac.runhistory.encoder.log_encoder.rst", "api/smac.runhistory.encoder.log_scaled_encoder.rst", "api/smac.runhistory.encoder.scaled_encoder.rst", "api/smac.runhistory.encoder.sqrt_scaled_encoder.rst", "api/smac.runhistory.enumerations.rst", "api/smac.runhistory.errors.rst", "api/smac.runhistory.runhistory.rst", "api/smac.runner.rst", "api/smac.runner.abstract_runner.rst", "api/smac.runner.abstract_serial_runner.rst", "api/smac.runner.dask_runner.rst", "api/smac.runner.exceptions.rst", "api/smac.runner.target_function_runner.rst", "api/smac.runner.target_function_script_runner.rst", "api/smac.scenario.rst", "api/smac.utils.rst", "api/smac.utils.configspace.rst", "api/smac.utils.data_structures.rst", "api/smac.utils.logging.rst", "api/smac.utils.multi_objective.rst", "api/smac.utils.pareto_front.rst", "api/smac.utils.subspaces.rst", "api/smac.utils.subspaces.boing_subspace.rst", "api/smac.utils.subspaces.turbo_subspace.rst", "examples/1_basics/1_quadratic_function.rst", "examples/1_basics/2_svm_cv.rst", "examples/1_basics/3_ask_and_tell.rst", "examples/1_basics/4_callback.rst", "examples/1_basics/5_continue.rst", "examples/1_basics/6_priors.rst", "examples/1_basics/index.rst", "examples/1_basics/sg_execution_times.rst", "examples/2_multi_fidelity/1_mlp_epochs.rst", "examples/2_multi_fidelity/2_sgd_datasets.rst", "examples/2_multi_fidelity/index.rst", "examples/2_multi_fidelity/sg_execution_times.rst", "examples/3_multi_objective/1_schaffer.rst", "examples/3_multi_objective/2_parego.rst", "examples/3_multi_objective/index.rst", "examples/3_multi_objective/sg_execution_times.rst", "examples/5_commandline/1_call_target_function_script.rst", "examples/5_commandline/index.rst", "examples/5_commandline/sg_execution_times.rst", "examples/index.rst", "examples/sg_execution_times.rst", "images/README.md", "index.rst", "sg_execution_times.rst"], "titles": ["Experimental", "Installation", "Package Overview", "Getting Started", "Minimal Example", "API References", "References", "Glossary", "F.A.Q.", "License", "Continue", "Reproducibility", "Optimizations", "Components", "Multi-Fidelity Optimization", "Multi-Objective Optimization", "Optimization across Instances", "Ask-and-Tell Interface", "Command-Line Interface", "Stopping Criteria", "Logging", "Parallelism", "Advanced Usage", "smac.acquisition", "smac.acquisition.function", "smac.acquisition.function.abstract_acquisition_function", "smac.acquisition.function.confidence_bound", "smac.acquisition.function.expected_improvement", "smac.acquisition.function.integrated_acquisition_function", "smac.acquisition.function.prior_acqusition_function", "smac.acquisition.function.probability_improvement", "smac.acquisition.function.thompson", "smac.acquisition.maximizer", "smac.acquisition.maximizer.abstract_acqusition_maximizer", "smac.acquisition.maximizer.differential_evolution", "smac.acquisition.maximizer.helpers", "smac.acquisition.maximizer.local_and_random_search", "smac.acquisition.maximizer.local_search", "smac.acquisition.maximizer.random_search", "smac.callback", "smac.callback.callback", "smac.callback.metadata_callback", "smac.facade", "smac.facade.abstract_facade", "smac.facade.algorithm_configuration_facade", "smac.facade.blackbox_facade", "smac.facade.hyperband_facade", "smac.facade.hyperparameter_optimization_facade", "smac.facade.multi_fidelity_facade", "smac.facade.random_facade", "smac.initial_design", "smac.initial_design.abstract_initial_design", "smac.initial_design.default_design", "smac.initial_design.factorial_design", "smac.initial_design.latin_hypercube_design", "smac.initial_design.random_design", "smac.initial_design.sobol_design", "smac.intensifier", "smac.intensifier.abstract_intensifier", "smac.intensifier.hyperband", "smac.intensifier.intensifier", "smac.intensifier.successive_halving", "smac.main", "smac.main.config_selector", "smac.main.smbo", "smac.model", "smac.model.abstract_model", "smac.model.gaussian_process", "smac.model.gaussian_process.abstract_gaussian_process", "smac.model.gaussian_process.gaussian_process", "smac.model.gaussian_process.gpytorch_gaussian_process", "smac.model.gaussian_process.kernels", "smac.model.gaussian_process.kernels.base_kernels", "smac.model.gaussian_process.kernels.hamming_kernel", "smac.model.gaussian_process.kernels.matern_kernel", "smac.model.gaussian_process.kernels.rbf_kernel", "smac.model.gaussian_process.kernels.white_kernel", "smac.model.gaussian_process.mcmc_gaussian_process", "smac.model.gaussian_process.priors", "smac.model.gaussian_process.priors.abstract_prior", "smac.model.gaussian_process.priors.gamma_prior", "smac.model.gaussian_process.priors.horseshoe_prior", "smac.model.gaussian_process.priors.log_normal_prior", "smac.model.gaussian_process.priors.tophat_prior", "smac.model.multi_objective_model", "smac.model.random_forest", "smac.model.random_forest.abstract_random_forest", "smac.model.random_forest.random_forest", "smac.model.random_model", "smac.multi_objective", "smac.multi_objective.abstract_multi_objective_algorithm", "smac.multi_objective.aggregation_strategy", "smac.multi_objective.parego", "smac.random_design", "smac.random_design.abstract_random_design", "smac.random_design.annealing_design", "smac.random_design.modulus_design", "smac.random_design.probability_design", "smac.runhistory", "smac.runhistory.dataclasses", "smac.runhistory.encoder", "smac.runhistory.encoder.abstract_encoder", "smac.runhistory.encoder.boing_encoder", "smac.runhistory.encoder.eips_encoder", "smac.runhistory.encoder.encoder", "smac.runhistory.encoder.inverse_scaled_encoder", "smac.runhistory.encoder.log_encoder", "smac.runhistory.encoder.log_scaled_encoder", "smac.runhistory.encoder.scaled_encoder", "smac.runhistory.encoder.sqrt_scaled_encoder", "smac.runhistory.enumerations", "smac.runhistory.errors", "smac.runhistory.runhistory", "smac.runner", "smac.runner.abstract_runner", "smac.runner.abstract_serial_runner", "smac.runner.dask_runner", "smac.runner.exceptions", "smac.runner.target_function_runner", "smac.runner.target_function_script_runner", "smac.scenario", "smac.utils", "smac.utils.configspace", "smac.utils.data_structures", "smac.utils.logging", "smac.utils.multi_objective", "smac.utils.pareto_front", "smac.utils.subspaces", "smac.utils.subspaces.boing_subspace", "smac.utils.subspaces.turbo_subspace", "Quadratic Function", "Support Vector Machine with Cross-Validation", "Ask-and-Tell", "Custom Callback", "Continue an Optimization", "User Priors over the Optimum", "Basics", "Computation times", "Multi-Layer Perceptron Using Multiple Epochs", "Stochastic Gradient Descent On Multiple Datasets", "Multi-Fidelity and Multi-Instances", "Computation times", "2D Schaffer Function with Objective Weights", "ParEGO", "Multi-Objective", "Computation times", "Call Target Function From Script", "Command-Line Interface", "Computation times", "Examples", "Computation times", "Overview Figure", "Home", "Computation times"], "terms": {"thi": [0, 1, 2, 3, 8, 9, 13, 15, 16, 20, 21, 22, 24, 25, 32, 33, 36, 39, 40, 42, 43, 45, 47, 48, 49, 50, 51, 57, 58, 60, 61, 63, 64, 65, 66, 67, 69, 71, 72, 73, 77, 78, 79, 83, 85, 87, 93, 94, 96, 98, 99, 112, 113, 114, 115, 116, 117, 118, 120, 122, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 147, 149, 152], "part": [0, 20, 32, 33, 57, 58], "i": [0, 1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 29, 32, 33, 34, 36, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 81, 84, 85, 87, 93, 94, 95, 96, 97, 98, 99, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 147, 149, 152], "might": [0, 1, 12, 13, 17, 21, 57, 58, 60, 71, 72, 98, 112, 113, 114, 115, 116], "work": [0, 1, 7, 8, 13, 14, 16, 21, 22, 113, 116, 130, 131, 133, 143], "each": [0, 1, 7, 13, 14, 16, 19, 24, 29, 32, 35, 37, 42, 43, 46, 48, 57, 58, 61, 63, 64, 67, 69, 77, 89, 90, 92, 93, 97, 98, 112, 113, 116, 120, 143], "case": [0, 1, 2, 3, 13, 14, 15, 17, 21, 24, 29, 32, 36, 42, 43, 44, 45, 46, 47, 48, 49, 57, 58, 60, 61, 63, 64, 98, 99, 112, 113, 114, 115, 116, 120, 134, 139, 149], "If": [0, 1, 3, 8, 9, 10, 13, 17, 18, 19, 22, 24, 29, 32, 33, 42, 43, 47, 49, 57, 58, 60, 61, 63, 64, 65, 67, 71, 72, 77, 84, 85, 87, 93, 96, 98, 100, 101, 112, 113, 116, 119, 120, 124, 125, 131, 139, 152], "you": [0, 1, 2, 3, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 20, 21, 22, 42, 43, 47, 49, 67, 77, 113, 116, 120, 131, 133, 135, 138, 142, 147, 149, 152], "would": [0, 1, 3, 13, 42, 43, 64, 113, 114, 116, 118], "like": [0, 1, 13, 18, 19, 42, 43, 49, 57, 58, 60, 61, 64, 113, 114, 116, 118, 131, 133, 135], "suggest": [0, 1, 113, 117], "ani": [0, 1, 2, 7, 8, 9, 10, 13, 20, 24, 25, 26, 27, 28, 29, 30, 32, 33, 36, 37, 42, 43, 46, 48, 50, 51, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 112, 113, 114, 115, 116, 118, 119, 120, 130, 134, 135, 146], "chang": [0, 1, 3, 10, 13, 20, 57, 58, 61, 71, 72, 98, 112, 131, 135], "pleas": [0, 1, 2, 3, 8, 9, 10, 13, 14, 17, 18, 21, 24, 31, 42, 49, 57, 58, 98, 112, 131, 133, 152], "let": [0, 1, 7, 13, 130, 131, 132, 133, 135, 138, 143, 146], "u": [0, 1, 8], "know": [0, 1, 12, 71, 72, 130, 132], "smac": [0, 1, 2, 3, 4, 7, 8, 10, 12, 13, 15, 17, 18, 19, 20, 21, 22, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 147, 149, 152], "can": [0, 1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 32, 33, 34, 37, 42, 43, 46, 48, 57, 58, 61, 64, 67, 77, 98, 112, 113, 114, 115, 116, 118, 120, 124, 131, 132, 134, 135, 138, 142, 143, 147, 149, 152], "subsystem": [0, 1], "linux": [0, 1], "under": [0, 1, 9], "1": [0, 3, 4, 12, 13, 14, 19, 20, 24, 25, 26, 27, 30, 32, 34, 42, 46, 47, 48, 57, 59, 60, 61, 63, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 78, 80, 84, 85, 87, 89, 90, 91, 92, 100, 103, 120, 122, 123, 125, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 148, 152], "workflow": 0, "wa": [0, 10, 13, 19, 24, 25, 57, 61, 63, 64, 98, 112, 113, 116, 134], "test": [0, 1, 18, 65, 66, 67, 69, 98, 112, 119, 152], "ubuntu": 0, "18": 0, "04": 0, "For": [0, 3, 7, 8, 13, 15, 16, 42, 43, 45, 47, 48, 50, 51, 57, 58, 61, 63, 64, 71, 72, 113, 114, 115, 116, 118, 120, 138, 152], "20": [0, 3, 20, 42, 44, 45, 47, 67, 77, 85, 87, 132, 133, 138, 141, 153], "ha": [0, 1, 2, 19, 21, 32, 33, 42, 43, 50, 51, 57, 58, 61, 64, 71, 72, 99, 113, 114, 116, 118], "been": [0, 1, 2, 8, 13, 17, 19, 21, 57, 58, 61, 63, 98, 99, 112, 113, 114, 115, 116, 132], "observ": [0, 7, 13, 24, 27, 42, 48, 57, 58, 98, 112, 122], "result": [0, 2, 3, 10, 13, 17, 42, 43, 57, 58, 64, 113, 114, 115, 116, 118, 119, 120, 130, 131, 134, 138, 146], "segment": 0, "fault": 0, "core": [0, 3, 12, 42, 43, 64, 113, 114, 116, 118, 152], "dump": 0, "2": [0, 3, 7, 13, 24, 26, 32, 34, 35, 37, 42, 47, 57, 60, 85, 87, 93, 96, 130, 131, 132, 133, 135, 138, 139, 141, 142, 143, 145], "get": [0, 1, 13, 32, 33, 34, 38, 57, 58, 61, 71, 72, 113, 116, 124, 130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "anaconda": [0, 8], "download": [0, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 149], "an": [0, 1, 2, 3, 7, 8, 13, 14, 15, 17, 18, 21, 24, 25, 32, 33, 35, 39, 40, 42, 43, 44, 45, 47, 49, 57, 58, 60, 67, 77, 89, 91, 93, 94, 95, 96, 97, 98, 99, 112, 113, 114, 115, 116, 117, 118, 119, 123, 124, 130, 131, 135, 136, 137, 138, 139, 143, 149, 152, 153], "version": [0, 1, 3, 8, 13, 19, 20, 32, 36], "drive": 0, "d": [0, 18, 20, 24, 26, 146], "e": [0, 1, 2, 7, 12, 13, 15, 18, 21, 24, 27, 32, 36, 42, 46, 48, 57, 61, 63, 78, 80, 113, 114, 139], "g": [0, 2, 6, 7, 12, 13, 15, 18, 21, 32, 36, 139], "anaconda3": 0, "2023": 0, "03": [0, 141, 148, 153], "x86_64": 0, "In": [0, 3, 7, 12, 13, 14, 15, 16, 18, 19, 22, 32, 33, 42, 43, 57, 58, 61, 64, 67, 69, 77, 78, 79, 83, 98, 99, 112, 113, 114, 115, 116, 118, 120, 133, 134, 138, 139, 142, 143, 152], "resourc": [0, 21, 113, 116, 118], "ar": [0, 2, 3, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 27, 32, 35, 36, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 77, 79, 85, 87, 98, 100, 101, 112, 113, 114, 115, 116, 118, 119, 120, 122, 125, 130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "mount": 0, "mnt": 0, "cd": [0, 1], "bash": [0, 18, 146], "enter": 0, "command": [0, 1, 2, 7, 21, 22], "creat": [0, 1, 8, 24, 25, 26, 27, 28, 29, 30, 32, 33, 36, 37, 42, 43, 50, 51, 57, 58, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 113, 114, 116, 118, 119, 131, 134, 135, 138, 139, 143], "environ": [0, 1, 3, 4, 42, 43, 120, 130, 133, 134, 135, 138, 143, 146], "variabl": [0, 3, 18, 57, 58, 59, 60, 61, 64, 120, 135, 138, 143], "export": 0, "path": [0, 3, 18, 20, 42, 43, 64, 98, 112, 120, 124], "home": [0, 131, 133], "user": [0, 6, 10, 12, 13, 17, 18, 19, 20, 24, 29, 32, 36, 42, 43, 46, 48, 57, 60, 61, 64, 113, 114, 116, 118, 136, 137, 149, 153], "bin": [0, 18, 24, 29, 146], "input": [0, 2, 7, 13, 24, 26, 42, 46, 48, 57, 60, 61, 65, 66, 67, 69, 79, 84, 85, 87, 100, 104, 125, 132], "python": [0, 1, 2, 8, 18, 35, 67, 69, 77, 79, 113, 118, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 147, 149, 152], "check": [0, 1, 13, 57, 58, 63, 64, 93, 94, 95, 96, 97, 98, 112, 113, 114, 120, 134], "success": [0, 7, 14, 17, 18, 42, 46, 48, 57, 61, 98, 99, 100, 101, 103, 104, 106, 107, 108, 112, 119, 138, 139], "3": [0, 1, 7, 9, 13, 15, 42, 44, 45, 46, 47, 48, 49, 57, 59, 60, 61, 85, 87, 93, 96, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 152], "your": [0, 1, 2, 3, 7, 8, 15, 16, 18, 20, 21, 22, 42, 43, 64, 113, 114, 116, 118, 120, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "folder": [0, 64], "gener": [0, 3, 7, 8, 10, 12, 13, 14, 35, 42, 43, 50, 54, 56, 57, 58, 89, 90, 113, 114, 115, 116, 120, 131, 151, 152], "softwar": [0, 9], "sudo": 0, "apt": [0, 1], "properti": [0, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 42, 43, 50, 51, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 112, 113, 114, 118, 119, 120, 130, 131, 132, 133, 134, 135, 138, 139, 143], "common": [0, 3, 113, 114, 116, 135], "updat": [0, 1, 13, 18, 24, 25, 39, 40, 42, 43, 49, 57, 58, 64, 89, 90, 92, 98, 112, 134], "build": [0, 1, 131, 135, 138, 139], "essenti": [0, 39, 40], "swig": [0, 1], "conda": 0, "gxx_linux": [0, 1], "64": [0, 1, 32, 37], "gcc_linux": [0, 1], "curl": 0, "http": [0, 1, 6, 9, 24, 28, 50, 54, 56, 89, 92, 126, 138, 152], "raw": 0, "githubusercont": 0, "com": [0, 1, 126, 152], "automl": [0, 1, 8, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 152], "smac3": [0, 1, 8, 131, 133, 152], "master": 0, "requir": [0, 3, 8, 13, 14, 21, 24, 25, 29, 31, 32, 34, 57, 61, 63, 85, 87, 98, 112, 113, 114, 118, 119, 120, 139], "txt": 0, "xarg": 0, "n": [0, 1, 6, 24, 25, 28, 31, 57, 60, 63, 67, 69, 77, 79, 113, 116, 123, 142, 143, 150], "l": [0, 6], "pip": [0, 1], "written": [1, 57, 58, 152], "python3": [1, 131, 138, 152], "therefor": [1, 3, 7, 13, 42, 49, 71, 72, 120, 138, 143], "8": [1, 3, 12, 13, 42, 43, 45, 57, 61, 63, 85, 87, 131, 135, 138, 142, 143, 146, 152], "furthermor": [1, 57, 58, 133], "random": [1, 3, 7, 22, 24, 29, 32, 33, 35, 36, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 55, 57, 58, 60, 61, 65, 66, 85, 86, 87, 88, 93, 94, 95, 96, 97, 120, 131, 135, 138, 143, 152], "forest": [1, 3, 7, 13, 24, 29, 32, 36, 42, 44, 47, 65, 66, 85, 86, 87, 131, 135, 152], "us": [1, 2, 3, 4, 7, 8, 9, 11, 13, 14, 15, 16, 18, 19, 21, 24, 25, 29, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 81, 83, 84, 85, 87, 93, 95, 96, 97, 98, 99, 100, 101, 105, 106, 107, 109, 112, 113, 114, 116, 118, 119, 120, 122, 123, 124, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 146, 147, 149, 152, 153], "depend": [1, 2, 3, 8, 12, 13, 18, 22, 42, 45, 65, 66, 89, 90, 113, 117, 120, 131], "either": [1, 3, 8, 42, 43, 67, 77, 98, 112, 113, 118], "system": 1, "directli": [1, 3, 13, 14, 15, 18, 113, 118], "The": [1, 2, 3, 4, 7, 8, 10, 12, 13, 14, 15, 18, 19, 20, 21, 24, 25, 32, 33, 34, 36, 42, 43, 44, 45, 47, 49, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 80, 83, 84, 85, 87, 93, 94, 96, 98, 99, 100, 101, 112, 113, 114, 115, 116, 118, 119, 120, 122, 126, 130, 132, 138, 142, 143, 152], "machin": [1, 4, 24, 28, 136, 137, 149, 152, 153], "follow": [1, 2, 3, 4, 8, 12, 13, 15, 16, 18, 20, 42, 49, 57, 60, 61, 85, 87, 113, 114, 116, 119, 146, 152], "mac": [1, 8], "9": [1, 32, 34, 138, 139, 142, 152], "10": [1, 3, 7, 20, 24, 29, 32, 36, 37, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 67, 69, 85, 87, 130, 131, 132, 133, 134, 135, 138, 142, 143, 152], "we": [1, 3, 7, 8, 13, 15, 16, 18, 22, 24, 31, 32, 33, 42, 43, 49, 57, 58, 61, 63, 64, 67, 77, 79, 113, 114, 116, 118, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 149, 152], "recommend": [1, 8, 12, 13, 18, 22], "activ": [1, 8, 71, 72, 113, 116, 135, 138, 143], "haven": 1, "t": [1, 3, 8, 24, 26, 27, 30, 31, 71, 72, 134], "yet": [1, 8, 57, 61, 130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "insid": [1, 13, 21, 133], "now": [1, 15, 130, 131, 132, 133, 134, 139, 146], "pypi": 1, "Or": [1, 15], "altern": [1, 15, 131, 139], "clone": 1, "from": [1, 2, 3, 4, 8, 10, 13, 18, 19, 20, 32, 33, 34, 36, 42, 43, 49, 50, 51, 57, 58, 60, 61, 63, 64, 67, 69, 71, 72, 79, 98, 112, 113, 114, 116, 118, 119, 120, 126, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 147, 148, 149, 150, 153], "github": [1, 8, 50, 56, 126, 152], "git": 1, "dev": 1, "channel": 1, "achiev": [1, 3], "ad": [1, 13, 39, 40, 57, 58, 60, 61, 71, 72, 98, 112, 122, 130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "config": [1, 3, 4, 7, 13, 39, 40, 42, 43, 48, 50, 51, 57, 58, 60, 61, 63, 64, 98, 99, 110, 112, 113, 114, 116, 118, 119, 120, 122, 126, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "add": [1, 8, 13, 16, 42, 43, 44, 45, 47, 48, 49, 50, 51, 57, 60, 61, 64, 98, 112, 131, 135, 138, 139, 143], "set": [1, 2, 6, 8, 10, 13, 18, 19, 42, 45, 46, 47, 48, 49, 50, 51, 57, 58, 59, 60, 61, 64, 93, 95, 97, 98, 112, 113, 118, 120, 124, 125, 131, 134, 135, 142, 143, 146], "channel_prior": 1, "strict": 1, "must": [1, 3, 18, 32, 33, 35, 42, 44, 45, 47, 49, 65, 66, 71, 72, 78, 79, 80, 83, 84, 89, 91, 113, 118, 119, 120, 138], "have": [1, 7, 8, 9, 10, 13, 14, 15, 17, 18, 21, 32, 36, 42, 43, 49, 57, 58, 63, 64, 98, 99, 112, 113, 114, 115, 116, 118, 132, 135, 138, 139, 143], "4": [1, 2, 13, 18, 42, 44, 57, 61, 119, 130, 132, 133, 135, 138, 139, 142, 143], "To": [1, 8, 10, 13, 16, 113, 116, 134, 135, 138], "current": [1, 7, 10, 13, 21, 24, 25, 27, 28, 32, 33, 42, 43, 49, 57, 58, 59, 60, 61, 64, 67, 69, 93, 97, 98, 99, 100, 101, 112, 133], "instruct": 1, "offici": 1, "document": [1, 3, 32, 34, 57, 59], "onc": [1, 13, 21, 32, 37, 42, 46, 48, 49, 57, 61, 135, 138, 143], "enabl": [1, 18, 42, 44, 47, 85, 87, 98, 112], "read": [1, 10, 22, 98, 112, 134], "feedstock": 1, "more": [1, 3, 7, 12, 13, 15, 19, 22, 42, 48, 57, 58, 60, 113, 114, 116, 131, 142], "detail": [1, 3, 7, 24, 28, 29, 42, 48, 138], "find": [1, 2, 3, 4, 7, 13, 32, 34, 57, 58, 63, 130, 131, 132, 133, 134, 146], "how": [1, 7, 8, 13, 14, 15, 18, 20, 22, 42, 43, 44, 45, 46, 47, 48, 49, 57, 58, 60, 61, 63, 64, 98, 99, 112, 113, 114, 116, 119, 123, 132, 138, 142, 143, 146, 149], "do": [1, 10, 13, 15, 16, 18, 20, 24, 31, 42, 43, 49, 64, 113, 114, 116, 118, 134, 135, 146], "here": [1, 3, 8, 13, 19, 24, 31, 57, 58, 63, 130, 134, 135, 139, 146, 152], "howev": [1, 3, 7, 8, 13, 15, 17, 18, 22, 42, 43, 57, 61, 63, 119, 142], "support": [2, 3, 4, 13, 21, 42, 44, 46, 48, 57, 58, 60, 61, 71, 72, 136, 137, 149, 153], "determin": [2, 8, 14, 42, 43, 57, 58, 67, 71, 72, 77, 115], "well": [2, 13, 17, 24, 29, 113, 114, 131, 132, 135], "perform": [2, 3, 7, 8, 13, 14, 18, 32, 36, 37, 42, 43, 44, 46, 47, 48, 49, 57, 58, 61, 64, 85, 87, 98, 112, 113, 114, 120, 124, 139, 152], "hyperparamet": [2, 3, 4, 6, 7, 13, 18, 24, 28, 29, 32, 36, 42, 43, 45, 47, 48, 50, 51, 65, 66, 67, 69, 71, 72, 73, 77, 78, 79, 83, 84, 85, 87, 122, 130, 131, 132, 133, 134, 135, 138, 143, 146, 152], "configur": [2, 4, 7, 8, 12, 15, 17, 18, 22, 24, 25, 32, 33, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 60, 61, 63, 64, 78, 79, 83, 93, 94, 95, 96, 97, 98, 99, 100, 101, 112, 113, 114, 115, 116, 118, 119, 120, 122, 124, 126, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 152], "algorithm": [2, 3, 6, 7, 8, 14, 15, 22, 24, 28, 32, 34, 42, 43, 44, 45, 46, 47, 49, 57, 58, 98, 100, 101, 112, 113, 114, 118, 119, 126, 131, 139, 152], "By": [2, 138], "being": [2, 7, 71, 72, 113, 118], "robust": [2, 67, 69, 77, 79], "flexibl": [2, 67, 69, 77, 79], "framework": [2, 3, 7, 67, 69, 77, 79], "bayesian": [2, 6, 7, 13, 24, 28, 29, 42, 43, 64, 67, 69, 77, 79, 93, 96, 133, 152], "optim": [2, 3, 4, 6, 7, 8, 13, 17, 19, 20, 21, 22, 24, 26, 28, 29, 31, 32, 34, 36, 39, 40, 41, 42, 43, 49, 57, 58, 64, 67, 69, 77, 79, 89, 90, 93, 96, 120, 130, 131, 132, 133, 135, 136, 137, 138, 139, 142, 143, 146, 147, 149, 152, 153], "improv": [2, 3, 13, 24, 27, 30, 42, 44, 45, 47, 100, 103], "within": [2, 63, 113, 116], "few": [2, 7, 42, 49, 139], "function": [2, 6, 7, 8, 12, 14, 15, 21, 22, 32, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 47, 49, 63, 64, 67, 69, 71, 72, 77, 98, 100, 101, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 134, 135, 136, 137, 138, 139, 143, 144, 145, 147, 148, 149, 153], "evalu": [2, 3, 7, 8, 12, 13, 14, 19, 21, 24, 25, 32, 33, 34, 42, 43, 44, 45, 47, 49, 50, 51, 52, 55, 57, 58, 60, 61, 63, 71, 72, 93, 94, 95, 96, 97, 98, 99, 112, 113, 118, 120, 130, 131, 132, 133, 138, 139, 142, 143], "It": [2, 7, 13, 17, 57, 58, 63, 85, 87, 113, 116, 131, 132], "offer": [2, 3, 15, 113, 114], "sever": [2, 35, 39, 40, 149], "entri": [2, 3], "point": [2, 3, 13, 15, 24, 26, 32, 33, 36, 42, 44, 47, 57, 58, 65, 66, 67, 69, 84, 85, 87, 142], "pre": [2, 16], "typic": 2, "solv": 2, "low": [2, 3, 12, 13, 42, 49], "dimension": [2, 13, 42, 44, 65, 66, 67, 68, 69, 77, 85, 87, 132], "continu": [2, 13, 22, 32, 34, 42, 43, 45, 57, 58, 59, 60, 61, 63, 98, 112, 131, 132, 135, 136, 137, 138, 142, 149, 152, 153], "artifici": [2, 134], "global": [2, 7, 20, 32, 34, 57, 58], "problem": [2, 6, 7, 8, 42, 43, 113, 114, 116, 118, 119, 130, 132], "across": [2, 7, 22, 42, 43, 46, 48, 57, 61, 64, 98, 112, 113, 114, 116, 118, 139], "multipl": [2, 7, 8, 13, 14, 15, 21, 24, 29, 42, 43, 50, 51, 65, 84, 98, 112, 120, 135, 140, 141, 143, 149, 153], "instanc": [2, 3, 7, 8, 13, 14, 18, 19, 22, 42, 43, 44, 45, 46, 47, 48, 49, 57, 58, 60, 61, 64, 65, 66, 67, 68, 69, 77, 84, 85, 87, 98, 99, 100, 101, 112, 113, 114, 116, 118, 119, 120, 122, 126, 130, 132, 134, 135, 138, 139, 143, 146], "characterist": 2, "capabl": [2, 113, 116], "sampl": [2, 13, 15, 16, 24, 31, 32, 33, 35, 36, 38, 39, 40, 42, 43, 45, 47, 48, 49, 50, 51, 57, 60, 61, 63, 65, 66, 67, 69, 77, 79, 84, 85, 87, 120], "effici": [2, 3, 12, 32, 34, 57, 58, 98, 112, 152], "black": [2, 3, 7, 130], "box": [2, 3, 7, 130], "onli": [2, 7, 8, 11, 12, 13, 15, 18, 20, 21, 24, 25, 31, 42, 43, 46, 48, 50, 52, 57, 58, 60, 61, 63, 64, 65, 66, 71, 72, 84, 98, 100, 101, 112, 113, 115, 116, 120, 126, 130, 132, 134, 135, 138, 139, 142, 143, 146], "awar": 2, "output": [2, 7, 18, 64, 65, 66, 67, 69, 77, 120], "agnost": 2, "intern": [2, 14, 16, 42, 43, 50, 51, 57, 58, 59, 60, 61, 64, 65, 66, 67, 71, 72, 77, 78, 79, 83, 84, 89, 90, 92, 113, 114, 116, 118, 119, 120, 138], "categor": [2, 3, 32, 36, 42, 45, 131, 135, 138, 139, 143], "hierarch": 2, "condit": [2, 71, 72, 122, 131, 138, 139, 143], "integr": [2, 13, 24, 28, 67, 77, 133, 135], "configurationspac": [2, 3, 4, 32, 33, 35, 36, 37, 65, 66, 67, 68, 69, 77, 98, 112, 120, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "up": [2, 13, 57, 61, 63, 98, 112, 124, 130], "100": [2, 4, 7, 120, 130, 132, 133, 138, 139, 142], "object": [2, 3, 4, 7, 16, 18, 19, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 112, 113, 114, 115, 116, 118, 119, 120, 122, 125, 130, 131, 132, 133, 134, 135, 138, 139, 143, 145, 146, 153], "accuraci": [2, 3, 19, 135, 138, 143], "runtim": [2, 18, 19, 21, 24, 27, 64, 100, 103, 113, 114, 116, 118, 119], "cross": [2, 7, 120, 135, 136, 137, 138, 139, 143, 149, 153], "valid": [2, 3, 7, 42, 43, 57, 58, 61, 64, 65, 66, 120, 130, 132, 134, 135, 136, 137, 138, 139, 142, 143, 146, 149, 153], "possibl": [2, 3, 13, 24, 29, 42, 43, 71, 72, 139], "multi": [2, 3, 7, 18, 22, 42, 43, 44, 45, 46, 47, 48, 49, 57, 58, 60, 61, 64, 89, 90, 91, 92, 98, 99, 100, 101, 112, 113, 118, 119, 120, 135, 139, 141, 142, 143, 153], "arbitrari": [2, 3, 113, 114, 116, 118, 119, 132, 152], "number": [2, 7, 12, 13, 14, 16, 19, 21, 24, 26, 28, 29, 32, 33, 34, 36, 37, 42, 43, 44, 45, 47, 48, 49, 50, 51, 57, 58, 60, 61, 64, 65, 66, 67, 68, 69, 71, 72, 77, 79, 85, 87, 89, 91, 93, 94, 95, 96, 97, 98, 112, 113, 114, 115, 116, 118, 119, 120, 131, 135, 138, 139, 142, 143, 146, 152], "scalar": [2, 13, 15, 42, 43, 79, 98, 112], "both": [2, 3, 14, 15, 57, 58, 63, 115, 138, 143], "parego": [2, 6, 13, 15, 89, 144, 145, 149, 153], "know06": [2, 6, 15], "mean": [2, 4, 8, 13, 15, 16, 21, 42, 44, 45, 47, 49, 57, 60, 65, 66, 67, 69, 77, 78, 80, 82, 84, 85, 87, 89, 91, 98, 112, 120, 131, 135, 138, 139, 143], "aggreg": [2, 15, 42, 44, 45, 47, 49, 89, 91], "strategi": [2, 7, 15, 42, 43, 44, 45, 47, 49, 50, 51, 89, 90], "fidel": [2, 3, 7, 13, 19, 22, 42, 43, 48, 57, 58, 60, 61, 64, 98, 112, 120, 138, 139], "judg": [2, 42, 43, 64], "budget": [2, 3, 7, 13, 14, 17, 18, 19, 42, 43, 44, 46, 48, 49, 57, 58, 60, 61, 63, 64, 98, 99, 100, 101, 112, 113, 114, 116, 118, 119, 120, 126, 130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "discard": [2, 42, 46, 48, 57, 61], "unsuit": 2, "earli": [2, 42, 49], "massiv": 2, "speed": 2, "one": [2, 7, 8, 11, 12, 15, 18, 19, 21, 32, 35, 36, 42, 43, 49, 57, 58, 60, 61, 67, 77, 98, 100, 105, 107, 108, 109, 112, 113, 114, 115, 116, 119, 120, 130, 132, 134, 135, 139, 142, 143, 146], "dataset": [2, 4, 7, 16, 42, 43, 64, 113, 114, 116, 118, 120, 131, 135, 138, 140, 141, 143, 149, 153], "mani": [2, 3, 7, 12, 42, 44, 45, 46, 47, 48, 49, 57, 58, 60, 61, 63, 65, 84, 98, 99, 112], "line": [2, 6, 7, 21, 22, 131], "interfac": [2, 3, 7, 15, 22, 132], "execut": [2, 8, 13, 18, 21, 42, 43, 48, 64, 98, 112, 113, 114, 115, 116, 118, 119, 137, 141, 145, 148, 150, 153], "file": [2, 9, 10, 18, 22, 42, 43, 64, 98, 112, 120, 131, 134, 137, 141, 145, 148, 150, 153], "also": [2, 3, 7, 8, 13, 14, 18, 19, 21, 57, 58, 67, 77, 98, 112, 113, 114, 116, 119, 125, 131, 134, 135, 138, 143], "commandlin": 2, "consequ": 2, "implement": [2, 3, 8, 13, 24, 25, 32, 33, 36, 37, 50, 51, 57, 58, 60, 61, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 85, 87, 89, 92, 113, 114, 116, 138], "other": [2, 13, 19, 24, 31, 42, 43, 57, 58, 64, 98, 112], "languag": 2, "temporarili": 2, "disabl": [2, 20, 42, 45, 47, 48, 50, 51, 133], "v2": [2, 8, 17, 18], "0": [2, 3, 4, 8, 13, 15, 16, 17, 18, 19, 20, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 112, 119, 120, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 150, 153], "fall": 2, "back": [2, 13], "v1": [2, 18], "need": [2, 3, 13, 16, 18, 21, 22, 35, 42, 43, 57, 58, 60, 61, 71, 72, 98, 112, 113, 114, 115, 116, 131, 133, 139], "tabl": [2, 3, 20], "provid": [2, 3, 8, 13, 17, 19, 35, 42, 43, 46, 48, 57, 58, 61, 65, 84, 113, 116, 149], "": [2, 3, 6, 7, 8, 10, 13, 14, 20, 32, 36, 37, 42, 43, 64, 67, 69, 77, 79, 113, 114, 116, 118, 119, 120, 130, 131, 132, 133, 134, 135, 138, 143, 146], "tool": [2, 8, 152], "complex": [2, 13, 22, 113, 114], "space": [2, 13, 18, 24, 26, 27, 29, 32, 33, 34, 36, 42, 45, 47, 48, 49, 50, 51, 78, 79, 83, 119, 120, 130, 131, 135, 138, 139], "parallel": [2, 12, 22, 113, 114, 115, 116, 120], "hypermapp": 2, "optuna": 2, "hyperopt": 2, "botorch": 2, "openbox": 2, "hpbandster": [2, 8], "four": [3, 65, 66], "compon": [3, 18, 22, 42, 43, 44, 63, 65, 66, 67, 68, 69, 77, 85, 87, 134], "run": [3, 7, 8, 10, 12, 13, 14, 15, 18, 19, 22, 39, 40, 42, 43, 46, 48, 49, 57, 58, 59, 60, 61, 63, 64, 98, 112, 113, 114, 115, 116, 117, 118, 119, 120, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "process": [3, 6, 7, 8, 12, 13, 15, 17, 18, 19, 21, 32, 36, 39, 40, 42, 43, 45, 57, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 77, 79, 113, 114, 116, 118, 119, 120, 130, 133, 138, 139], "all": [3, 7, 13, 15, 17, 18, 19, 20, 22, 24, 29, 32, 36, 42, 43, 46, 48, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 71, 72, 79, 84, 85, 86, 87, 98, 100, 101, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 130, 131, 132, 135, 138, 139, 142, 149, 153], "which": [3, 7, 8, 13, 15, 18, 20, 21, 24, 25, 32, 35, 36, 42, 43, 44, 45, 49, 50, 51, 57, 58, 60, 61, 64, 65, 66, 67, 68, 69, 71, 72, 77, 84, 85, 87, 88, 93, 95, 97, 98, 112, 113, 114, 115, 116, 118, 119, 120, 126, 131, 132, 135, 138, 139, 152], "explain": [3, 13], "page": [3, 20, 22, 152], "thei": [3, 13, 17, 57, 60, 63], "interact": [3, 113, 114], "wai": [3, 20, 57, 58, 133], "defin": [3, 16, 19, 24, 29, 32, 33, 36, 42, 43, 64, 79, 98, 110, 113, 114, 120, 131, 132, 135, 138, 139, 143], "search": [3, 13, 24, 29, 32, 34, 36, 37, 42, 44, 45, 47, 49, 132], "tunabl": 3, "paramet": [3, 10, 13, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 42, 43, 44, 45, 47, 48, 49, 50, 51, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 131, 132, 135, 138, 139, 146, 152], "legal": 3, "rang": [3, 89, 90, 91, 92, 131, 132, 135, 138, 139], "default": [3, 8, 13, 14, 15, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 80, 81, 82, 83, 85, 87, 89, 91, 92, 93, 96, 97, 98, 99, 100, 101, 112, 113, 114, 116, 118, 119, 120, 122, 123, 124, 125, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "valu": [3, 13, 14, 15, 18, 19, 24, 25, 26, 27, 28, 29, 31, 32, 33, 39, 40, 42, 43, 49, 64, 65, 66, 67, 69, 71, 72, 77, 79, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 122, 125, 130, 131, 132, 133, 134, 135, 138, 143, 146], "configspac": [3, 4, 32, 33, 34, 35, 36, 37, 38, 65, 66, 67, 68, 69, 77, 85, 87, 88, 98, 112, 120, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "import": [3, 4, 8, 13, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "c": [3, 4, 89, 92, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 152], "myfloat": 3, "5": [3, 4, 13, 18, 32, 36, 42, 44, 47, 71, 74, 85, 87, 100, 101, 103, 104, 106, 107, 108, 113, 116, 119, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 152], "uniform": [3, 32, 36, 135], "float": [3, 4, 18, 24, 26, 27, 28, 29, 30, 31, 32, 36, 42, 43, 44, 45, 47, 48, 49, 50, 51, 57, 58, 64, 65, 66, 67, 68, 69, 77, 78, 79, 80, 81, 82, 83, 85, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 112, 113, 114, 116, 118, 119, 120, 122, 125, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143], "myint": 3, "integ": [3, 93, 95, 96, 97, 124, 131, 135, 138, 143], "speci": 3, "mous": 3, "cat": 3, "dog": 3, "see": [3, 7, 8, 9, 13, 14, 21, 24, 28, 29, 50, 54, 56, 57, 59, 98, 112, 142], "take": [3, 8, 12, 13, 17, 42, 43, 65, 66, 85, 87, 113, 116, 138], "return": [3, 4, 7, 13, 15, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "exampl": [3, 7, 8, 10, 13, 14, 15, 16, 17, 18, 21, 24, 25, 42, 43, 45, 47, 48, 50, 51, 57, 58, 61, 63, 64, 113, 114, 116, 118, 119, 120, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 150, 153], "could": [3, 8, 13, 18, 113, 117, 120, 139], "neural": [3, 138], "network": [3, 42, 43, 64, 113, 114, 116, 118, 135, 138], "predict": [3, 13, 32, 36, 65, 66, 84, 85, 87], "data": [3, 4, 7, 10, 13, 14, 24, 25, 26, 27, 28, 29, 30, 32, 33, 36, 37, 42, 43, 44, 47, 50, 51, 57, 58, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 112, 113, 114, 116, 118, 119, 120, 130, 131, 134, 135, 138, 139, 143, 146], "some": [3, 21, 22, 57, 60, 71, 72, 100, 101, 133], "tune": [3, 32, 37, 67, 77, 135], "learn": [3, 24, 28, 135, 138, 152], "rate": [3, 135, 138], "everi": [3, 13, 42, 43, 57, 58, 64, 93, 95, 96, 113, 114, 116, 118], "final": [3, 93, 95], "tri": 3, "best": [3, 4, 7, 13, 24, 26, 27, 32, 36, 42, 43, 46, 48, 49, 57, 61, 64, 130, 131, 132, 133, 134, 139, 143, 146], "try": [3, 8, 42, 47, 139], "differ": [3, 7, 8, 13, 16, 17, 18, 32, 36, 39, 40, 42, 43, 57, 58, 85, 87, 89, 90, 113, 114, 120, 122, 123, 135, 138, 139, 143], "def": [3, 4, 13, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143], "train": [3, 4, 7, 13, 15, 16, 21, 39, 40, 42, 43, 47, 57, 58, 63, 65, 66, 67, 68, 69, 77, 85, 87, 100, 101, 120, 130, 131, 132, 133, 134, 135, 138, 139, 143], "self": [3, 13, 32, 33, 57, 58, 65, 66, 67, 71, 72, 77, 78, 79, 83, 93, 95, 98, 112, 113, 114, 115, 116, 130, 131, 132, 133, 134, 135, 138, 139, 143], "seed": [3, 4, 7, 8, 10, 13, 18, 19, 32, 33, 34, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 108, 112, 113, 114, 116, 118, 119, 120, 126, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "int": [3, 4, 24, 26, 32, 33, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 112, 113, 114, 115, 116, 118, 119, 120, 122, 124, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143], "model": [3, 7, 8, 12, 15, 16, 21, 22, 24, 25, 28, 29, 32, 36, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 63, 64, 100, 101, 113, 116, 120, 130, 131, 132, 133, 134, 135, 139, 152], "multilayerperceptron": 3, "learning_r": [3, 138, 139, 143], "fit": [3, 9, 24, 25, 65, 88], "alwai": [3, 8, 13, 57, 58, 61, 132], "minim": [3, 19, 32, 37, 93, 95], "smaller": [3, 42, 48, 85, 87, 122], "better": [3, 12, 13, 42, 49, 57, 58, 60, 130, 132, 134, 135, 138, 139, 143, 146, 152], "argument": [3, 13, 14, 18, 21, 24, 25, 42, 43, 45, 47, 48, 50, 51, 64, 71, 72, 113, 114, 116, 118, 119, 120, 139, 143, 146], "intensifi": [3, 12, 14, 15, 20, 22, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 64, 113, 114, 115, 116, 120, 132, 133, 134, 135, 138, 142, 143], "first": [3, 8, 10, 13, 17, 18, 42, 43, 57, 58, 60, 61, 63, 71, 72, 98, 112, 113, 117, 118, 123, 131, 134, 142, 146], "name": [3, 10, 15, 16, 20, 24, 25, 26, 27, 28, 29, 30, 31, 42, 43, 64, 71, 72, 98, 100, 101, 112, 120, 124, 134], "specifi": [3, 4, 10, 15, 17, 20, 21, 32, 33, 36, 42, 43, 57, 58, 61, 64, 65, 66, 67, 69, 71, 72, 78, 82, 120, 122, 130, 133, 134, 138, 146], "addition": [3, 16, 100, 101], "successivehalv": [3, 57, 59, 61, 138], "hyperband": [3, 6, 7, 14, 42, 46, 48, 57, 61, 138], "did": [3, 10], "pass": [3, 8, 13, 14, 15, 18, 20, 21, 42, 43, 57, 58, 85, 87, 98, 100, 101, 112, 113, 114, 116, 118, 119, 120, 124, 125, 126, 130, 134, 135, 138, 139, 143, 146], "But": [3, 139], "don": [3, 8, 134], "worri": 3, "tell": [3, 13, 22, 42, 43, 57, 61, 64, 136, 137, 149, 153], "someth": [3, 13, 18], "miss": [3, 57, 58], "never": [3, 35], "want": [3, 7, 8, 10, 13, 15, 16, 20, 22, 24, 31, 42, 49, 131, 134, 135, 138, 139, 143, 147, 149, 152], "limit": [3, 8, 13, 18, 21, 113, 114, 116, 118, 119], "time": [3, 8, 11, 12, 13, 17, 19, 35, 42, 43, 49, 57, 58, 64, 93, 96, 97, 98, 99, 112, 113, 114, 116, 118, 119, 120, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "where": [3, 7, 8, 10, 13, 24, 25, 29, 32, 36, 42, 49, 139, 143], "save": [3, 13, 42, 43, 57, 58, 64, 98, 112, 120], "output_directori": [3, 10, 120, 134], "your_output_directori": 3, "walltime_limit": [3, 120, 138, 139, 143], "120": 3, "two": [3, 13, 32, 36, 63, 85, 87, 122, 139, 143, 152], "minut": [3, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "n_trial": [3, 4, 17, 24, 29, 42, 45, 47, 48, 50, 51, 120, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "500": [3, 138, 146], "max": [3, 14, 17, 24, 27, 42, 47, 49, 57, 58, 60, 125, 131, 138, 139, 143], "trial": [3, 7, 13, 17, 19, 21, 39, 40, 42, 43, 57, 58, 60, 61, 63, 64, 98, 99, 100, 101, 112, 113, 114, 115, 116, 118, 119, 120, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "n_worker": [3, 12, 21, 113, 116, 120, 138, 143], "eight": 3, "worker": [3, 11, 12, 13, 21, 113, 114, 115, 116, 120, 138], "A": [3, 6, 7, 9, 24, 29, 32, 36, 63, 67, 69, 77, 79, 89, 90, 91, 92, 113, 114, 115, 116, 118, 119, 134, 142, 150, 152], "construct": [3, 113, 116], "pipelin": [3, 42, 43], "variou": [3, 42, 43], "satisfi": [3, 13], "crucial": [3, 20, 42, 48, 57, 58, 138], "peak": 3, "idea": [3, 8, 13, 152], "behind": [3, 13], "simpl": [3, 7, 13, 20, 32, 34, 131, 134, 142, 146], "easi": 3, "understand": 3, "without": [3, 9, 24, 27, 35], "deep": [3, 71, 72, 138], "dive": [3, 13], "materi": 3, "expert": 3, "invit": 3, "specif": [3, 8, 12, 13, 15, 20, 24, 25, 42, 43, 57, 58, 71, 72, 85, 87, 100, 103, 139], "horizont": 3, "scrollabl": 3, "show": [3, 8, 13, 15, 18, 20, 119, 130, 132, 138, 142, 143, 146, 149], "what": [3, 8, 65, 66, 113, 114, 116], "reveal": 3, "medium": 3, "high": [3, 12, 13, 21], "initi": [3, 22, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 61, 63, 64, 93, 94, 95, 96, 97, 113, 116, 120, 130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "design": [3, 6, 7, 22, 32, 33, 35, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 63, 93, 94, 113, 116, 120, 130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "sobol": [3, 13, 42, 45, 47, 50, 56], "surrog": [3, 15, 16, 21, 22, 24, 25, 29, 39, 40, 42, 43, 44, 45, 47, 49, 63, 65, 66, 84, 100, 101, 120, 130, 131], "gaussian": [3, 6, 7, 13, 42, 45, 65, 66, 67, 68, 69, 71, 72, 77, 79, 130], "Not": 3, "acquisit": [3, 6, 15, 22, 39, 40, 42, 43, 44, 45, 47, 49, 63, 64, 67, 77, 100, 103, 135], "expect": [3, 8, 13, 24, 27, 42, 43, 44, 45, 47, 85, 87, 100, 103, 113, 114], "log": [3, 13, 22, 24, 26, 27, 42, 43, 47, 67, 69, 78, 79, 82, 83, 85, 87, 100, 103, 106, 107, 131, 133, 135, 138, 139, 143], "maxim": [3, 15, 22, 24, 25, 26, 31, 42, 43, 44, 45, 47, 49, 63], "local": [3, 13, 21, 32, 36, 37, 42, 43, 44, 45, 47, 64, 113, 114, 116, 118], "sort": [3, 13, 32, 36, 42, 44, 45, 47, 57, 58, 98, 112, 126, 143], "runhistori": [3, 22, 39, 40, 42, 43, 44, 45, 47, 48, 49, 57, 58, 60, 61, 63, 64, 126, 130, 132, 133, 134, 142, 143], "encod": [3, 22, 42, 43, 44, 45, 47, 49], "probabl": [3, 13, 21, 24, 30, 42, 44, 45, 47, 78, 79, 83, 93, 95, 97], "50": [3, 13, 20, 42, 45, 47, 48, 50, 51, 67, 77, 130, 131, 132, 133, 134, 138, 139, 142], "closest": [3, 8, 138], "bohb": [3, 7, 8, 138], "emphas": 3, "highli": 3, "modular": 3, "accept": [3, 42, 49, 138], "note": [3, 18, 19, 42, 43, 132], "contrast": 3, "previou": [3, 10, 13, 32, 33, 36, 42, 43, 64, 98, 112, 130, 131, 134, 135, 146], "instanti": [3, 7, 13, 42, 43, 45, 98, 99], "instead": [3, 7, 15, 18, 20, 21, 63, 71, 72, 131, 133, 138], "kwarg": [3, 24, 25, 39, 41, 50, 56, 71, 72, 85, 86, 100, 105, 109, 113, 118, 131], "modul": [3, 20, 21, 124], "blackboxfacad": [3, 18, 42, 45, 146], "bbfacad": 3, "hyperparameteroptimizationfacad": [3, 4, 42, 47, 48, 130, 131, 132, 133, 134, 135, 142, 143], "hpofacad": [3, 13, 130, 133, 134, 142, 143], "multifidelityfacad": [3, 8, 13, 42, 48, 138, 139], "mffacad": [3, 138, 139], "algorithmconfigurationfacad": [3, 42, 44], "acfacad": 3, "randomfacad": [3, 42, 46, 49], "rfacad": 3, "hyperbandfacad": [3, 42, 46, 49], "hbfacad": 3, "target_funct": [3, 18, 42, 43, 44, 45, 46, 47, 48, 49, 113, 118, 119, 131, 142], "code": [4, 8, 10, 13, 18, 19, 32, 36, 57, 58, 67, 69, 77, 78, 83, 113, 116, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 147, 149], "vector": [4, 32, 37, 100, 101, 136, 137, 149, 153], "iri": [4, 131], "numpi": [4, 71, 72, 130, 131, 135, 138, 139, 142, 143], "np": [4, 19, 24, 25, 27, 65, 66, 67, 69, 71, 72, 79, 84, 85, 87, 93, 96, 100, 101, 103, 120, 122, 130, 131, 135, 138, 139, 142, 143], "scenario": [4, 10, 12, 14, 15, 16, 17, 18, 19, 21, 24, 29, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 89, 91, 92, 100, 101, 103, 104, 106, 107, 108, 113, 114, 115, 118, 119, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "sklearn": [4, 71, 72, 131, 135, 138, 139, 143], "svm": [4, 131], "svc": [4, 131], "model_select": [4, 131, 135, 138, 139, 143], "cross_val_scor": [4, 131, 135, 138, 139, 143], "load_iri": [4, 131], "classifi": [4, 131, 135, 138, 139, 143], "random_st": [4, 131, 135, 138, 139, 143], "score": [4, 131, 135, 138, 139, 143], "target": [4, 7, 8, 12, 14, 15, 21, 22, 42, 43, 64, 65, 66, 85, 87, 98, 112, 113, 114, 116, 117, 118, 119, 120, 130, 131, 134, 135, 138, 139, 143, 147, 148, 149, 153], "cv": [4, 7, 131, 135, 138, 139, 143], "1000": [4, 42, 45, 130, 131, 146], "determinist": [4, 8, 120, 130, 132, 134, 142, 146], "true": [4, 10, 42, 43, 44, 47, 48, 64, 67, 69, 71, 72, 77, 85, 87, 98, 112, 120, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "200": [4, 15, 133, 138, 139, 143], "incumb": [4, 7, 13, 15, 18, 19, 24, 27, 28, 30, 32, 33, 42, 43, 44, 45, 46, 47, 48, 49, 57, 58, 60, 61, 64, 99, 122, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "ljdr18": [6, 42, 46], "li": [6, 57, 58], "k": [6, 13, 32, 34, 71, 72, 98, 112, 130, 152], "jamieson": 6, "desalvo": 6, "rostamizadeh": 6, "talwalkar": 6, "novel": [6, 7], "bandit": [6, 7], "base": [6, 7, 8, 13, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 131, 139, 152], "approach": [6, 42, 49], "jmlr": [6, 152], "org": [6, 9, 50, 54, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 152], "paper": [6, 24, 28, 152], "v18": 6, "16": [6, 42, 43, 57, 60, 63, 135], "558": 6, "html": [6, 50, 54, 56, 152], "hssl22": [6, 24, 29], "carl": [6, 24, 29], "hvarfner": [6, 24, 29], "danni": 6, "stoll": 6, "artur": 6, "souza": 6, "mariu": [6, 152], "lindauer": [6, 152], "frank": [6, 152], "hutter": [6, 8, 67, 69, 77, 79, 152], "luigi": 6, "nardi": 6, "\u03c0bo": 6, "augment": [6, 7, 16, 24, 29], "belief": [6, 24, 29, 135], "arxiv": 6, "pdf": [6, 24, 28, 89, 92], "2204": 6, "11051": 6, "j": 6, "knowl": 6, "hybrid": 6, "landscap": 6, "approxim": [6, 13], "expens": [6, 7], "multiobject": 6, "www": [6, 89, 92], "semanticscholar": 6, "3a": 6, "73b5b196b35fb23e1f908d73b787c2c2942fadb5": 6, "skks10": [6, 24, 26], "sriniva": 6, "m": 6, "kakad": 6, "kraus": 6, "seeger": 6, "No": [6, 21, 42, 46, 48, 57, 61], "regret": 6, "experiment": 6, "0912": 6, "3995": 6, "bb": 7, "bo": [7, 42, 43], "cli": 7, "gp": [7, 67, 77], "mcmc": [7, 42, 45, 67, 77], "markov": 7, "chain": [7, 67, 77], "mont": [7, 67, 77], "carlo": [7, 67, 77], "hb": 7, "hp": [7, 13, 135], "mf": 7, "rf": [7, 24, 29], "roar": [7, 42, 46, 49], "onlin": [7, 42, 46, 49], "adapt": [7, 79, 138, 139, 143], "race": [7, 42, 46, 49, 57, 58, 60, 138, 152], "sequenti": [7, 8, 152], "smbo": [7, 13, 39, 40, 41, 42, 43, 89, 90, 92, 93, 94, 95, 96, 97, 113, 114, 115, 116, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "mode": 7, "doe": [7, 8, 20, 21, 24, 31, 32, 34, 35, 64, 93, 96, 98, 112, 113, 116], "assum": [7, 8, 42, 43, 57, 58, 113, 117], "form": [7, 18, 78, 80, 119], "usual": [7, 113, 117], "emploi": 7, "weight": [7, 13, 24, 29, 32, 36, 42, 44, 45, 47, 49, 89, 91, 98, 112, 135, 144, 145, 149, 153], "explor": [7, 13, 24, 26, 27, 30, 42, 43, 44, 45, 47], "exploit": [7, 13, 24, 26, 27, 30, 42, 43, 44, 45, 47], "minimum": [7, 32, 34, 42, 44, 47, 85, 87, 98, 112, 120, 130, 134], "its": [7, 13, 16, 19, 21, 67, 71, 72, 77, 98, 112, 113, 114, 115, 116, 130, 131], "refer": [7, 8, 13, 14, 42, 48, 50, 54, 56, 57, 58, 152], "anoth": [7, 13, 98, 112], "word": [7, 13, 19], "epoch": [7, 14, 120, 140, 141, 149, 153], "size": [7, 120, 123, 135, 138], "subset": [7, 14, 16, 98, 112, 120, 139], "context": [7, 120], "sai": 7, "them": [7, 13, 100, 105, 107, 108, 109, 113, 116, 138, 143], "extens": 7, "halv": [7, 14, 17, 42, 46, 48, 57, 61, 138, 139], "known": 7, "often": [7, 8, 12, 13, 15, 16, 32, 34, 42, 49, 57, 58, 63, 132], "even": [7, 9, 13, 16, 19, 21], "transform": [7, 13, 42, 43, 79, 85, 87, 89, 90, 91, 92, 100, 101, 103, 105, 106, 107, 108, 109, 139], "call": [7, 13, 17, 22, 24, 25, 32, 33, 37, 39, 40, 41, 42, 43, 49, 50, 51, 57, 58, 64, 65, 66, 71, 72, 73, 78, 79, 83, 88, 113, 114, 115, 116, 118, 119, 123, 131, 132, 134, 135, 147, 148, 149, 153], "so": [7, 10, 13, 19, 24, 26, 27, 42, 43, 46, 48, 57, 61, 64, 99, 113, 114, 115, 116, 133, 134, 135, 138], "found": [7, 8, 10, 13, 24, 29, 42, 43, 57, 58, 60, 64, 93, 96, 130, 134, 146, 152], "superior": 7, "intensif": [7, 13, 17, 39, 40, 57, 60, 138], "mechan": [7, 113, 114, 138, 152], "govern": 7, "when": [7, 13, 14, 17, 21, 42, 43, 44, 46, 48, 49, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 77, 85, 87, 113, 114, 116, 118, 120, 124, 138], "trust": 7, "enough": [7, 42, 49, 113, 114], "make": [7, 8, 12, 13, 15, 18, 24, 31, 57, 58, 60, 61, 67, 77, 93, 96, 113, 114, 115, 116, 120, 134, 135, 138, 139, 143], "new": [7, 8, 10, 13, 21, 35, 39, 40, 42, 49, 57, 58, 60, 61, 63, 98, 112, 130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "therebi": [7, 14], "prematur": [7, 10, 14], "than": [7, 12, 32, 34, 42, 48, 49, 57, 58, 60, 64, 78, 79, 80, 85, 87, 120, 130, 132, 134, 135, 138, 139, 142, 143, 146], "goal": 7, "solut": [7, 8, 32, 34, 38], "least": [7, 98, 112, 138], "good": [7, 138], "compromis": 7, "metric": 7, "qualiti": 7, "free": [7, 8, 9, 42, 46], "select": [7, 13, 42, 43, 46, 48, 49, 50, 51, 53, 57, 61, 63, 98, 112, 113, 114, 143], "uniformli": [7, 42, 49], "iter": [7, 13, 19, 32, 33, 35, 36, 37, 39, 40, 42, 43, 45, 47, 57, 58, 60, 63, 89, 90, 92, 93, 94, 95, 96, 97, 98, 112, 113, 114, 115, 116, 123], "compar": [7, 13, 19, 42, 46, 49, 57, 58, 61, 122, 123, 126, 138], "against": [7, 8, 42, 48, 57, 58, 60], "extend": 7, "chapter": [7, 22], "cost": [7, 13, 15, 16, 18, 22, 42, 43, 47, 57, 58, 61, 64, 89, 90, 91, 92, 98, 99, 100, 101, 112, 113, 114, 116, 118, 119, 120, 125, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "given": [7, 18, 24, 25, 26, 42, 48, 57, 58, 61, 65, 66, 93, 95, 97, 98, 100, 101, 112, 113, 114, 118, 119, 125, 126, 139], "singl": [7, 12, 13, 15, 18, 42, 44, 47, 49, 57, 58, 65, 84, 85, 87, 89, 90, 91, 92, 98, 112, 113, 114, 115, 116, 119, 138], "combin": [7, 42, 43, 57, 58, 64, 89, 90, 91, 92, 98, 112, 113, 114, 116, 120, 131, 138, 139, 152], "should": [8, 9, 13, 18, 20, 24, 25, 35, 42, 43, 44, 45, 47, 49, 57, 58, 60, 63, 64, 65, 71, 72, 84, 93, 94, 95, 96, 97, 120, 126, 130, 132], "smac2": [8, 85, 87, 134], "reimplement": 8, "origin": [8, 15, 32, 36, 78, 79, 83, 125, 152], "et": [8, 24, 28, 29, 67, 77], "al": [8, 24, 28, 29, 67, 77], "2021": [8, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "slightli": 8, "comparison": [8, 42, 48, 57, 58], "stabl": 8, "releas": 8, "java": 8, "sinc": [8, 13, 15, 18, 19, 22, 42, 49, 57, 58, 138, 142, 143], "maintain": 8, "applic": [8, 14], "cannot": [8, 21], "root": [8, 20, 100, 109, 123], "directori": [8, 64, 120], "instal": 8, "pyrfr": 8, "rais": [8, 21, 100, 101, 135, 138, 143], "cryptic": 8, "error": [8, 20, 21], "ensur": [8, 11, 24, 29, 120], "gcc": 8, "compil": 8, "same": [8, 13, 32, 36, 42, 44, 45, 46, 47, 48, 49, 57, 60, 61, 89, 91, 98, 112, 125, 134], "link": 8, "dure": [8, 13, 32, 36, 37, 42, 43, 49, 64, 85, 87], "happen": [8, 13], "facad": [8, 10, 13, 14, 15, 20, 64, 120, 130, 131, 135, 138, 142, 143], "discov": 8, "bug": 8, "behav": [8, 24, 29], "report": [8, 17], "open": 8, "issu": [8, 13, 32, 36, 42, 47, 152], "our": [8, 10, 14, 15, 17, 21, 131, 135, 138, 139, 143, 146, 152], "list": [8, 12, 15, 18, 24, 25, 28, 32, 33, 35, 42, 43, 44, 45, 47, 48, 49, 50, 51, 57, 58, 61, 64, 65, 66, 67, 68, 69, 71, 72, 77, 84, 85, 87, 89, 90, 91, 92, 93, 94, 98, 99, 100, 101, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 125, 126, 130, 138, 139, 143], "befor": [8, 13, 21, 24, 25, 32, 36, 37, 39, 40, 41, 42, 43, 47, 63, 64, 67, 77, 93, 96, 113, 114, 115, 116, 134, 138, 143], "sure": [8, 13, 15, 18, 67, 77, 93, 96, 113, 114, 116, 117, 134], "hasn": 8, "alreadi": [8, 13, 24, 25, 57, 60, 63, 64, 98, 112, 132, 134, 138], "tracker": [8, 13, 57, 59, 61], "latest": [8, 57, 58], "inform": [8, 10, 13, 42, 43, 50, 54, 56, 57, 58, 61, 64, 98, 99, 112, 113, 114, 116, 118, 119, 131], "descript": 8, "reproduc": [8, 21, 22, 120], "about": [8, 12, 13, 57, 60, 64, 71, 72, 98, 99, 113, 114, 131, 135], "setup": [8, 10, 42, 43, 49, 64, 124], "help": [8, 12], "resolv": 8, "packag": [8, 131, 138, 152], "feel": 8, "screenshot": 8, "contribut": [8, 152], "discuss": [8, 22], "care": [8, 13, 42, 43], "question": 8, "feedback": 8, "prefer": 8, "locat": [8, 24, 27], "featur": [8, 13, 16, 18, 42, 44, 47, 65, 66, 67, 68, 69, 77, 84, 85, 87, 100, 101, 119, 120, 122, 139], "ongo": 8, "look": [8, 10, 14, 17, 35, 42, 49], "guid": [8, 13], "flag": [8, 134], "fals": [8, 10, 20, 24, 27, 29, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 57, 58, 61, 64, 67, 71, 72, 73, 74, 75, 76, 77, 85, 87, 98, 112, 113, 116, 120, 124, 131, 132, 133, 134], "non": [8, 18, 24, 29, 71, 72, 147, 149], "thu": [8, 16, 32, 33, 135], "nevertheless": [8, 113, 116], "still": [8, 10, 13, 15, 18, 21, 98, 112, 113, 114, 115, 116, 132], "why": [8, 14], "colab": 8, "crash": [8, 100, 101, 103, 104, 106, 107, 108, 113, 117, 131], "child": [8, 21, 50, 51, 113, 114, 131, 138, 143], "pynish": [8, 21, 113, 118, 120], "enforc": [8, 120], "memori": [8, 42, 43, 64, 113, 114, 116, 118, 120], "runner": [8, 13, 64, 131, 133], "mai": [8, 57, 58], "overcom": 8, "remov": [8, 24, 29, 32, 36, 57, 60, 119, 142, 143], "program": [9, 21, 63], "redistribut": 9, "modifi": [9, 21], "term": 9, "claus": [9, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "bsd": [9, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "distribut": [9, 13, 42, 43, 64, 78, 80, 82, 85, 87, 113, 114, 116, 118, 138], "hope": 9, "warranti": 9, "impli": [9, 138], "merchant": 9, "FOR": 9, "particular": 9, "purpos": [9, 16], "receiv": [9, 13, 15, 18, 63, 98, 112, 113, 116], "copi": [9, 24, 28, 57, 58], "along": [9, 65, 66], "opensourc": 9, "automat": [10, 22, 42, 43, 113, 116], "restor": [10, 57, 58, 59, 60, 61], "state": [10, 13, 57, 58, 59, 60, 61, 89, 90, 92, 93, 95, 96, 97, 98, 100, 101, 112, 131], "left": [10, 24, 27, 42, 43, 71, 72], "off": [10, 13, 24, 26, 27, 42, 43], "interrupt": 10, "finish": [10, 13, 21, 39, 40, 98, 112, 113, 114, 115, 116, 130, 131, 132, 133, 134, 138, 139, 142], "old": [10, 42, 43, 64, 134], "deriv": [10, 134, 135], "obtain": [10, 32, 37, 57, 58, 67, 69, 79], "those": [10, 16], "behavior": 10, "control": [10, 24, 26, 27, 30, 42, 44, 45, 46, 47, 48, 57, 58, 61], "overwrit": [10, 13, 42, 43, 44, 45, 46, 47, 48, 49, 64, 98, 112, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "respect": [10, 71, 72, 78, 79, 83, 120], "consist": [10, 24, 31, 32, 33, 42, 43, 135, 138, 139, 143, 152], "meta": [10, 24, 25, 26, 27, 28, 29, 30, 32, 33, 36, 37, 42, 43, 50, 51, 57, 58, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 113, 114, 118, 119, 120, 130, 134, 146], "ask": [10, 13, 22, 39, 40, 42, 43, 64, 136, 137, 149, 153], "exact": [10, 42, 43, 64], "behaviour": [10, 20, 42, 43, 57, 58, 60, 61, 64], "complet": [10, 13, 19, 42, 43, 64, 113, 114, 115, 116], "renam": [10, 42, 43], "affect": [10, 42, 45, 47, 48, 50, 51, 57, 58], "whether": [10, 13, 24, 27, 29, 42, 43, 57, 58, 64, 71, 72, 93, 94, 95, 96, 97, 98, 112, 113, 114, 115, 116, 120, 134], "wallclock": [11, 13, 17, 19, 57, 58, 64, 130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "cpu": [11, 120, 130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "involv": [11, 13, 63], "faster": 12, "slower": 12, "appli": [12, 65, 66, 79, 130], "underli": [12, 16], "max_config_cal": [12, 13, 42, 44, 45, 47, 49, 57, 58, 60, 132, 135, 143], "higher": [12, 13, 131], "lead": [12, 13], "less": 12, "configselector": [12, 13, 42, 43, 57, 58, 63], "retrain_aft": [12, 13, 42, 43, 63], "lower": [12, 13, 24, 26, 57, 61, 63, 78, 83, 98, 100, 101, 112, 135], "retrain": [12, 63], "As": [12, 24, 25, 115, 134, 135], "becaus": [12, 13, 21, 71, 72, 98, 112, 113, 114, 117, 130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "commun": [12, 132], "longer": [12, 139], "thread": [12, 13, 21, 57, 58], "addit": [13, 19, 21, 24, 25, 42, 44, 45, 47, 48, 49, 50, 51, 57, 58, 98, 112, 113, 114, 116, 118, 119, 130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "basic": [13, 15, 42, 44, 45, 47, 49, 57, 58, 60, 132], "mention": [13, 152], "start": [13, 17, 21, 22, 39, 40, 41, 42, 43, 57, 58, 67, 77, 89, 90, 92, 113, 116, 133, 138, 139, 143], "paragraph": 13, "give": [13, 17, 20, 22, 63, 120], "pictur": 13, "These": [13, 135], "influenc": [13, 15], "drastic": 13, "shortli": 13, "main": [13, 21, 32, 36, 42, 49, 57, 58, 113, 116, 133, 134, 152], "loop": [13, 42, 43, 49, 57, 58, 60, 61, 64, 113, 114, 133], "logic": [13, 57, 60], "while": [13, 57, 58, 60, 61, 131], "next": [13, 15, 17, 19, 32, 33, 39, 40, 42, 43, 57, 58, 59, 63, 64, 93, 94, 95, 96, 97, 113, 114, 116, 131, 132], "submit": [13, 98, 112, 113, 114, 115, 116], "wait": [13, 57, 58, 113, 114, 115, 116], "decoupl": 13, "occupi": 13, "until": [13, 113, 114, 115, 116, 134], "avail": [13, 18, 42, 48, 57, 58, 113, 114, 115, 116, 142], "again": [13, 19, 42, 48, 57, 58, 63, 134], "moreov": [13, 57, 58, 135], "remain": [13, 64, 130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "empir": [13, 24, 29, 98, 112], "epm": 13, "mostli": 13, "associ": [13, 19, 64, 120], "incorpor": [13, 42, 43, 49, 57, 58, 65, 66, 67, 68, 69, 77, 85, 87, 98, 112, 120, 135], "collect": [13, 71, 72, 73, 113, 114, 116], "highest": [13, 19, 42, 43, 46, 48, 57, 58, 61, 63, 64, 98, 112], "min_trial": [13, 63], "config_selector": [13, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 57, 58], "imagin": 13, "75": 13, "505": 13, "7": [13, 65, 66, 67, 68, 69, 77, 85, 87, 88, 142, 143, 146], "end": [13, 32, 33, 39, 40, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "step": [13, 32, 36, 37, 57, 61, 67, 77, 115, 143], "request": [13, 134], "via": [13, 15, 21, 32, 34, 38, 113, 114, 116, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "config_gener": [13, 57, 58], "over": [13, 24, 26, 28, 29, 32, 34, 57, 60, 65, 66, 67, 77, 84, 85, 87, 93, 96, 97, 98, 112, 115, 136, 137, 142, 149, 153], "considered_st": [13, 100, 101, 103, 104, 106, 107, 108], "timeout": 13, "consid": [13, 17, 19, 21, 42, 44, 47, 49, 57, 58, 85, 87, 98, 100, 101, 112, 115, 138, 139, 143], "normalize_cost": [13, 125], "objective_bound": [13, 98, 112], "inact": [13, 42, 43, 122], "after": [13, 15, 19, 24, 25, 39, 40, 42, 49, 57, 61, 63, 64, 93, 96, 132, 133, 134, 138, 143], "mathemat": 13, "techniqu": [13, 32, 34], "varianc": [13, 65, 66, 67, 69, 77, 84, 85, 87, 139], "section": 13, "otherwis": [13, 21, 57, 58, 113, 116, 118, 120], "bunch": 13, "confid": [13, 24, 26, 42, 49], "bound": [13, 24, 26, 78, 83, 98, 112, 122, 125, 143], "thompson": [13, 24], "prior": [13, 24, 29, 32, 36, 71, 72, 73, 74, 75, 76, 136, 137, 149, 153], "literatur": 13, "calcul": [13, 17, 24, 25, 98, 112, 130, 131, 132, 135, 138, 146], "respons": [13, 42, 43, 100, 101, 103, 105, 106, 107, 108, 109], "wrapper": [13, 65, 84, 113, 114, 115, 116], "differenti": [13, 32, 34], "evolut": [13, 32, 34], "neighbour": 13, "pai": 13, "attent": 13, "challeng": [13, 32, 33, 34, 35, 36, 37, 38, 42, 43, 45, 47, 57, 58, 60, 93, 94, 113, 114, 122], "experi": [13, 20, 42, 47], "ram": [13, 42, 47], "long": 13, "comput": [13, 24, 25, 26, 28, 78, 79, 83, 98, 112, 126], "challengerlist": [13, 32, 33, 35], "latin": [13, 50, 54], "hypercub": [13, 50, 54], "factori": [13, 50, 53, 98, 99], "corner": [13, 50, 53], "sequenc": [13, 50, 56], "quasi": 13, "discrep": 13, "statist": [13, 64], "method": [13, 15, 19, 24, 25, 32, 33, 34, 39, 40, 42, 43, 57, 58, 60, 61, 63, 65, 66, 71, 72, 73, 78, 79, 83, 85, 87, 113, 114, 115, 116, 118, 119, 135, 138, 139, 143], "multidimension": 13, "yield": [13, 57, 61, 63], "keep": [13, 15, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 57, 58, 60, 61, 64, 65, 66, 67, 68, 69, 77, 85, 87, 113, 114, 115, 116, 118], "track": [13, 42, 43, 44, 45, 46, 47, 48, 49, 57, 58, 60, 61], "twice": [13, 142], "chanc": 13, "although": [13, 57, 58], "includ": [13, 21, 57, 58, 59, 60, 61, 64, 65, 66, 84, 135, 139, 152], "trade": [13, 24, 26, 27, 42, 43], "stuck": 13, "optimum": [13, 24, 29, 100, 101, 136, 137, 149, 153], "guarante": [13, 22, 98, 112], "anneal": [13, 93, 95], "modulu": [13, 35, 93, 96], "far": [13, 19, 24, 26, 27, 42, 46, 48, 57, 61, 64, 99, 133], "decid": [13, 42, 43, 64, 113, 114, 152], "worth": 13, "spend": [13, 64], "pair": [13, 42, 46, 48, 57, 61, 98, 112, 143], "n_seed": [13, 42, 46, 48, 57, 58, 59, 61, 120], "lot": [13, 22, 139], "throughout": 13, "uses_se": [13, 57, 58, 60, 61], "uses_budget": [13, 57, 58, 60, 61], "uses_inst": [13, 57, 58, 60, 61], "callabl": [13, 35, 42, 43, 113, 118, 119], "saniti": 13, "fact": [13, 57, 60], "repeat": [13, 131], "taken": [13, 32, 36, 100, 101, 126], "recogn": 13, "beforehand": [13, 135], "queue": [13, 57, 60], "That": [13, 14, 42, 47], "nativ": [13, 21, 57, 61], "everytim": [13, 18, 57, 58, 60, 119], "straight": 13, "forward": 13, "were": [13, 57, 58, 149], "go": [13, 21, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "stop": [13, 22, 39, 40, 63, 120, 133, 134, 138, 143], "update_on_iteration_start": [13, 89, 90, 92], "normal": [13, 18, 24, 30, 67, 69, 77, 78, 82, 89, 90, 91, 92, 98, 112, 125, 135], "hold": [13, 22, 24, 28, 42, 43, 57, 60, 64, 131], "un": 13, "trial_info": [13, 113, 114, 115, 116], "trial_valu": 13, "item": [13, 99, 130, 131, 138], "info": [13, 20, 39, 40, 42, 43, 64, 98, 112, 113, 114, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "statu": [13, 18, 42, 43, 57, 58, 98, 99, 110, 112, 113, 114, 116, 118, 119], "starttim": [13, 98, 99, 112], "endtim": [13, 98, 99, 112], "additional_info": [13, 18, 98, 99, 112, 113, 114, 116, 118, 119], "get_config": [13, 98, 112, 130, 142, 143], "average_cost": [13, 19, 98, 112, 143], "format": [13, 20, 123], "afterward": [13, 57, 60], "abil": 13, "easili": [13, 120], "inherit": [13, 71, 72], "class": [13, 15, 20, 24, 32, 39, 42, 50, 57, 65, 67, 71, 78, 85, 89, 93, 98, 100, 113, 130, 131, 132, 133, 134, 135, 138, 139, 143], "customcallback": [13, 133], "on_start": [13, 39, 40, 41, 133], "none": [13, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 108, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 130, 131, 132, 133, 134, 138, 139, 142, 143], "on_end": [13, 39, 40], "on_iteration_start": [13, 39, 40], "on_iteration_end": [13, 39, 40], "runinfo": [13, 113, 114, 116], "runvalu": 13, "bool": [13, 24, 27, 29, 39, 40, 42, 43, 44, 47, 57, 58, 60, 61, 64, 67, 69, 71, 72, 77, 85, 87, 93, 94, 95, 96, 97, 98, 112, 113, 114, 115, 116, 120, 133, 134], "just": [13, 15, 21, 42, 49, 133], "print": [13, 18, 57, 61, 64, 122, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "min_budget": [14, 120, 138, 139], "max_budget": [14, 120, 138, 139], "real": [14, 42, 43, 64, 113, 114, 116, 118, 119], "stage": [14, 39, 40, 57, 61, 133, 138, 139], "reason": [14, 71, 72, 120], "simpli": [14, 15, 42, 49, 57, 61, 146], "wherea": 14, "world": 14, "exactli": [15, 57, 60], "right": [15, 18, 24, 27, 71, 72], "histori": [15, 19, 64], "recip": 15, "obj1": 15, "obj2": 15, "dictionari": [15, 98, 112, 123, 131, 133], "contain": [15, 42, 43, 64, 71, 72, 98, 112, 113, 114, 115, 116, 126], "kei": [15, 18, 42, 44, 45, 46, 47, 48, 49, 57, 58, 60, 61, 98, 99, 112, 126, 146], "option": [15, 16, 18, 39, 40, 42, 43, 57, 58, 64, 65, 66, 71, 72, 98, 112, 113, 117, 119, 125, 133, 134], "custom": [15, 21, 22, 42, 43, 124, 134, 136, 137, 149, 153], "multi_objective_algorithm": [15, 42, 43, 44, 45, 46, 47, 48, 49, 98, 100, 101, 112, 142, 143], "pareto": [15, 57, 58, 126, 142, 143], "front": [15, 57, 58, 126, 142, 143], "get_incumb": [15, 57, 58, 133, 134, 142], "plot": [15, 130, 138, 142, 143], "five": [16, 42, 45, 47, 48, 50, 51, 138, 143], "identifi": [16, 120], "id": [16, 98, 99, 112], "d0": 16, "d1": [16, 123], "d2": [16, 123], "d3": 16, "d4": 16, "instance_featur": [16, 18, 65, 66, 67, 68, 69, 77, 85, 87, 88, 119, 120, 122, 139], "expand": [16, 57, 58, 61, 120], "x": [16, 24, 25, 26, 27, 30, 31, 65, 66, 67, 68, 69, 71, 72, 77, 78, 80, 84, 85, 87, 100, 101, 122, 130, 132, 134, 138, 142, 143], "matrix": [16, 65, 66], "plai": 16, "role": 16, "121": 16, "6": [16, 42, 44, 47, 85, 87, 122, 137, 139, 142, 143], "140": 16, "65": 16, "99": 16, "45": [16, 139, 145], "102": 16, "59": 16, "132": [16, 131], "48": 16, "opportun": 17, "regist": [17, 64], "count": [17, 120], "min": [17, 125, 138, 139, 143], "intermedi": 17, "obvious": 17, "flow": 17, "further": [18, 24, 28, 29, 50, 54, 56, 93, 96, 113, 114, 116, 117, 118, 119, 120], "script": [18, 21, 42, 43, 119, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 147, 148, 149, 153], "popen": [18, 119], "standard": [18, 19, 24, 30, 65, 66, 78, 82, 135], "interpret": [18, 42, 43], "filenam": [18, 20, 57, 58, 64, 98, 112, 146], "hyperparameter1": [18, 119], "5323": [18, 119], "sh": [18, 146], "anyth": [18, 71, 72], "els": [18, 20, 131, 143], "wih": 18, "mark": [18, 57, 58], "type": [18, 24, 25, 26, 27, 28, 32, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 71, 72, 78, 79, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 130, 131, 135, 138, 139, 142], "usr": 18, "env": 18, "comma": [18, 119], "separ": [18, 42, 43, 119], "empti": [18, 57, 60, 63, 98, 112, 113, 114, 115, 116, 118, 119, 131], "echo": [18, 119, 146], "cut": [18, 57, 58, 146], "f1": [18, 142, 146], "f2": [18, 142, 146], "v": [18, 98, 112, 113, 116, 130, 139, 146], "declar": [18, 71, 72, 146], "fi": [18, 146], "done": [18, 21, 42, 43, 57, 60, 113, 114, 115, 116, 146], "stdout": [18, 20], "white": [18, 42, 45, 71, 76, 119], "ignor": [18, 19, 42, 43, 57, 60, 63, 64, 71, 72, 130, 135, 138, 139, 143], "01": [18, 119], "except": [18, 42, 43, 113, 115, 116, 135], "semicolon": 18, "string": [18, 42, 43, 119, 123], "match": 18, "statustyp": [18, 98, 99, 100, 101, 103, 104, 106, 107, 108, 110, 112, 113, 114, 116, 118, 119], "chmod": 18, "advanc": 19, "reach": [19, 63, 93, 96, 134], "averag": [19, 42, 43, 44, 45, 47, 49, 64, 89, 91, 98, 112, 138, 143], "below": 19, "termination_cost_threshold": [19, 120], "inf": [19, 93, 96, 120, 130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "abov": 19, "infin": [19, 131], "come": [19, 113, 116], "customiz": 20, "overview": 20, "easiest": 20, "logger": [20, 122, 124], "logging_level": [20, 42, 43, 44, 45, 46, 47, 48, 49, 133], "debug": [20, 42, 43], "30": [20, 133, 137, 138, 139, 143, 146], "warn": [20, 98, 112, 131, 135, 138, 139, 143], "40": [20, 133, 135, 139], "critic": 20, "sometim": [20, 21], "highlight": [20, 143], "yaml": [20, 42, 43], "displai": 20, "messag": 20, "everyth": [20, 146], "disable_existing_logg": 20, "formatt": 20, "levelnam": 20, "lineno": 20, "handler": 20, "consol": 20, "streamhandl": 20, "stream": 20, "ext": 20, "sy": 20, "dask": [21, 42, 43, 113, 116, 118, 120], "readi": 21, "mind": 21, "orchestr": 21, "fast": 21, "counterproduct": 21, "due": [21, 32, 34, 139], "overhead": [21, 32, 37], "communc": 21, "anymor": 21, "trail_walltime_limit": 21, "trial_memory_limit": [21, 120], "subprocess": [21, 119], "togeth": [21, 24, 31, 42, 49, 57, 61], "pickl": [21, 113, 116], "schedul": [21, 93, 95], "job": [21, 113, 116], "__name__": [21, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "__main__": [21, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "abl": [21, 113, 114, 131], "correctli": 21, "spawn": [21, 120], "runtimeerror": [21, 111], "attempt": 21, "made": 21, "bootstrap": [21, 42, 44, 47, 85, 87], "phase": 21, "fork": 21, "forgotten": 21, "proper": 21, "idiom": 21, "freeze_support": 21, "omit": [21, 98, 99], "frozen": 21, "produc": [21, 113, 114, 115, 116], "client": [21, 42, 43, 113, 116], "slurm": 21, "On": [21, 71, 72, 113, 114, 115, 116, 140, 141, 149, 153], "slurmclust": 21, "login": 21, "node": [21, 85, 87, 113, 116, 138], "obviou": 21, "hang": 21, "silent": 21, "launch": [21, 113, 114, 115, 116], "job_class": 21, "submit_command": 21, "job_cl": 21, "cancel_command": 21, "librari": 22, "strongli": 22, "hint": 22, "react": 22, "certain": 22, "thing": 22, "selector": [22, 42, 43, 57, 58, 63], "callback": [22, 35, 42, 43, 44, 45, 46, 47, 48, 49, 57, 58, 64, 134, 136, 137, 149, 153], "criteria": 22, "termin": [22, 32, 36, 37, 113, 116], "threshold": [22, 120], "level": [22, 42, 43, 123, 124], "cluster": [22, 42, 43, 113, 116, 138], "abstractacquisitionfunct": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 42, 43, 49], "sourc": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 149], "abstract": [24, 25, 32, 33, 42, 43, 57, 58, 65, 66, 67, 68, 79, 85, 86, 89, 90, 93, 94, 100, 101, 113, 114, 116], "__call__": [24, 25, 71, 72, 89, 90, 91, 92, 113, 118, 119, 131], "ndarrai": [24, 25, 64, 65, 66, 67, 69, 71, 72, 79, 84, 85, 87, 100, 101, 103, 104, 105, 106, 107, 108, 109, 122, 139], "dict": [24, 25, 26, 27, 28, 29, 30, 32, 33, 36, 37, 42, 43, 50, 51, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 112, 113, 114, 116, 118, 119, 120, 123, 131, 133, 139, 142, 143], "str": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 42, 43, 45, 46, 48, 50, 51, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 112, 113, 114, 116, 118, 119, 120, 122, 123, 131, 139, 142, 143], "abstractmodel": [24, 25, 29, 42, 43, 65, 66, 67, 68, 84, 85, 86, 88], "full": [24, 25, 26, 27, 28, 29, 30, 31, 65, 66, 98, 112, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "attribut": [24, 25], "ei": [24, 25, 27, 42, 44, 45, 47], "fmin": [24, 25], "acqusit": [24, 25], "present": [24, 25], "_updat": [24, 25], "xi": [24, 27, 30, 31, 42, 44, 45, 47, 130], "mathbb": [24, 27], "f": [24, 27, 30, 67, 69, 77, 78, 79, 80, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 152], "mathbf": [24, 26, 27, 30, 31], "f_": [24, 27, 30], "balanc": [24, 26, 27, 30, 42, 44, 45, 47], "between": [24, 26, 27, 30, 42, 44, 45, 47, 64, 65, 66, 85, 87, 100, 105, 107, 108, 109], "_xi": [24, 27], "exloit": [24, 27], "_log": [24, 27], "_eta": [24, 27, 28], "eip": [24, 27, 100, 103], "per": [24, 27, 42, 45, 47, 48, 50, 51, 85, 87, 98, 100, 103, 112, 132, 135], "second": [24, 27, 35, 100, 103, 113, 116, 118, 120, 123, 130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "frac": [24, 27, 30], "r": [24, 27, 32, 34, 143], "integratedacquisitionfunct": [24, 28], "acquisition_funct": [24, 26, 28, 29, 31, 32, 33, 34, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 64, 135], "margin": [24, 28, 65, 66, 67, 69, 84, 85, 87], "practic": [24, 28, 149], "jasper": [24, 28], "snoek": [24, 28, 67, 77], "nip": [24, 28, 67, 69, 77, 79], "cc": [24, 28], "4522": [24, 28], "_acquisition_funct": [24, 28], "_function": [24, 28], "lcb": [24, 26], "beta": [24, 26, 135], "mu": [24, 26, 30, 31, 135], "sqrt": [24, 26, 142], "beta_t": [24, 26], "sigma": [24, 26, 30, 31, 78, 82, 135], "text": [24, 26], "dimens": [24, 26, 65, 66, 131, 132], "tradeoff": [24, 26], "_beta": [24, 26], "_num_data": [24, 26], "seen": [24, 26], "pi": [24, 30], "p": [24, 30, 78, 80], "geq": [24, 30], "phi": [24, 30], "cdf": [24, 30], "prioracquisitionfunct": [24, 29, 135], "decay_beta": [24, 29, 135], "prior_floor": [24, 29], "1e": [24, 29, 71, 72, 73, 74, 75, 76, 85, 87, 135], "12": [24, 29, 139], "discret": [24, 29, 135], "discrete_bins_factor": [24, 29], "pibo": [24, 29], "decai": [24, 29], "factor": [24, 29, 93, 97], "solid": [24, 29, 135], "lowest": [24, 29, 42, 43, 57, 58, 60, 98, 112], "neg": [24, 29], "densiti": [24, 29], "contin": [24, 29], "trigger": [24, 29, 113, 117, 133], "avoid": [24, 29], "patholog": [24, 29], "piecewis": [24, 29], "constant": [24, 29, 32, 36, 93, 96, 138, 139, 143], "allow": [24, 29, 57, 58, 120], "randomsearch": [24, 31, 32, 38, 42, 49], "localandsortedrandomsearch": [24, 31, 32, 36, 42, 44, 45, 47], "math": [24, 31, 79], "mathcal": [24, 31], "abstractacquisitionmaxim": [32, 33, 34, 36, 37, 38, 42, 43], "5000": [32, 33, 34, 36, 37, 38, 139], "order": [32, 33, 42, 46, 48, 57, 61, 100, 101], "subclass": [32, 33, 42, 43, 71, 72], "_maxim": [32, 33], "becom": [32, 33], "candid": [32, 33, 34, 38], "previous_config": [32, 33], "n_point": [32, 33], "random_design": [32, 33, 35, 42, 43, 44, 45, 46, 47, 48, 49], "_challeng": [32, 33], "abstractrandomdesign": [32, 33, 35, 42, 43, 49, 93, 94, 95, 96, 97], "interleav": [32, 33, 35, 36, 42, 43, 44, 45, 47, 93, 94, 95, 96, 97], "scheme": [32, 33, 113, 114], "next_iter": [32, 33, 93, 94, 95, 96, 97], "differentialevolut": [32, 34], "differentialevolutionsolv": [32, 34], "scipi": [32, 34, 50, 54, 56], "accord": [32, 34, 36, 93, 95, 97], "multivari": [32, 34], "stochast": [32, 34, 140, 141, 149, 153], "natur": [32, 34], "gradient": [32, 34, 71, 72, 78, 79, 83, 140, 141, 149, 153], "larg": [32, 34, 130], "area": [32, 34], "larger": [32, 34], "convent": [32, 34], "storn": [32, 34], "price": [32, 34], "heurist": [32, 34], "journal": [32, 34, 152], "1997": [32, 34], "11": [32, 34, 142, 153], "341": [32, 34], "359": [32, 34], "localandsortedpriorrandomsearch": [32, 36], "uniform_configspac": [32, 36], "max_step": [32, 36, 37], "n_steps_plateau_walk": [32, 36, 37], "local_search_iter": [32, 36, 42, 45, 47], "prior_sampling_fract": [32, 36], "randomli": [32, 36, 42, 43, 49], "retriev": [32, 36, 57, 58, 139], "normalfloathp": [32, 36], "localsearch": [32, 36, 37], "maximum": [32, 36, 37, 42, 44, 45, 47, 49, 57, 58, 60, 64, 85, 87, 93, 95, 96, 120, 131], "plateau": [32, 36, 37], "walk": [32, 36, 37], "ratio": [32, 36, 42, 44, 47, 85, 87], "oppos": [32, 36], "circumv": [32, 36], "begin": [32, 36, 93, 94, 96], "defaut": [32, 36], "vectorization_min_obtain": [32, 37], "vectorization_max_obtain": [32, 37], "neighbor": [32, 37], "reduc": [32, 35, 37, 42, 44, 47, 65, 66, 67, 68, 69, 77, 85, 87, 113, 116, 138, 146], "challenger_callback": 35, "modulus_design": 35, "modulusrandomdesign": [35, 93, 96], "necessari": 35, "hundr": 35, "closur": 35, "on_ask_end": [39, 40], "on_ask_start": [39, 40], "on_next_configurations_end": [39, 40], "on_next_configurations_start": [39, 40], "on_tell_end": [39, 40, 133, 134], "stat": [39, 40, 50, 54, 56, 64, 134], "gracefulli": [39, 40, 134], "on_tell_start": [39, 40], "metadatacallback": [39, 41], "abstractfacad": [42, 43, 44, 45, 47, 49, 138, 142, 143], "acquisition_maxim": [42, 43, 44, 45, 46, 47, 48, 49], "initial_design": [42, 43, 44, 45, 46, 47, 48, 49, 131, 135, 138, 143], "runhistory_encod": [42, 43, 44, 45, 46, 47, 48, 49], "dask_client": [42, 43, 44, 45, 46, 47, 48, 49, 113, 116], "top": [42, 43], "backend": [42, 43], "organ": [42, 43], "manner": [42, 43, 44, 45, 47, 49], "suit": [42, 43], "With": [42, 43], "explicitli": [42, 43, 113, 116, 131, 133], "get_": [42, 43], "environment": [42, 43, 64], "abstractrunn": [42, 43, 64, 113, 114, 115, 116], "targetfunctionscriptrunn": [42, 43, 119], "most": [42, 43, 45, 47, 48, 50, 51, 98, 112, 131, 135, 138], "promis": [42, 43, 49], "initialdesign": [42, 43], "randomdesign": [42, 43], "drawn": [42, 43, 44, 45, 47, 67, 69, 79, 93, 97], "abstractintensifi": [42, 43, 57, 58, 60, 61, 64], "abstractmultiobjectivealgorithm": [42, 43, 89, 90, 91, 92, 98, 100, 101, 112], "runhistoryencod": [42, 43, 44, 45, 49, 100, 104, 105, 106, 107, 108, 109], "liter": [42, 43, 124], "indic": [42, 43, 93, 94, 96, 113, 117, 139, 143], "noth": [42, 43, 131], "yml": [42, 43], "attach": [42, 43, 113, 116], "close": [42, 43, 113, 116], "manual": [42, 43, 113, 116, 135], "upon": [42, 43, 113, 116], "trialinfo": [42, 43, 57, 58, 60, 61, 64, 98, 99, 112, 113, 114, 115, 116, 133, 134], "static": [42, 43, 44, 45, 46, 47, 48, 49, 120], "get_acquisition_funct": [42, 43, 44, 45, 47, 49, 135], "get_acquisition_maxim": [42, 43, 44, 45, 47, 49], "get_config_selector": [42, 43], "retri": [42, 43, 57, 60, 63], "get_initial_design": [42, 43, 44, 45, 47, 48, 49, 131, 135, 138, 143], "warm": [42, 43], "abstractinitialdesign": [42, 43, 50, 51, 52, 53, 54, 55, 56], "get_intensifi": [42, 43, 44, 45, 46, 47, 48, 49, 132, 135, 143], "get_model": [42, 43, 44, 45, 47, 49], "get_multi_objective_algorithm": [42, 43, 44, 45, 47, 49, 142], "get_random_design": [42, 43, 44, 45, 47, 49], "get_runhistory_encod": [42, 43, 44, 45, 47, 49], "prepar": [42, 43, 100, 101], "abstractrunhistoryencod": [42, 43, 100, 101, 103, 104], "hash": [42, 43, 120, 122], "data_to_scatt": [42, 43, 64], "dask_runn": [42, 43], "scatter": [42, 43, 64, 113, 114, 116, 118, 130, 138, 142, 143], "round": [42, 43, 46, 48, 57, 61, 64, 113, 114, 116, 118], "robin": [42, 43, 64, 113, 114, 116, 118], "fashion": [42, 43, 64, 113, 114, 115, 116, 118], "group": [42, 43, 57, 61, 64, 113, 114, 116, 118], "roughli": [42, 43, 64, 113, 114, 116, 118], "speak": [42, 43, 64, 113, 114, 116, 118], "de": [42, 43, 64, 113, 114, 116, 118], "serial": [42, 43, 64, 113, 114, 115, 116, 118], "big": [42, 43, 64, 113, 114, 116, 118], "share": [42, 43, 64, 113, 114, 116, 118], "veri": [42, 43, 49, 57, 58, 64, 113, 114, 116, 118], "fill": [42, 43, 57, 58, 61, 64, 115], "describ": [42, 43, 64], "trialvalu": [42, 43, 64, 98, 99, 112, 113, 114, 115, 116, 132, 133, 134], "relev": [42, 43, 64], "regard": [42, 43, 64], "ones": [42, 43, 64, 126, 143], "additional_config": [42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 135], "defaultinitialdesign": [42, 44, 49, 50, 52], "2000": [42, 44], "max_incumb": [42, 44, 45, 46, 47, 48, 49, 57, 58, 59, 60, 61], "n_tree": [42, 44, 47, 85, 87], "ratio_featur": [42, 44, 47, 85, 87], "8333333333333334": [42, 44, 85, 87], "min_samples_split": [42, 44, 47, 85, 87], "min_samples_leaf": [42, 44, 47, 85, 87], "max_depth": [42, 44, 47, 85, 87], "pca_compon": [42, 44, 65, 66, 67, 68, 69, 77, 85, 87, 88], "tree": [42, 44, 47, 85, 87], "split": [42, 44, 47, 85, 87, 135, 138, 139, 143], "leaf": [42, 44, 47, 85, 87], "depth": [42, 44, 47, 85, 87, 131], "pca": [42, 44, 65, 66, 67, 68, 69, 77, 85, 87], "randomforest": [42, 44, 47, 85, 87], "objective_weight": [42, 44, 45, 47, 49, 89, 91, 142], "length": [42, 44, 45, 47, 49, 67, 71, 73, 77, 89, 91], "meanaggregationstrategi": [42, 44, 45, 47, 49, 89, 91], "probabilityrandomdesign": [42, 44, 45, 47, 93, 97], "n_config": [42, 45, 47, 48, 50, 51, 52, 53, 54, 55, 120, 131, 138, 143], "n_configs_per_hyperparamt": [42, 45, 47, 48], "max_ratio": [42, 45, 47, 48, 50, 51, 52, 53, 54, 55, 146], "25": [42, 45, 47, 48, 50, 51, 52, 53, 54, 55, 130, 134, 138, 146], "n_configs_per_hyperparamet": [42, 45, 47, 48, 50, 51, 52, 53, 54, 55, 138], "my": [42, 45, 47, 48, 50, 51], "cover": [42, 45, 47, 48, 50, 51], "sobolinitialdesign": [42, 45, 47, 50, 56], "race_against": [42, 45, 47], "get_kernel": [42, 45], "kernel": [42, 45, 67, 68, 69, 77, 131], "composit": [42, 45], "hammingkernel": [42, 45, 71, 73], "matern": [42, 45, 71, 74], "nois": [42, 45], "model_typ": [42, 45], "chosen": [42, 45, 138, 149], "choos": [42, 45, 67, 77, 138], "vanilla": [42, 45], "gaussianprocess": [42, 45, 67, 69, 77], "mcmcgaussianprocess": [42, 45, 67, 77], "08447232371720552": [42, 45], "aggress": [42, 46, 49, 138, 152], "eta": [42, 46, 48, 57, 59, 61, 138, 139], "instance_seed_ord": [42, 46, 48, 57, 59, 61], "shuffle_onc": [42, 46, 48, 57, 59, 61], "incumbent_select": [42, 46, 48, 57, 59, 61, 138], "highest_observed_budget": [42, 46, 48, 57, 59, 61], "proport": [42, 46, 48, 57, 61], "shuffl": [42, 46, 48, 57, 58, 60, 61, 135, 138, 139, 143], "bracket": [42, 46, 48, 57, 59, 61, 138, 139], "individu": [42, 46, 48, 57, 61, 98, 112], "any_budget": [42, 46, 48, 57, 61], "regardless": [42, 46, 48, 57, 61], "highest_budget": [42, 46, 48, 57, 61, 138], "10000": [42, 47, 130], "1048576": [42, 47, 85, 87], "scale": [42, 47, 71, 73, 78, 79, 80, 81, 83, 100, 101, 105, 107, 108, 109, 131], "runhistorylogscaledencod": [42, 47, 100, 107], "randominitialdesign": [42, 48, 50, 55], "get_trial": [42, 48, 98, 112], "notic": [42, 48, 120, 142], "queu": [42, 48], "absolut": [42, 48], "\u03b8": [42, 49], "unpromis": [42, 49], "reject": [42, 49, 57, 58, 60, 130, 132, 134, 135, 138, 139, 143, 146], "replac": [42, 49, 57, 58, 113, 118, 138], "dummi": [42, 49], "neither": [42, 49, 98, 112], "nor": [42, 49, 98, 112], "increas": [42, 49, 93, 96], "randommodel": [42, 49, 65, 88], "select_configur": [50, 51], "_select_configur": [50, 51], "factorialinitialdesign": [50, 53], "middl": [50, 53], "latinhypercubeinitialdesign": [50, 54], "doc": [50, 54], "qmc": [50, 54, 56], "latinhypercub": [50, 54], "arg": [50, 56, 85, 86, 100, 105, 109], "scrambl": [50, 56], "io": [50, 56], "devdoc": [50, 56], "event": [57, 58, 60, 61], "__iter__": [57, 58, 60, 63, 98, 112], "__post_init__": [57, 58, 61, 120], "_tf_seed": [57, 58], "_tf_instanc": [57, 58], "get_callback": [57, 58], "develop": [57, 58, 152], "futur": [57, 58, 113, 116], "get_incumbent_instance_seed_budget_key_differ": [57, 58], "There": [57, 58], "situat": [57, 58], "intersect": [57, 58], "instanceseedbudgetkei": [57, 58, 61, 98, 99, 112, 126], "get_incumbent_instance_seed_budget_kei": [57, 58], "sort_bi": [57, 58, 98, 112], "num_trial": [57, 58, 98, 112], "get_instance_seed_budget_kei": [57, 58, 61, 98, 99, 112], "get_instance_seed_keys_of_interest": [57, 58, 61], "instance_seed_kei": [57, 58], "interest": [57, 58, 61], "instanceseedkei": [57, 58, 98, 99], "get_rejected_config": [57, 58], "fail": [57, 58, 113, 116, 117, 120], "get_stat": [57, 58, 59, 60, 61], "get_trials_of_interest": [57, 58, 61], "incumbents_chang": [57, 58], "load": [57, 58, 64, 98, 112, 120, 131], "trajectori": [57, 58, 99, 138], "reset": [57, 58, 59, 60, 61, 64, 98, 112], "set_stat": [57, 58, 59, 60, 61], "trajectoryitem": [57, 58, 99], "update_incumb": [57, 58, 61], "requeu": [57, 58], "b": [57, 58, 131], "inferior": [57, 58], "notabl": [57, 58], "calculate_pareto_front": [57, 58, 126], "hard": [57, 58], "special": [57, 58], "mo": [57, 58], "amend": [57, 58], "suffici": [57, 58], "overlap": [57, 58], "lastli": [57, 58], "_max_incumb": [57, 58], "amount": [57, 58, 60, 93, 96, 113, 116], "crowd": [57, 58, 126, 142], "distanc": [57, 58, 100, 101, 126, 142], "used_walltim": [57, 58, 64], "forev": [57, 60], "exist": [57, 60, 64, 98, 112, 131, 134], "succes": [57, 61], "out": [57, 61, 67, 77], "batch": [57, 61, 123, 135, 138], "post": [57, 61, 143], "queri": [57, 61, 98, 112], "rid": [57, 61], "print_track": [57, 61], "handl": [63, 98, 112, 113, 114, 116, 118, 119], "three": 63, "etc": [63, 71, 72, 120], "intiti": 63, "next_config": 63, "store": [64, 98, 112, 138], "inconsist": [64, 130, 134, 146], "budget_exhaust": 64, "walltim": [64, 99, 138], "cputim": 64, "exceed": [64, 131], "print_stat": 64, "register_callback": 64, "index": 64, "append": [64, 100, 101, 138], "remaining_cputim": 64, "subtract": [64, 131], "remaining_tri": 64, "ta": 64, "remaining_walltim": 64, "update_acquisition_funct": 64, "update_model": 64, "used_target_function_walltim": 64, "much": [64, 98, 99, 112, 113, 116, 138, 142], "exce": 64, "y": [65, 66, 71, 72, 85, 87, 100, 101, 122, 130, 134, 138], "concret": [65, 66], "covariance_typ": [65, 66], "diagon": [65, 66], "_predict": [65, 66], "std": [65, 66], "deviat": [65, 66, 78, 82, 135], "covari": [65, 66], "whole": [65, 66], "tupl": [65, 66, 71, 72, 84, 85, 87, 98, 100, 101, 112, 113, 114, 115, 116, 118, 119, 122, 125, 139, 142], "var": [65, 66, 84, 85, 87, 120, 139], "predict_margin": [65, 66, 84, 85, 87], "_train": [65, 66], "correspond": [65, 66, 78, 80, 125, 134], "multiobjectivemodel": [65, 84], "abstractgaussianprocess": [67, 68, 69, 77], "n_restart": [67, 69], "normalize_i": [67, 69, 77], "likelihood": [67, 69], "robo": [67, 69, 77, 79], "klein": [67, 69, 77, 79], "falkner": [67, 69, 77, 79], "mansur": [67, 69, 77, 79], "2017": [67, 69, 77, 79], "workshop": [67, 69, 77, 79], "restart": [67, 69, 93, 95], "zero": [67, 69, 77, 100, 105, 107, 108, 109, 132], "unit": [67, 69, 77, 135], "sample_funct": [67, 69], "x_test": [67, 69], "n_func": [67, 69], "posterior": [67, 69], "function_sampl": [67, 69], "n_mcmc_walker": [67, 77], "chain_length": [67, 77], "burning_step": [67, 77], "mcmc_sampler": [67, 77], "emce": [67, 77], "average_sampl": [67, 77], "markow": [67, 77], "propos": [67, 77], "walker": [67, 77], "last": [67, 77, 131, 134], "burn": [67, 77], "actual": [67, 77, 113, 114], "sampler": [67, 77], "nut": [67, 77], "abstractkernel": [71, 72, 73, 74, 75, 76], "operate_on": [71, 72, 73, 74, 75, 76], "has_condit": [71, 72, 73, 74, 75, 76], "mixin": [71, 72], "overrid": [71, 72, 130, 134, 146], "place": [71, 72, 135], "hierarchi": [71, 72], "prevent": [71, 72], "instantiat": [71, 72], "mypi": [71, 72], "won": [71, 72], "relat": [71, 72], "superclass": [71, 72], "statement": [71, 72], "access": [71, 72], "member": [71, 72], "_call": [71, 72], "super": [71, 72], "get_param": [71, 72, 73], "arrai": [71, 72, 143], "oper": [71, 72], "abstractprior": [71, 72, 78, 79, 80, 81, 82, 83], "primarili": [71, 72], "eval_gradi": [71, 72], "estim": [71, 72, 85, 87, 100, 101], "subobject": [71, 72], "param": [71, 72], "map": [71, 72, 98, 112], "n_dim": [71, 72], "fix": [71, 72], "constantkernel": [71, 72], "constant_valu": [71, 72], "constant_value_bound": [71, 72], "05": [71, 72, 73, 74, 75, 76, 89, 92, 142, 153], "100000": [71, 72, 73, 74, 75, 76], "shape": [71, 72, 78, 80], "n_samples_x": [71, 72], "n_featur": [71, 72], "n_samples_i": [71, 72], "boolean": [71, 72], "k_gradient": [71, 72], "opt": [71, 72, 131, 138], "length_scal": [71, 73, 74, 75], "length_scale_bound": [71, 73, 74, 75], "stationarykernelmixin": [71, 73], "normalizedkernelmixin": [71, 73], "ham": [71, 73], "hyperparameter_length_scal": [71, 73], "maternkernel": [71, 74], "nu": [71, 74], "productkernel": [71, 72], "k1": [71, 72], "k2": [71, 72], "product": [71, 72], "rbfkernel": [71, 75], "rbf": [71, 75, 131], "sumkernel": [71, 72], "sum": [71, 72, 98, 112], "whitekernel": [71, 76], "noise_level": [71, 76], "noise_level_bound": [71, 76], "gammaprior": [78, 80], "loc": [78, 80], "gamma": [78, 80, 131], "greater": [78, 80, 120], "canon": [78, 80], "greather": [78, 80, 120], "horseshoeprior": [78, 81], "horsesho": [78, 81], "spearmint": [78, 81, 83], "lognormalprior": [78, 82], "softtophatprior": [78, 83], "lower_bound": [78, 83], "upper_bound": [78, 83], "expon": [78, 83], "soft": [78, 83], "tophat": [78, 83], "upper": [78, 83, 98, 112, 135], "get_gradi": [78, 79, 83], "theta": [78, 79, 83], "hi": [78, 79, 83], "_get_gradi": [78, 79, 83], "get_log_prob": [78, 79, 83], "exponenti": [78, 79, 83], "_get_log_prob": [78, 79, 83], "tophatprior": [78, 83], "whenev": 79, "lnprob": 79, "rather": 79, "sample_from_prior": 79, "n_sampl": 79, "_sample_from_prior": 79, "abstractrandomforest": [85, 86, 87], "n_points_per_tre": [85, 87], "eps_pur": [85, 87], "08": [85, 87, 145, 153], "max_nod": [85, 87], "log_i": [85, 87], "account": [85, 87, 100, 101, 138], "total": [85, 87, 113, 116, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 150, 153], "assumpt": [85, 87], "uncertainti": [85, 87], "abc": [89, 90, 113, 114], "loss": [89, 90, 91, 92, 113, 118, 139], "rho": [89, 92], "bham": [89, 92], "ac": [89, 92], "uk": [89, 92], "jdk": [89, 92], "ukci": [89, 92], "2015": [89, 92], "small": [89, 92], "posit": [89, 92, 113, 114, 116, 118, 119], "helper": [93, 94], "th": [93, 94, 95, 96, 97], "cosineannealingrandomdesign": [93, 95], "min_prob": [93, 95], "max_prob": [93, 95], "restart_iter": [93, 95], "decreas": [93, 95, 96, 97], "cosin": [93, 95], "move": [93, 95, 98, 112], "_probabl": [93, 95], "dynamicmodulusrandomdesign": [93, 96], "start_modulu": [93, 96], "modulus_incr": [93, 96], "end_modulu": [93, 96], "fraction": [93, 96], "ever": [93, 96], "adjust": [93, 96], "dynamicprobabilityrandomdesign": [93, 97], "multipli": [93, 97], "get_instance_seed_kei": [98, 99], "overwrite_existing_tri": [98, 112], "trialkei": [98, 99, 112], "importantli": [98, 112], "theoret": [98, 112], "picklabl": [98, 112], "__contains__": [98, 112, 131], "semant": [98, 112], "__eq__": [98, 112], "equal": [98, 112], "__getitem__": [98, 112], "__len__": [98, 112], "len": [98, 112, 138], "force_upd": [98, 112], "add_running_tri": [98, 112], "add_trial": [98, 112], "instance_seed_budget_kei": [98, 112], "wrt": [98, 112], "config_id": [98, 99, 112, 130, 138], "get_config_id": [98, 112], "get_configs_per_budget": [98, 112], "budget_subset": [98, 100, 101, 112], "get_cost": [98, 112, 133], "docstr": [98, 112], "re": [98, 112], "cach": [98, 112], "highest_observed_budget_onli": [98, 112], "get_min_cost": [98, 112], "min_cost": [98, 112], "get_running_config": [98, 112], "get_running_tri": [98, 112], "has_config": [98, 112], "ids_config": [98, 112], "incremental_update_cost": [98, 112], "increment": [98, 112], "disk": [98, 112], "scaral": [98, 112], "json": [98, 112], "sum_cost": [98, 112], "update_cost": [98, 112], "_cost_per_config": [98, 112], "_num_trials_per_config": [98, 112], "scratch": [98, 112], "accordingli": [98, 112, 135], "update_from_json": [98, 112], "intenum": [98, 110], "memoryout": [100, 101, 103, 104, 106, 107, 108], "lower_budget_st": [100, 101, 103, 104, 106, 107, 108], "scale_percentag": [100, 101, 103, 104, 106, 107, 108], "noqa": [100, 101], "e501": [100, 101], "percentil": [100, 101], "sub": [100, 101], "typeerror": [100, 101], "get_configur": [100, 101], "represent": [100, 101], "configs_arrai": [100, 101], "transform_response_valu": [100, 101, 103, 104, 105, 106, 107, 108, 109], "transformed_valu": [100, 101], "runhistoryeipsencod": [100, 103], "runhistoryinversescaledencod": [100, 105], "linearli": [100, 105, 107, 108, 109], "invers": [100, 105], "runhistorylogencod": [100, 106], "runhistoryscaledencod": [100, 108], "runhistorysqrtscaledencod": [100, 109], "squar": [100, 109, 142], "notevaluatederror": 111, "required_argu": [113, 114, 115, 118, 119], "perspect": [113, 114], "submit_run": [113, 114, 116], "run_wrapp": [113, 114, 116], "among": [113, 114], "realli": [113, 114], "translat": [113, 114], "iter_result": [113, 114, 115, 116], "consum": [113, 114], "decis": [113, 114, 115, 116], "count_available_work": [113, 114, 115, 116], "is_run": [113, 114, 115, 116], "instantli": [113, 114, 115, 116], "pend": [113, 114, 115, 116], "popul": [113, 114, 115, 116], "_results_queu": [113, 114, 115, 116], "get_finish": [113, 114, 115, 116], "aka": [113, 114, 116], "repres": [113, 114, 116, 118, 119, 124, 139, 152], "took": [113, 114, 116, 118, 119], "dask_data_to_scatt": [113, 114, 116, 118], "around": [113, 114], "encapsul": [113, 114], "simplifi": [113, 114], "isol": [113, 114], "submit_tri": [113, 114, 115, 116], "embed": [113, 114, 116], "eventu": [113, 114], "fifo": [113, 114], "dictat": [113, 114, 116], "submiss": [113, 114], "endeavor": [113, 114], "daskparallelrunn": [113, 116], "single_work": [113, 116], "patienc": [113, 116], "intend": [113, 116], "compli": [113, 116], "bridg": [113, 116], "pattern": [113, 116], "wrap": [113, 116], "baserunn": [113, 116], "precis": [113, 116], "task": [113, 115, 116, 120, 135], "manag": [113, 116, 120], "Will": [113, 116], "__del__": [113, 116], "delet": [113, 116], "forc": [113, 116], "dynam": [113, 116], "alloc": [113, 116, 138], "procedur": [113, 116], "firstruncrashedexcept": [113, 117], "targetalgorithmabortexcept": [113, 117], "abort": [113, 117, 134], "targetfunctionrunn": [113, 118], "abstractserialrunn": [113, 115, 118, 119], "element": [113, 118], "algorithm_kwarg": [113, 118, 119, 131], "wall": [113, 118], "properli": 115, "immedi": 115, "posixpath": 120, "smac3_output": 120, "crash_cost": 120, "cputime_limit": 120, "trial_walltime_limit": 120, "use_default_config": 120, "frame": 120, "constraint": [120, 139], "mb": [120, 137, 141, 145, 148, 150, 153], "histor": 120, "benchmark": [120, 131], "fewer": 120, "count_instance_featur": 120, "count_object": 120, "make_serializ": 120, "serializ": 120, "convert_configurations_to_arrai": 122, "imput": 122, "get_conditional_hyperparamet": 122, "get_config_hash": 122, "char": 122, "get_typ": 122, "rtype": 122, "print_config_chang": 122, "chunk": 123, "recursively_compare_dict": 123, "diff": 123, "recurs": [123, 131], "get_logg": 124, "logger_nam": 124, "setup_log": 124, "normalized_cost": 125, "config_instance_seed_budget_kei": 126, "basi": 126, "sort_by_crowding_dist": 126, "anyoptim": 126, "pymoo": 126, "blob": 126, "20abef1ade71915352217400c11ece4c2f35163": 126, "nsga2": 126, "py": [126, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 153], "sorted_list": 126, "browser": [130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "binder": [130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "numer": 130, "abstract_initial_design": [130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "147": [130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 146, 153], "abstract_intensifi": [130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "305": [130, 134, 142, 146], "515": [130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "f09c3b": [130, 134], "594": [130, 132, 134, 135, 138, 139, 143, 146], "bec0fc": [130, 134], "a34626": [130, 134], "f72805": [130, 134], "59460a": [130, 134], "f74db6": [130, 134], "22beb0": [130, 134], "b07de4": [130, 134], "2ec12b": [130, 134], "7ea8bb": [130, 134], "c4859b": [130, 134], "e501ff": [130, 134], "319": [130, 131, 132, 134, 138, 139, 142], "0ca9f7": 130, "223998": 130, "327": [130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "exhaust": [130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "328": [130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "329": [130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "330": [130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "465924744409418e": 130, "09": 130, "matplotlib": [130, 138, 142, 143], "pyplot": [130, 138, 142, 143], "plt": [130, 138, 142, 143], "__copyright__": [130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "copyright": [130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "freiburg": [130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "hannov": [130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "__license__": [130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "quadraticfunct": [130, 134], "add_hyperparamet": [130, 131, 132, 133, 134, 135, 138, 139, 143], "figur": [130, 138, 142], "ground": 130, "truth": 130, "linspac": 130, "blue": [130, 142], "alpha": [130, 135, 139, 142], "zorder": [130, 142], "9999": 130, "marker": [130, 138, 142, 143], "o": [130, 142], "red": [130, 142, 143], "default_cost": [130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "get_default_configur": [130, 131, 132, 134, 135, 138, 139, 142, 143, 146], "incumbent_cost": [130, 131, 132, 134, 135, 138, 139, 146], "too": 130, "354": [130, 137, 153], "jupyt": [130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 149], "notebook": [130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 149], "1_quadratic_funct": [130, 137, 153], "ipynb": [130, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "mix": 131, "1_basic": [131, 133, 137, 153], "2_svm_cv": [131, 137, 153], "57": [131, 133], "deprecationwarn": [131, 133], "act": [131, 133], "get_dictionari": [131, 133], "config_dict": 131, "abstract_runn": 131, "treat": 131, "138": 131, "traceback": 131, "recent": 131, "hostedtoolcach": [131, 138], "13": [131, 138], "x64": [131, 138], "lib": [131, 138], "site": [131, 138], "target_function_runn": [131, 143], "184": 131, "rval": 131, "config_copi": 131, "257": 131, "58": 131, "151": 131, "970": 131, "148": 131, "isinst": 131, "recursionerror": 131, "4ba1ca": 131, "function_bas": 131, "4655": 131, "runtimewarn": 131, "invalid": 131, "encount": 131, "diff_b_a": 131, "random_forest": 131, "222": 131, "slice": 131, "preds_as_arrai": 131, "nanmean": 131, "exp": 131, "axi": 131, "very_small_numb": 131, "incondit": [131, 138, 143], "wide": [131, 135], "linear": 131, "poli": 131, "sigmoid": 131, "001": [131, 138, 143], "shrink": 131, "degre": 131, "coef": 131, "coef0": 131, "auto": 131, "gamma_valu": 131, "0001": [131, 138, 143], "Then": 131, "use_degre": 131, "parent": [131, 138, 143], "use_coef": 131, "use_gamma": 131, "use_gamma_valu": 131, "add_condit": [131, 138, 143], "pop": 131, "767": [131, 137, 153], "38310a": 132, "a840bc": 132, "e8ddec": 132, "e74ba7": 132, "1eebbc": 132, "f01c34": 132, "1df946": 132, "535c5d": 132, "16916": 132, "1183978687059386": 132, "dataclass": 132, "rosenbrock2d": [132, 133], "x0": [132, 133, 146], "x1": [132, 133], "rosenbrock": 132, "toi": 132, "serv": 132, "minimium": 132, "x_i": 132, "domain": 132, "interv": 132, "x2": [132, 133], "_": [132, 139], "assert": [132, 133, 134, 138], "90": 132, "647": [132, 137, 153], "3_ask_and_tel": [132, 137, 153], "easieast": 133, "4_callback": [133, 137, 153], "9968221839517355": 133, "30847043171525": 133, "1102": 133, "7877872130716": 133, "03135360777378082": 133, "21179260686039925": 133, "465623793958126": 133, "__future__": [133, 134, 139, 142, 143], "annot": [133, 134, 139, 142, 143], "__init__": [133, 134, 139], "trials_count": 133, "999999": 133, "quadrat": [134, 136, 137, 149, 153], "224": 134, "332": 134, "shut": 134, "down": 134, "497": 134, "287": 134, "209652396": 134, "09616130553975616": 134, "0393385263038637e": 134, "07": 134, "stopcallback": 134, "stop_aft": 134, "_stop_aft": 134, "And": [134, 135], "incumbent2": 134, "774": [134, 137, 153], "5_continu": [134, 137, 153], "layer": [135, 139, 140, 141, 149, 153], "perceptron": [135, 139, 140, 141, 149, 153], "mlp": [135, 138, 139, 143], "knowledg": 135, "similar": 135, "intuit": 135, "gain": 135, "categoricalhyperparamet": 135, "optimizt": 135, "stick": 135, "prior_acqusition_funct": 135, "107": 135, "7ec7f": 135, "6acb23": 135, "37a8e7": 135, "5b96ec": 135, "35cf09": 135, "038952336737852145": 135, "02727174249458364": 135, "betaintegerhyperparamet": 135, "normalfloathyperparamet": 135, "uniformintegerhyperparamet": 135, "load_digit": [135, 138, 139, 143], "convergencewarn": 135, "stratifiedkfold": [135, 138, 139, 143], "neural_network": [135, 138, 143], "mlpclassifi": [135, 138, 143], "digit": [135, 138, 139, 143], "illustr": [135, 138], "educ": 135, "n_layer": [135, 138, 143], "believ": 135, "rel": 135, "skew": 135, "toward": 135, "wider": 135, "n_neuron": [135, 138, 143], "256": [135, 138, 143], "relu": [135, 138, 143], "60": [135, 138], "logist": [135, 138, 143], "tanh": [135, 138, 143], "default_valu": 135, "adam": [135, 138, 143], "sgd": [135, 138, 139, 143], "opinion": 135, "leav": 135, "batch_siz": [135, 138, 143], "512": 135, "128": 135, "center": 135, "learning_rate_init": [135, 138, 143], "catch_warn": [135, 138, 139, 143], "filterwarn": [135, 138, 139, 143], "categori": 135, "hidden_layer_s": [135, 138, 143], "solver": [135, 138, 143], "max_it": [135, 138, 139, 143], "fold": [135, 138, 143], "n_split": [135, 138, 139, 143], "error_scor": [135, 138, 143], "default_config": 135, "conduct": 135, "proven": 135, "23": [135, 137, 152, 153], "363": [135, 137, 153], "6_prior": [135, 137, 153], "00": [137, 141, 142, 145, 148, 150, 153], "052": 137, "mem": [137, 141, 145, 148, 150, 153], "02": [137, 153], "advantag": 138, "choic": 138, "abstract_facad": [138, 143], "successive_halv": [138, 139], "164": [138, 139], "323": [138, 139], "325": [138, 139], "7777777777777777": 138, "333333333333332": 138, "72f7f7": 138, "9d67d8": 138, "67ee32": 138, "3822062015533447": 138, "309": 138, "36672856700711853": 138, "017254719900959392": 138, "82": 138, "182": 138, "userwarn": 138, "port": 138, "8787": 138, "perhap": 138, "host": 138, "server": 138, "44151": 138, "ceb3eb": 138, "efc781": 138, "01265716552734375": 138, "387": 138, "0178087279480037": 138, "equalscondit": [138, 143], "lbfg": [138, 143], "300": [138, 139, 143], "invscal": [138, 139, 143], "restrict": 138, "use_lr": [138, 143], "use_lr_init": [138, 143], "use_batch_s": [138, 143], "deactiv": 138, "virtu": 138, "placehold": 138, "lr": [138, 143], "lr_init": [138, 143], "ceil": [138, 143], "plot_trajectori": 138, "titl": [138, 142, 143, 152], "xlabel": [138, 142, 143], "ylabel": [138, 142, 143], "ylim": 138, "label": [138, 142, 143], "__class__": 138, "legend": [138, 142, 143], "intensifier_object": 138, "237": [138, 141, 153], "1_mlp_epoch": [138, 141, 153], "wlog": 139, "had": 139, "binari": 139, "27": 139, "6666666666666665": 139, "15": 139, "e5c425": 139, "884840": 139, "812224": 139, "150": [139, 142], "250": 139, "350": 139, "3c910e": 139, "400": 139, "450": 139, "0550847053527832": 139, "4548": 139, "15489347419148672": 139, "005937605060508486": 139, "itertool": 139, "linear_model": 139, "sgdclassifi": 139, "digitsdataset": 139, "_data": 139, "get_inst": 139, "classa": 139, "classb": 139, "target_nam": 139, "get_instance_featur": 139, "get_instance_data": 139, "logical_or": 139, "l1_ratio": 139, "eta0": 139, "00001": 139, "clf": 139, "log_loss": 139, "penalti": 139, "elasticnet": 139, "early_stop": 139, "35": [139, 141, 153], "049": [139, 141, 153], "2_sgd_dataset": [139, 141, 153], "descent": [140, 141, 149, 153], "55": 141, "286": 141, "2_multi_fidel": [141, 153], "shown": [142, 143], "priorit": 142, "91bfd9": 142, "602": [142, 143], "9d232c": 142, "427430": 142, "631e51": 142, "c4bc7d": 142, "d25f7e": 142, "ddd02b": 142, "89e67c": 142, "c22923": 142, "44c9c5": 142, "ae3488": 142, "627": 142, "055dc0": 142, "b6fd7c": 142, "e66eef": 142, "3f38b6": 142, "7a68da": 142, "5b0023": 142, "be7be9": 142, "cf7b9e": 142, "261ae6": 142, "916981": 142, "a493d": 142, "51f5b1": 142, "5bb5d6": 142, "a0a42d": 142, "f5781e": 142, "cd512c": 142, "52319d": 142, "96258f": 142, "e458eb": 142, "48e226": 142, "925028": 142, "400482": 142, "ea761d": 142, "199e42": 142, "1d89c9": 142, "157dde": 142, "4eabb2": 142, "9f5bb9": 142, "610e96": 142, "792399": 142, "cd1a84": 142, "143e8d": 142, "bc5507": 142, "d2073d": 142, "6d39c3": 142, "310f3d": 142, "ee50f0": 142, "191396": 142, "aa13c9": 142, "51c6a1": 142, "6aa208": 142, "7c08ce": 142, "0f10be": 142, "baab59": 142, "1118e9": 142, "4abd42": 142, "146491": 142, "d52695": 142, "4f3e25": 142, "6dfe14": 142, "ed4f3": 142, "5a3ff6": 142, "37ee26": 142, "1e385c": 142, "460b13": 142, "efd57f": 142, "4b3f4b": 142, "37a50d": 142, "49336c": 142, "c1bea5": 142, "e4f600": 142, "8db6b9": 142, "00947e": 142, "623aaa": 142, "e7652a": 142, "c17b3b": 142, "c9a4ab": 142, "c78bba": 142, "f523f5": 142, "d5d9b3": 142, "050956": 142, "04cf46": 142, "cd933e": 142, "6a4a47": 142, "7cab7f": 142, "a882a8": 142, "cfe943": 142, "161437": 142, "eb7876": 142, "257ec9": 142, "0038ea": 142, "b779c7": 142, "9621a8": 142, "26d5a4": 142, "fff544": 142, "ea6007": 142, "850574": 142, "405f05": 142, "016225": 142, "c6f7e7": 142, "b62dbe": 142, "5b4ebd": 142, "dff21b": 142, "c13f17": 142, "ef6d00": 142, "4051b5": 142, "03d947": 142, "d2a8ac": 142, "4ee072": 142, "e4515": 142, "a241bb": 142, "c2b5f5": 142, "2b4703": 142, "1d3f71": 142, "09c690": 142, "980177": 142, "18b4fb": 142, "5889c8": 142, "38990f": 142, "af00a5": 142, "6ea6dc": 142, "caf420": 142, "be6467": 142, "a2cbcd": 142, "f3c58a": 142, "31cac4": 142, "04b3b4": 142, "62390f": 142, "f4d7f6": 142, "e6e911": 142, "46a579": 142, "973900": 142, "818cbb": 142, "7c3c4a": 142, "6582db": 142, "d6935c": 142, "cd4c2b": 142, "dd5f9b": 142, "8cae70": 142, "759585": 142, "470bcf": 142, "36943e": 142, "624738": 142, "0d9f14": 142, "2f3430": 142, "2215da": 142, "80f804": 142, "9ceac5": 142, "b49511": 142, "01538581": 142, "51922763": 142, "98157338e": 142, "12703017e": 142, "66494111": 142, "40318427": 142, "27572929": 142, "17533202": 142, "23793885": 142, "78743083": 142, "09228592": 142, "87714199": 142, "16368713": 142, "04898446": 142, "5425014": 142, "16441216": 142, "56462636": 142, "56122534": 142, "01575389": 142, "33666398": 142, "metric1": 142, "metric2": 142, "plot_from_smac": 142, "enumer": 142, "3000": 142, "337": [142, 145, 153], "1_schaffer": [142, 145, 153], "72": 143, "3623cc": 143, "540db2": 143, "0c9159": 143, "f85532": 143, "e0cd95": 143, "0ef71": 143, "c5a005": 143, "de6781": 143, "3374de": 143, "10611a": 143, "91915a": 143, "626837968826294": 143, "157": 143, "60155834": 143, "2125026": 143, "04146162": 143, "43685484": 143, "05508743": 143, "2919848": 143, "03589291": 143, "49559629": 143, "03422392": 143, "80598891": 143, "05899335": 143, "3472122": 143, "17836506": 143, "2157594": 143, "09098731": 143, "26408601": 143, "multi_object": 143, "start_tim": 143, "plot_pareto": 143, "average_pareto_cost": 143, "vstack": 143, "pareto_cost": 143, "argsort": 143, "costs_x": 143, "costs_i": 143, "pareto_costs_x": 143, "pareto_costs_i": 143, "tolist": 143, "linestyl": 143, "36": [143, 145, 153], "984": [143, 145, 153], "2_parego": [143, 145, 153], "2d": [144, 145, 149, 153], "schaffer": [144, 145, 149, 153], "321": 145, "3_multi_object": [145, 153], "content": 146, "95": 146, "568877": 146, "88bb69": 146, "7870ec": 146, "5beafa": 146, "887": [146, 148, 153], "1_call_target_function_script": [146, 148, 153], "5_commandlin": [148, 153], "varieti": 149, "examples_python": 149, "zip": 149, "examples_jupyt": 149, "000": 150, "miro": 151, "Its": 152, "cite": 152, "articl": 152, "jmlr22a": 152, "author": 152, "katharina": 152, "eggensperg": 152, "matthia": 152, "feurer": 152, "andr\u00e9": 152, "biedenkapp": 152, "difan": 152, "deng": 152, "carolin": 152, "benjamin": 152, "tim": 152, "ruhkopf": 152, "ren\u00e9": 152, "sass": 152, "versatil": 152, "research": 152, "year": 152, "2022": 152, "volum": 152, "54": 152, "url": 152, "v23": 152, "21": 152, "0888": 152, "hoo": 152, "h": 152, "leyton": 152, "brown": 152, "proceed": 152, "confer": 152, "intellig": 152, "lion": 152, "visit": 152, "guidelin": 152, "14": 153, "546": 153, "galleri": 153}, "objects": {"smac": [[23, 0, 0, "-", "acquisition"], [39, 0, 0, "-", "callback"], [42, 0, 0, "-", "facade"], [50, 0, 0, "-", "initial_design"], [57, 0, 0, "-", "intensifier"], [62, 0, 0, "-", "main"], [65, 0, 0, "-", "model"], [89, 0, 0, "-", "multi_objective"], [93, 0, 0, "-", "random_design"], [98, 0, 0, "-", "runhistory"], [113, 0, 0, "-", "runner"], [120, 0, 0, "-", "scenario"], [121, 0, 0, "-", "utils"]], "smac.acquisition": [[24, 0, 0, "-", "function"], [32, 0, 0, "-", "maximizer"]], "smac.acquisition.function": [[24, 1, 1, "", "AbstractAcquisitionFunction"], [24, 1, 1, "", "EI"], [24, 1, 1, "", "EIPS"], [24, 1, 1, "", "IntegratedAcquisitionFunction"], [24, 1, 1, "", "LCB"], [24, 1, 1, "", "PI"], [24, 1, 1, "", "PriorAcquisitionFunction"], [24, 1, 1, "", "TS"], [25, 0, 0, "-", "abstract_acquisition_function"], [26, 0, 0, "-", "confidence_bound"], [27, 0, 0, "-", "expected_improvement"], [28, 0, 0, "-", "integrated_acquisition_function"], [29, 0, 0, "-", "prior_acqusition_function"], [30, 0, 0, "-", "probability_improvement"], [31, 0, 0, "-", "thompson"]], "smac.acquisition.function.AbstractAcquisitionFunction": [[24, 2, 1, "", "__call__"], [24, 3, 1, "", "meta"], [24, 3, 1, "", "model"], [24, 3, 1, "", "name"], [24, 2, 1, "", "update"]], "smac.acquisition.function.EI": [[24, 4, 1, "", "_eta"], [24, 4, 1, "", "_log"], [24, 4, 1, "", "_xi"], [24, 3, 1, "", "meta"], [24, 3, 1, "", "name"]], "smac.acquisition.function.EIPS": [[24, 3, 1, "", "name"]], "smac.acquisition.function.IntegratedAcquisitionFunction": [[24, 4, 1, "", "_acquisition_function"], [24, 4, 1, "", "_eta"], [24, 4, 1, "", "_functions"], [24, 3, 1, "", "meta"], [24, 3, 1, "", "name"]], "smac.acquisition.function.LCB": [[24, 4, 1, "", "_beta"], [24, 4, 1, "", "_num_data"], [24, 3, 1, "", "meta"], [24, 3, 1, "", "name"]], "smac.acquisition.function.PI": [[24, 3, 1, "", "meta"], [24, 3, 1, "", "name"]], "smac.acquisition.function.PriorAcquisitionFunction": [[24, 3, 1, "", "meta"], [24, 3, 1, "", "model"], [24, 3, 1, "", "name"]], "smac.acquisition.function.TS": [[24, 3, 1, "", "name"]], "smac.acquisition.function.abstract_acquisition_function": [[25, 1, 1, "", "AbstractAcquisitionFunction"]], "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction": [[25, 2, 1, "", "__call__"], [25, 3, 1, "", "meta"], [25, 3, 1, "", "model"], [25, 3, 1, "", "name"], [25, 2, 1, "", "update"]], "smac.acquisition.function.confidence_bound": [[26, 1, 1, "", "LCB"]], "smac.acquisition.function.confidence_bound.LCB": [[26, 4, 1, "", "_beta"], [26, 4, 1, "", "_num_data"], [26, 3, 1, "", "meta"], [26, 3, 1, "", "name"]], "smac.acquisition.function.expected_improvement": [[27, 1, 1, "", "EI"], [27, 1, 1, "", "EIPS"]], "smac.acquisition.function.expected_improvement.EI": [[27, 4, 1, "", "_eta"], [27, 4, 1, "", "_log"], [27, 4, 1, "", "_xi"], [27, 3, 1, "", "meta"], [27, 3, 1, "", "name"]], "smac.acquisition.function.expected_improvement.EIPS": [[27, 3, 1, "", "name"]], "smac.acquisition.function.integrated_acquisition_function": [[28, 1, 1, "", "IntegratedAcquisitionFunction"]], "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction": [[28, 4, 1, "", "_acquisition_function"], [28, 4, 1, "", "_eta"], [28, 4, 1, "", "_functions"], [28, 3, 1, "", "meta"], [28, 3, 1, "", "name"]], "smac.acquisition.function.prior_acqusition_function": [[29, 1, 1, "", "PriorAcquisitionFunction"]], "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction": [[29, 3, 1, "", "meta"], [29, 3, 1, "", "model"], [29, 3, 1, "", "name"]], "smac.acquisition.function.probability_improvement": [[30, 1, 1, "", "PI"]], "smac.acquisition.function.probability_improvement.PI": [[30, 3, 1, "", "meta"], [30, 3, 1, "", "name"]], "smac.acquisition.function.thompson": [[31, 1, 1, "", "TS"]], "smac.acquisition.function.thompson.TS": [[31, 3, 1, "", "name"]], "smac.acquisition.maximizer": [[32, 1, 1, "", "AbstractAcquisitionMaximizer"], [32, 1, 1, "", "DifferentialEvolution"], [32, 1, 1, "", "LocalAndSortedPriorRandomSearch"], [32, 1, 1, "", "LocalAndSortedRandomSearch"], [32, 1, 1, "", "LocalSearch"], [32, 1, 1, "", "RandomSearch"], [33, 0, 0, "-", "abstract_acqusition_maximizer"], [34, 0, 0, "-", "differential_evolution"], [35, 0, 0, "-", "helpers"], [36, 0, 0, "-", "local_and_random_search"], [37, 0, 0, "-", "local_search"], [38, 0, 0, "-", "random_search"]], "smac.acquisition.maximizer.AbstractAcquisitionMaximizer": [[32, 3, 1, "", "acquisition_function"], [32, 2, 1, "", "maximize"], [32, 3, 1, "", "meta"]], "smac.acquisition.maximizer.LocalAndSortedRandomSearch": [[32, 3, 1, "", "acquisition_function"], [32, 3, 1, "", "meta"]], "smac.acquisition.maximizer.LocalSearch": [[32, 3, 1, "", "meta"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[33, 1, 1, "", "AbstractAcquisitionMaximizer"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer": [[33, 3, 1, "", "acquisition_function"], [33, 2, 1, "", "maximize"], [33, 3, 1, "", "meta"]], "smac.acquisition.maximizer.differential_evolution": [[34, 1, 1, "", "DifferentialEvolution"]], "smac.acquisition.maximizer.helpers": [[35, 1, 1, "", "ChallengerList"]], "smac.acquisition.maximizer.local_and_random_search": [[36, 1, 1, "", "LocalAndSortedPriorRandomSearch"], [36, 1, 1, "", "LocalAndSortedRandomSearch"]], "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch": [[36, 3, 1, "", "acquisition_function"], [36, 3, 1, "", "meta"]], "smac.acquisition.maximizer.local_search": [[37, 1, 1, "", "LocalSearch"]], "smac.acquisition.maximizer.local_search.LocalSearch": [[37, 3, 1, "", "meta"]], "smac.acquisition.maximizer.random_search": [[38, 1, 1, "", "RandomSearch"]], "smac.callback": [[39, 1, 1, "", "Callback"], [39, 1, 1, "", "MetadataCallback"], [40, 0, 0, "-", "callback"], [41, 0, 0, "-", "metadata_callback"]], "smac.callback.Callback": [[39, 2, 1, "", "on_ask_end"], [39, 2, 1, "", "on_ask_start"], [39, 2, 1, "", "on_end"], [39, 2, 1, "", "on_iteration_end"], [39, 2, 1, "", "on_iteration_start"], [39, 2, 1, "", "on_next_configurations_end"], [39, 2, 1, "", "on_next_configurations_start"], [39, 2, 1, "", "on_start"], [39, 2, 1, "", "on_tell_end"], [39, 2, 1, "", "on_tell_start"]], "smac.callback.MetadataCallback": [[39, 2, 1, "", "on_start"]], "smac.callback.callback": [[40, 1, 1, "", "Callback"]], "smac.callback.callback.Callback": [[40, 2, 1, "", "on_ask_end"], [40, 2, 1, "", "on_ask_start"], [40, 2, 1, "", "on_end"], [40, 2, 1, "", "on_iteration_end"], [40, 2, 1, "", "on_iteration_start"], [40, 2, 1, "", "on_next_configurations_end"], [40, 2, 1, "", "on_next_configurations_start"], [40, 2, 1, "", "on_start"], [40, 2, 1, "", "on_tell_end"], [40, 2, 1, "", "on_tell_start"]], "smac.callback.metadata_callback": [[41, 1, 1, "", "MetadataCallback"]], "smac.callback.metadata_callback.MetadataCallback": [[41, 2, 1, "", "on_start"]], "smac.facade": [[42, 1, 1, "", "AbstractFacade"], [42, 1, 1, "", "AlgorithmConfigurationFacade"], [42, 1, 1, "", "BlackBoxFacade"], [42, 1, 1, "", "HyperbandFacade"], [42, 1, 1, "", "HyperparameterOptimizationFacade"], [42, 1, 1, "", "MultiFidelityFacade"], [42, 1, 1, "", "RandomFacade"], [43, 0, 0, "-", "abstract_facade"], [44, 0, 0, "-", "algorithm_configuration_facade"], [45, 0, 0, "-", "blackbox_facade"], [46, 0, 0, "-", "hyperband_facade"], [47, 0, 0, "-", "hyperparameter_optimization_facade"], [48, 0, 0, "-", "multi_fidelity_facade"], [49, 0, 0, "-", "random_facade"]], "smac.facade.AbstractFacade": [[42, 2, 1, "", "ask"], [42, 2, 1, "", "get_acquisition_function"], [42, 2, 1, "", "get_acquisition_maximizer"], [42, 2, 1, "", "get_config_selector"], [42, 2, 1, "", "get_initial_design"], [42, 2, 1, "", "get_intensifier"], [42, 2, 1, "", "get_model"], [42, 2, 1, "", "get_multi_objective_algorithm"], [42, 2, 1, "", "get_random_design"], [42, 2, 1, "", "get_runhistory_encoder"], [42, 3, 1, "", "intensifier"], [42, 3, 1, "", "meta"], [42, 2, 1, "", "optimize"], [42, 3, 1, "", "optimizer"], [42, 3, 1, "", "runhistory"], [42, 3, 1, "", "scenario"], [42, 2, 1, "", "tell"], [42, 2, 1, "", "validate"]], "smac.facade.AlgorithmConfigurationFacade": [[42, 2, 1, "", "get_acquisition_function"], [42, 2, 1, "", "get_acquisition_maximizer"], [42, 2, 1, "", "get_initial_design"], [42, 2, 1, "", "get_intensifier"], [42, 2, 1, "", "get_model"], [42, 2, 1, "", "get_multi_objective_algorithm"], [42, 2, 1, "", "get_random_design"], [42, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.BlackBoxFacade": [[42, 2, 1, "", "get_acquisition_function"], [42, 2, 1, "", "get_acquisition_maximizer"], [42, 2, 1, "", "get_initial_design"], [42, 2, 1, "", "get_intensifier"], [42, 2, 1, "", "get_kernel"], [42, 2, 1, "", "get_model"], [42, 2, 1, "", "get_multi_objective_algorithm"], [42, 2, 1, "", "get_random_design"], [42, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.HyperbandFacade": [[42, 2, 1, "", "get_intensifier"]], "smac.facade.HyperparameterOptimizationFacade": [[42, 2, 1, "", "get_acquisition_function"], [42, 2, 1, "", "get_acquisition_maximizer"], [42, 2, 1, "", "get_initial_design"], [42, 2, 1, "", "get_intensifier"], [42, 2, 1, "", "get_model"], [42, 2, 1, "", "get_multi_objective_algorithm"], [42, 2, 1, "", "get_random_design"], [42, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.MultiFidelityFacade": [[42, 2, 1, "", "get_initial_design"], [42, 2, 1, "", "get_intensifier"]], "smac.facade.RandomFacade": [[42, 2, 1, "", "get_acquisition_function"], [42, 2, 1, "", "get_acquisition_maximizer"], [42, 2, 1, "", "get_initial_design"], [42, 2, 1, "", "get_intensifier"], [42, 2, 1, "", "get_model"], [42, 2, 1, "", "get_multi_objective_algorithm"], [42, 2, 1, "", "get_random_design"], [42, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.abstract_facade": [[43, 1, 1, "", "AbstractFacade"]], "smac.facade.abstract_facade.AbstractFacade": [[43, 2, 1, "", "ask"], [43, 2, 1, "", "get_acquisition_function"], [43, 2, 1, "", "get_acquisition_maximizer"], [43, 2, 1, "", "get_config_selector"], [43, 2, 1, "", "get_initial_design"], [43, 2, 1, "", "get_intensifier"], [43, 2, 1, "", "get_model"], [43, 2, 1, "", "get_multi_objective_algorithm"], [43, 2, 1, "", "get_random_design"], [43, 2, 1, "", "get_runhistory_encoder"], [43, 3, 1, "", "intensifier"], [43, 3, 1, "", "meta"], [43, 2, 1, "", "optimize"], [43, 3, 1, "", "optimizer"], [43, 3, 1, "", "runhistory"], [43, 3, 1, "", "scenario"], [43, 2, 1, "", "tell"], [43, 2, 1, "", "validate"]], "smac.facade.algorithm_configuration_facade": [[44, 1, 1, "", "AlgorithmConfigurationFacade"]], "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade": [[44, 2, 1, "", "get_acquisition_function"], [44, 2, 1, "", "get_acquisition_maximizer"], [44, 2, 1, "", "get_initial_design"], [44, 2, 1, "", "get_intensifier"], [44, 2, 1, "", "get_model"], [44, 2, 1, "", "get_multi_objective_algorithm"], [44, 2, 1, "", "get_random_design"], [44, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.blackbox_facade": [[45, 1, 1, "", "BlackBoxFacade"]], "smac.facade.blackbox_facade.BlackBoxFacade": [[45, 2, 1, "", "get_acquisition_function"], [45, 2, 1, "", "get_acquisition_maximizer"], [45, 2, 1, "", "get_initial_design"], [45, 2, 1, "", "get_intensifier"], [45, 2, 1, "", "get_kernel"], [45, 2, 1, "", "get_model"], [45, 2, 1, "", "get_multi_objective_algorithm"], [45, 2, 1, "", "get_random_design"], [45, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.hyperband_facade": [[46, 1, 1, "", "HyperbandFacade"]], "smac.facade.hyperband_facade.HyperbandFacade": [[46, 2, 1, "", "get_intensifier"]], "smac.facade.hyperparameter_optimization_facade": [[47, 1, 1, "", "HyperparameterOptimizationFacade"]], "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade": [[47, 2, 1, "", "get_acquisition_function"], [47, 2, 1, "", "get_acquisition_maximizer"], [47, 2, 1, "", "get_initial_design"], [47, 2, 1, "", "get_intensifier"], [47, 2, 1, "", "get_model"], [47, 2, 1, "", "get_multi_objective_algorithm"], [47, 2, 1, "", "get_random_design"], [47, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.multi_fidelity_facade": [[48, 1, 1, "", "MultiFidelityFacade"]], "smac.facade.multi_fidelity_facade.MultiFidelityFacade": [[48, 2, 1, "", "get_initial_design"], [48, 2, 1, "", "get_intensifier"]], "smac.facade.random_facade": [[49, 1, 1, "", "RandomFacade"]], "smac.facade.random_facade.RandomFacade": [[49, 2, 1, "", "get_acquisition_function"], [49, 2, 1, "", "get_acquisition_maximizer"], [49, 2, 1, "", "get_initial_design"], [49, 2, 1, "", "get_intensifier"], [49, 2, 1, "", "get_model"], [49, 2, 1, "", "get_multi_objective_algorithm"], [49, 2, 1, "", "get_random_design"], [49, 2, 1, "", "get_runhistory_encoder"]], "smac.initial_design": [[50, 1, 1, "", "AbstractInitialDesign"], [50, 1, 1, "", "DefaultInitialDesign"], [50, 1, 1, "", "FactorialInitialDesign"], [50, 1, 1, "", "LatinHypercubeInitialDesign"], [50, 1, 1, "", "RandomInitialDesign"], [50, 1, 1, "", "SobolInitialDesign"], [51, 0, 0, "-", "abstract_initial_design"], [52, 0, 0, "-", "default_design"], [53, 0, 0, "-", "factorial_design"], [54, 0, 0, "-", "latin_hypercube_design"], [55, 0, 0, "-", "random_design"], [56, 0, 0, "-", "sobol_design"]], "smac.initial_design.AbstractInitialDesign": [[50, 3, 1, "", "meta"], [50, 2, 1, "", "select_configurations"]], "smac.initial_design.abstract_initial_design": [[51, 1, 1, "", "AbstractInitialDesign"]], "smac.initial_design.abstract_initial_design.AbstractInitialDesign": [[51, 3, 1, "", "meta"], [51, 2, 1, "", "select_configurations"]], "smac.initial_design.default_design": [[52, 1, 1, "", "DefaultInitialDesign"]], "smac.initial_design.factorial_design": [[53, 1, 1, "", "FactorialInitialDesign"]], "smac.initial_design.latin_hypercube_design": [[54, 1, 1, "", "LatinHypercubeInitialDesign"]], "smac.initial_design.random_design": [[55, 1, 1, "", "RandomInitialDesign"]], "smac.initial_design.sobol_design": [[56, 1, 1, "", "SobolInitialDesign"]], "smac.intensifier": [[57, 1, 1, "", "AbstractIntensifier"], [57, 1, 1, "", "Hyperband"], [57, 1, 1, "", "Intensifier"], [57, 1, 1, "", "SuccessiveHalving"], [58, 0, 0, "-", "abstract_intensifier"], [59, 0, 0, "-", "hyperband"], [60, 0, 0, "-", "intensifier"], [61, 0, 0, "-", "successive_halving"]], "smac.intensifier.AbstractIntensifier": [[57, 2, 1, "", "__iter__"], [57, 2, 1, "", "__post_init__"], [57, 3, 1, "", "config_generator"], [57, 3, 1, "", "config_selector"], [57, 2, 1, "", "get_callback"], [57, 2, 1, "", "get_incumbent"], [57, 2, 1, "", "get_incumbent_instance_seed_budget_key_differences"], [57, 2, 1, "", "get_incumbent_instance_seed_budget_keys"], [57, 2, 1, "", "get_incumbents"], [57, 2, 1, "", "get_instance_seed_budget_keys"], [57, 2, 1, "", "get_instance_seed_keys_of_interest"], [57, 2, 1, "", "get_rejected_configs"], [57, 2, 1, "", "get_state"], [57, 2, 1, "", "get_trials_of_interest"], [57, 3, 1, "", "incumbents_changed"], [57, 2, 1, "", "load"], [57, 3, 1, "", "meta"], [57, 2, 1, "", "reset"], [57, 3, 1, "", "runhistory"], [57, 2, 1, "", "save"], [57, 2, 1, "", "set_state"], [57, 3, 1, "", "trajectory"], [57, 2, 1, "", "update_incumbents"], [57, 3, 1, "", "used_walltime"], [57, 3, 1, "", "uses_budgets"], [57, 3, 1, "", "uses_instances"], [57, 3, 1, "", "uses_seeds"]], "smac.intensifier.Hyperband": [[57, 2, 1, "", "get_state"], [57, 2, 1, "", "reset"], [57, 2, 1, "", "set_state"]], "smac.intensifier.Intensifier": [[57, 2, 1, "", "__iter__"], [57, 2, 1, "", "get_state"], [57, 2, 1, "", "reset"], [57, 2, 1, "", "set_state"], [57, 3, 1, "", "uses_budgets"], [57, 3, 1, "", "uses_instances"], [57, 3, 1, "", "uses_seeds"]], "smac.intensifier.SuccessiveHalving": [[57, 2, 1, "", "__post_init__"], [57, 2, 1, "", "get_instance_seed_budget_keys"], [57, 2, 1, "", "get_state"], [57, 2, 1, "", "get_trials_of_interest"], [57, 3, 1, "", "meta"], [57, 2, 1, "", "print_tracker"], [57, 2, 1, "", "reset"], [57, 2, 1, "", "set_state"], [57, 3, 1, "", "uses_budgets"], [57, 3, 1, "", "uses_instances"], [57, 3, 1, "", "uses_seeds"]], "smac.intensifier.abstract_intensifier": [[58, 1, 1, "", "AbstractIntensifier"]], "smac.intensifier.abstract_intensifier.AbstractIntensifier": [[58, 2, 1, "", "__iter__"], [58, 2, 1, "", "__post_init__"], [58, 3, 1, "", "config_generator"], [58, 3, 1, "", "config_selector"], [58, 2, 1, "", "get_callback"], [58, 2, 1, "", "get_incumbent"], [58, 2, 1, "", "get_incumbent_instance_seed_budget_key_differences"], [58, 2, 1, "", "get_incumbent_instance_seed_budget_keys"], [58, 2, 1, "", "get_incumbents"], [58, 2, 1, "", "get_instance_seed_budget_keys"], [58, 2, 1, "", "get_instance_seed_keys_of_interest"], [58, 2, 1, "", "get_rejected_configs"], [58, 2, 1, "", "get_state"], [58, 2, 1, "", "get_trials_of_interest"], [58, 3, 1, "", "incumbents_changed"], [58, 2, 1, "", "load"], [58, 3, 1, "", "meta"], [58, 2, 1, "", "reset"], [58, 3, 1, "", "runhistory"], [58, 2, 1, "", "save"], [58, 2, 1, "", "set_state"], [58, 3, 1, "", "trajectory"], [58, 2, 1, "", "update_incumbents"], [58, 3, 1, "", "used_walltime"], [58, 3, 1, "", "uses_budgets"], [58, 3, 1, "", "uses_instances"], [58, 3, 1, "", "uses_seeds"]], "smac.intensifier.hyperband": [[59, 1, 1, "", "Hyperband"]], "smac.intensifier.hyperband.Hyperband": [[59, 2, 1, "", "get_state"], [59, 2, 1, "", "reset"], [59, 2, 1, "", "set_state"]], "smac.intensifier.intensifier": [[60, 1, 1, "", "Intensifier"]], "smac.intensifier.intensifier.Intensifier": [[60, 2, 1, "", "__iter__"], [60, 2, 1, "", "get_state"], [60, 2, 1, "", "reset"], [60, 2, 1, "", "set_state"], [60, 3, 1, "", "uses_budgets"], [60, 3, 1, "", "uses_instances"], [60, 3, 1, "", "uses_seeds"]], "smac.intensifier.successive_halving": [[61, 1, 1, "", "SuccessiveHalving"]], "smac.intensifier.successive_halving.SuccessiveHalving": [[61, 2, 1, "", "__post_init__"], [61, 2, 1, "", "get_instance_seed_budget_keys"], [61, 2, 1, "", "get_state"], [61, 2, 1, "", "get_trials_of_interest"], [61, 3, 1, "", "meta"], [61, 2, 1, "", "print_tracker"], [61, 2, 1, "", "reset"], [61, 2, 1, "", "set_state"], [61, 3, 1, "", "uses_budgets"], [61, 3, 1, "", "uses_instances"], [61, 3, 1, "", "uses_seeds"]], "smac.main": [[63, 0, 0, "-", "config_selector"], [64, 0, 0, "-", "smbo"]], "smac.main.config_selector": [[63, 1, 1, "", "ConfigSelector"]], "smac.main.config_selector.ConfigSelector": [[63, 2, 1, "", "__iter__"], [63, 3, 1, "", "meta"]], "smac.main.smbo": [[64, 1, 1, "", "SMBO"]], "smac.main.smbo.SMBO": [[64, 2, 1, "", "ask"], [64, 3, 1, "", "budget_exhausted"], [64, 2, 1, "", "exists"], [64, 3, 1, "", "intensifier"], [64, 2, 1, "", "load"], [64, 2, 1, "", "optimize"], [64, 2, 1, "", "print_stats"], [64, 2, 1, "", "register_callback"], [64, 3, 1, "", "remaining_cputime"], [64, 3, 1, "", "remaining_trials"], [64, 3, 1, "", "remaining_walltime"], [64, 2, 1, "", "reset"], [64, 3, 1, "", "runhistory"], [64, 2, 1, "", "save"], [64, 2, 1, "", "tell"], [64, 2, 1, "", "update_acquisition_function"], [64, 2, 1, "", "update_model"], [64, 3, 1, "", "used_target_function_walltime"], [64, 3, 1, "", "used_walltime"], [64, 2, 1, "", "validate"]], "smac.model": [[65, 1, 1, "", "AbstractModel"], [65, 1, 1, "", "MultiObjectiveModel"], [65, 1, 1, "", "RandomModel"], [66, 0, 0, "-", "abstract_model"], [67, 0, 0, "-", "gaussian_process"], [84, 0, 0, "-", "multi_objective_model"], [85, 0, 0, "-", "random_forest"], [88, 0, 0, "-", "random_model"]], "smac.model.AbstractModel": [[65, 3, 1, "", "meta"], [65, 2, 1, "", "predict"], [65, 2, 1, "", "predict_marginalized"], [65, 2, 1, "", "train"]], "smac.model.MultiObjectiveModel": [[65, 3, 1, "", "models"], [65, 2, 1, "", "predict_marginalized"]], "smac.model.abstract_model": [[66, 1, 1, "", "AbstractModel"]], "smac.model.abstract_model.AbstractModel": [[66, 3, 1, "", "meta"], [66, 2, 1, "", "predict"], [66, 2, 1, "", "predict_marginalized"], [66, 2, 1, "", "train"]], "smac.model.gaussian_process": [[67, 1, 1, "", "AbstractGaussianProcess"], [67, 1, 1, "", "GaussianProcess"], [67, 1, 1, "", "MCMCGaussianProcess"], [68, 0, 0, "-", "abstract_gaussian_process"], [69, 0, 0, "-", "gaussian_process"], [70, 0, 0, "-", "gpytorch_gaussian_process"], [71, 0, 0, "-", "kernels"], [77, 0, 0, "-", "mcmc_gaussian_process"], [78, 0, 0, "-", "priors"]], "smac.model.gaussian_process.AbstractGaussianProcess": [[67, 3, 1, "", "meta"]], "smac.model.gaussian_process.GaussianProcess": [[67, 3, 1, "", "meta"], [67, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.MCMCGaussianProcess": [[67, 3, 1, "", "meta"], [67, 3, 1, "", "models"]], "smac.model.gaussian_process.abstract_gaussian_process": [[68, 1, 1, "", "AbstractGaussianProcess"]], "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess": [[68, 3, 1, "", "meta"]], "smac.model.gaussian_process.gaussian_process": [[69, 1, 1, "", "GaussianProcess"]], "smac.model.gaussian_process.gaussian_process.GaussianProcess": [[69, 3, 1, "", "meta"], [69, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.kernels": [[71, 1, 1, "", "AbstractKernel"], [71, 1, 1, "", "ConstantKernel"], [71, 1, 1, "", "HammingKernel"], [71, 1, 1, "", "MaternKernel"], [71, 1, 1, "", "ProductKernel"], [71, 1, 1, "", "RBFKernel"], [71, 1, 1, "", "SumKernel"], [71, 1, 1, "", "WhiteKernel"], [72, 0, 0, "-", "base_kernels"], [73, 0, 0, "-", "hamming_kernel"], [74, 0, 0, "-", "matern_kernel"], [75, 0, 0, "-", "rbf_kernel"], [76, 0, 0, "-", "white_kernel"]], "smac.model.gaussian_process.kernels.AbstractKernel": [[71, 2, 1, "", "__call__"], [71, 2, 1, "", "get_params"], [71, 4, 1, "", "has_conditions"], [71, 3, 1, "", "hyperparameters"], [71, 3, 1, "", "meta"], [71, 3, 1, "", "n_dims"], [71, 4, 1, "", "operate_on"], [71, 4, 1, "", "prior"]], "smac.model.gaussian_process.kernels.ConstantKernel": [[71, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.HammingKernel": [[71, 3, 1, "", "hyperparameter_length_scale"], [71, 3, 1, "", "meta"]], "smac.model.gaussian_process.kernels.ProductKernel": [[71, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.SumKernel": [[71, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels": [[72, 1, 1, "", "AbstractKernel"], [72, 1, 1, "", "ConstantKernel"], [72, 1, 1, "", "ProductKernel"], [72, 1, 1, "", "SumKernel"]], "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel": [[72, 2, 1, "", "__call__"], [72, 2, 1, "", "get_params"], [72, 4, 1, "", "has_conditions"], [72, 3, 1, "", "hyperparameters"], [72, 3, 1, "", "meta"], [72, 3, 1, "", "n_dims"], [72, 4, 1, "", "operate_on"], [72, 4, 1, "", "prior"]], "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel": [[72, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels.ProductKernel": [[72, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels.SumKernel": [[72, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[73, 1, 1, "", "HammingKernel"]], "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel": [[73, 3, 1, "", "hyperparameter_length_scale"], [73, 3, 1, "", "meta"]], "smac.model.gaussian_process.kernels.matern_kernel": [[74, 1, 1, "", "MaternKernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[75, 1, 1, "", "RBFKernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[76, 1, 1, "", "WhiteKernel"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[77, 1, 1, "", "MCMCGaussianProcess"]], "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess": [[77, 3, 1, "", "meta"], [77, 3, 1, "", "models"]], "smac.model.gaussian_process.priors": [[78, 1, 1, "", "GammaPrior"], [78, 1, 1, "", "HorseshoePrior"], [78, 1, 1, "", "LogNormalPrior"], [78, 1, 1, "", "SoftTopHatPrior"], [78, 1, 1, "", "TophatPrior"], [79, 0, 0, "-", "abstract_prior"], [80, 0, 0, "-", "gamma_prior"], [81, 0, 0, "-", "horseshoe_prior"], [82, 0, 0, "-", "log_normal_prior"], [83, 0, 0, "-", "tophat_prior"]], "smac.model.gaussian_process.priors.GammaPrior": [[78, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.HorseshoePrior": [[78, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.LogNormalPrior": [[78, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.SoftTopHatPrior": [[78, 2, 1, "", "get_gradient"], [78, 2, 1, "", "get_log_probability"], [78, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.TophatPrior": [[78, 2, 1, "", "get_gradient"], [78, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.abstract_prior": [[79, 1, 1, "", "AbstractPrior"]], "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior": [[79, 2, 1, "", "get_gradient"], [79, 2, 1, "", "get_log_probability"], [79, 3, 1, "", "meta"], [79, 2, 1, "", "sample_from_prior"]], "smac.model.gaussian_process.priors.gamma_prior": [[80, 1, 1, "", "GammaPrior"]], "smac.model.gaussian_process.priors.gamma_prior.GammaPrior": [[80, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[81, 1, 1, "", "HorseshoePrior"]], "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior": [[81, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.log_normal_prior": [[82, 1, 1, "", "LogNormalPrior"]], "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior": [[82, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.tophat_prior": [[83, 1, 1, "", "SoftTopHatPrior"], [83, 1, 1, "", "TophatPrior"]], "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior": [[83, 2, 1, "", "get_gradient"], [83, 2, 1, "", "get_log_probability"], [83, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.tophat_prior.TophatPrior": [[83, 2, 1, "", "get_gradient"], [83, 3, 1, "", "meta"]], "smac.model.multi_objective_model": [[84, 1, 1, "", "MultiObjectiveModel"]], "smac.model.multi_objective_model.MultiObjectiveModel": [[84, 3, 1, "", "models"], [84, 2, 1, "", "predict_marginalized"]], "smac.model.random_forest": [[85, 1, 1, "", "AbstractRandomForest"], [85, 1, 1, "", "RandomForest"], [86, 0, 0, "-", "abstract_random_forest"], [87, 0, 0, "-", "random_forest"]], "smac.model.random_forest.RandomForest": [[85, 3, 1, "", "meta"], [85, 2, 1, "", "predict_marginalized"]], "smac.model.random_forest.abstract_random_forest": [[86, 1, 1, "", "AbstractRandomForest"]], "smac.model.random_forest.random_forest": [[87, 1, 1, "", "RandomForest"]], "smac.model.random_forest.random_forest.RandomForest": [[87, 3, 1, "", "meta"], [87, 2, 1, "", "predict_marginalized"]], "smac.model.random_model": [[88, 1, 1, "", "RandomModel"]], "smac.multi_objective": [[89, 1, 1, "", "AbstractMultiObjectiveAlgorithm"], [89, 1, 1, "", "MeanAggregationStrategy"], [89, 1, 1, "", "ParEGO"], [90, 0, 0, "-", "abstract_multi_objective_algorithm"], [91, 0, 0, "-", "aggregation_strategy"], [92, 0, 0, "-", "parego"]], "smac.multi_objective.AbstractMultiObjectiveAlgorithm": [[89, 2, 1, "", "__call__"], [89, 3, 1, "", "meta"], [89, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.MeanAggregationStrategy": [[89, 2, 1, "", "__call__"], [89, 3, 1, "", "meta"]], "smac.multi_objective.ParEGO": [[89, 2, 1, "", "__call__"], [89, 3, 1, "", "meta"], [89, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[90, 1, 1, "", "AbstractMultiObjectiveAlgorithm"]], "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm": [[90, 2, 1, "", "__call__"], [90, 3, 1, "", "meta"], [90, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.aggregation_strategy": [[91, 1, 1, "", "MeanAggregationStrategy"]], "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy": [[91, 2, 1, "", "__call__"], [91, 3, 1, "", "meta"]], "smac.multi_objective.parego": [[92, 1, 1, "", "ParEGO"]], "smac.multi_objective.parego.ParEGO": [[92, 2, 1, "", "__call__"], [92, 3, 1, "", "meta"], [92, 2, 1, "", "update_on_iteration_start"]], "smac.random_design": [[93, 1, 1, "", "AbstractRandomDesign"], [93, 1, 1, "", "CosineAnnealingRandomDesign"], [93, 1, 1, "", "DynamicModulusRandomDesign"], [93, 1, 1, "", "DynamicProbabilityRandomDesign"], [93, 1, 1, "", "ModulusRandomDesign"], [93, 1, 1, "", "ProbabilityRandomDesign"], [94, 0, 0, "-", "abstract_random_design"], [95, 0, 0, "-", "annealing_design"], [96, 0, 0, "-", "modulus_design"], [97, 0, 0, "-", "probability_design"]], "smac.random_design.AbstractRandomDesign": [[93, 2, 1, "", "check"], [93, 3, 1, "", "meta"], [93, 2, 1, "", "next_iteration"]], "smac.random_design.CosineAnnealingRandomDesign": [[93, 2, 1, "", "check"], [93, 3, 1, "", "meta"], [93, 2, 1, "", "next_iteration"]], "smac.random_design.DynamicModulusRandomDesign": [[93, 2, 1, "", "check"], [93, 3, 1, "", "meta"], [93, 2, 1, "", "next_iteration"]], "smac.random_design.DynamicProbabilityRandomDesign": [[93, 2, 1, "", "check"], [93, 3, 1, "", "meta"], [93, 2, 1, "", "next_iteration"]], "smac.random_design.ModulusRandomDesign": [[93, 2, 1, "", "check"], [93, 3, 1, "", "meta"]], "smac.random_design.ProbabilityRandomDesign": [[93, 2, 1, "", "check"], [93, 3, 1, "", "meta"]], "smac.random_design.abstract_random_design": [[94, 1, 1, "", "AbstractRandomDesign"]], "smac.random_design.abstract_random_design.AbstractRandomDesign": [[94, 2, 1, "", "check"], [94, 3, 1, "", "meta"], [94, 2, 1, "", "next_iteration"]], "smac.random_design.annealing_design": [[95, 1, 1, "", "CosineAnnealingRandomDesign"]], "smac.random_design.annealing_design.CosineAnnealingRandomDesign": [[95, 2, 1, "", "check"], [95, 3, 1, "", "meta"], [95, 2, 1, "", "next_iteration"]], "smac.random_design.modulus_design": [[96, 1, 1, "", "DynamicModulusRandomDesign"], [96, 1, 1, "", "ModulusRandomDesign"]], "smac.random_design.modulus_design.DynamicModulusRandomDesign": [[96, 2, 1, "", "check"], [96, 3, 1, "", "meta"], [96, 2, 1, "", "next_iteration"]], "smac.random_design.modulus_design.ModulusRandomDesign": [[96, 2, 1, "", "check"], [96, 3, 1, "", "meta"]], "smac.random_design.probability_design": [[97, 1, 1, "", "DynamicProbabilityRandomDesign"], [97, 1, 1, "", "ProbabilityRandomDesign"]], "smac.random_design.probability_design.DynamicProbabilityRandomDesign": [[97, 2, 1, "", "check"], [97, 3, 1, "", "meta"], [97, 2, 1, "", "next_iteration"]], "smac.random_design.probability_design.ProbabilityRandomDesign": [[97, 2, 1, "", "check"], [97, 3, 1, "", "meta"]], "smac.runhistory": [[98, 1, 1, "", "InstanceSeedBudgetKey"], [98, 1, 1, "", "InstanceSeedKey"], [98, 1, 1, "", "RunHistory"], [98, 1, 1, "", "StatusType"], [98, 1, 1, "", "TrialInfo"], [98, 1, 1, "", "TrialKey"], [98, 1, 1, "", "TrialValue"], [99, 0, 0, "-", "dataclasses"], [100, 0, 0, "-", "encoder"], [110, 0, 0, "-", "enumerations"], [111, 0, 0, "-", "errors"], [112, 0, 0, "-", "runhistory"]], "smac.runhistory.InstanceSeedBudgetKey": [[98, 2, 1, "", "get_instance_seed_key"]], "smac.runhistory.RunHistory": [[98, 2, 1, "", "__contains__"], [98, 2, 1, "", "__eq__"], [98, 2, 1, "", "__getitem__"], [98, 2, 1, "", "__iter__"], [98, 2, 1, "", "__len__"], [98, 2, 1, "", "add"], [98, 2, 1, "", "add_running_trial"], [98, 2, 1, "", "add_trial"], [98, 2, 1, "", "average_cost"], [98, 3, 1, "", "config_ids"], [98, 2, 1, "", "empty"], [98, 3, 1, "", "finished"], [98, 2, 1, "", "get_config"], [98, 2, 1, "", "get_config_id"], [98, 2, 1, "", "get_configs"], [98, 2, 1, "", "get_configs_per_budget"], [98, 2, 1, "", "get_cost"], [98, 2, 1, "", "get_instance_seed_budget_keys"], [98, 2, 1, "", "get_min_cost"], [98, 2, 1, "", "get_running_configs"], [98, 2, 1, "", "get_running_trials"], [98, 2, 1, "", "get_trials"], [98, 2, 1, "", "has_config"], [98, 3, 1, "", "ids_config"], [98, 2, 1, "", "incremental_update_cost"], [98, 2, 1, "", "load"], [98, 2, 1, "", "min_cost"], [98, 3, 1, "", "multi_objective_algorithm"], [98, 3, 1, "", "objective_bounds"], [98, 2, 1, "", "reset"], [98, 3, 1, "", "running"], [98, 2, 1, "", "save"], [98, 3, 1, "", "submitted"], [98, 2, 1, "", "sum_cost"], [98, 2, 1, "", "update"], [98, 2, 1, "", "update_cost"], [98, 2, 1, "", "update_costs"], [98, 2, 1, "", "update_from_json"]], "smac.runhistory.TrialInfo": [[98, 2, 1, "", "get_instance_seed_budget_key"], [98, 2, 1, "", "get_instance_seed_key"]], "smac.runhistory.dataclasses": [[99, 1, 1, "", "InstanceSeedBudgetKey"], [99, 1, 1, "", "InstanceSeedKey"], [99, 1, 1, "", "TrajectoryItem"], [99, 1, 1, "", "TrialInfo"], [99, 1, 1, "", "TrialKey"], [99, 1, 1, "", "TrialValue"]], "smac.runhistory.dataclasses.InstanceSeedBudgetKey": [[99, 2, 1, "", "get_instance_seed_key"]], "smac.runhistory.dataclasses.TrialInfo": [[99, 2, 1, "", "get_instance_seed_budget_key"], [99, 2, 1, "", "get_instance_seed_key"]], "smac.runhistory.encoder": [[100, 1, 1, "", "AbstractRunHistoryEncoder"], [100, 1, 1, "", "RunHistoryEIPSEncoder"], [100, 1, 1, "", "RunHistoryEncoder"], [100, 1, 1, "", "RunHistoryInverseScaledEncoder"], [100, 1, 1, "", "RunHistoryLogEncoder"], [100, 1, 1, "", "RunHistoryLogScaledEncoder"], [100, 1, 1, "", "RunHistoryScaledEncoder"], [100, 1, 1, "", "RunHistorySqrtScaledEncoder"], [101, 0, 0, "-", "abstract_encoder"], [102, 0, 0, "-", "boing_encoder"], [103, 0, 0, "-", "eips_encoder"], [104, 0, 0, "-", "encoder"], [105, 0, 0, "-", "inverse_scaled_encoder"], [106, 0, 0, "-", "log_encoder"], [107, 0, 0, "-", "log_scaled_encoder"], [108, 0, 0, "-", "scaled_encoder"], [109, 0, 0, "-", "sqrt_scaled_encoder"]], "smac.runhistory.encoder.AbstractRunHistoryEncoder": [[100, 2, 1, "", "get_configurations"], [100, 3, 1, "", "meta"], [100, 3, 1, "", "multi_objective_algorithm"], [100, 3, 1, "", "runhistory"], [100, 2, 1, "", "transform"], [100, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryEIPSEncoder": [[100, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryEncoder": [[100, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryInverseScaledEncoder": [[100, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryLogEncoder": [[100, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryLogScaledEncoder": [[100, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryScaledEncoder": [[100, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistorySqrtScaledEncoder": [[100, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.abstract_encoder": [[101, 1, 1, "", "AbstractRunHistoryEncoder"]], "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder": [[101, 2, 1, "", "get_configurations"], [101, 3, 1, "", "meta"], [101, 3, 1, "", "multi_objective_algorithm"], [101, 3, 1, "", "runhistory"], [101, 2, 1, "", "transform"], [101, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.eips_encoder": [[103, 1, 1, "", "RunHistoryEIPSEncoder"]], "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder": [[103, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.encoder": [[104, 1, 1, "", "RunHistoryEncoder"]], "smac.runhistory.encoder.encoder.RunHistoryEncoder": [[104, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[105, 1, 1, "", "RunHistoryInverseScaledEncoder"]], "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder": [[105, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.log_encoder": [[106, 1, 1, "", "RunHistoryLogEncoder"]], "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder": [[106, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.log_scaled_encoder": [[107, 1, 1, "", "RunHistoryLogScaledEncoder"]], "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder": [[107, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.scaled_encoder": [[108, 1, 1, "", "RunHistoryScaledEncoder"]], "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder": [[108, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[109, 1, 1, "", "RunHistorySqrtScaledEncoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder": [[109, 2, 1, "", "transform_response_values"]], "smac.runhistory.enumerations": [[110, 1, 1, "", "StatusType"]], "smac.runhistory.errors": [[111, 5, 1, "", "NotEvaluatedError"]], "smac.runhistory.runhistory": [[112, 1, 1, "", "RunHistory"]], "smac.runhistory.runhistory.RunHistory": [[112, 2, 1, "", "__contains__"], [112, 2, 1, "", "__eq__"], [112, 2, 1, "", "__getitem__"], [112, 2, 1, "", "__iter__"], [112, 2, 1, "", "__len__"], [112, 2, 1, "", "add"], [112, 2, 1, "", "add_running_trial"], [112, 2, 1, "", "add_trial"], [112, 2, 1, "", "average_cost"], [112, 3, 1, "", "config_ids"], [112, 2, 1, "", "empty"], [112, 3, 1, "", "finished"], [112, 2, 1, "", "get_config"], [112, 2, 1, "", "get_config_id"], [112, 2, 1, "", "get_configs"], [112, 2, 1, "", "get_configs_per_budget"], [112, 2, 1, "", "get_cost"], [112, 2, 1, "", "get_instance_seed_budget_keys"], [112, 2, 1, "", "get_min_cost"], [112, 2, 1, "", "get_running_configs"], [112, 2, 1, "", "get_running_trials"], [112, 2, 1, "", "get_trials"], [112, 2, 1, "", "has_config"], [112, 3, 1, "", "ids_config"], [112, 2, 1, "", "incremental_update_cost"], [112, 2, 1, "", "load"], [112, 2, 1, "", "min_cost"], [112, 3, 1, "", "multi_objective_algorithm"], [112, 3, 1, "", "objective_bounds"], [112, 2, 1, "", "reset"], [112, 3, 1, "", "running"], [112, 2, 1, "", "save"], [112, 3, 1, "", "submitted"], [112, 2, 1, "", "sum_cost"], [112, 2, 1, "", "update"], [112, 2, 1, "", "update_cost"], [112, 2, 1, "", "update_costs"], [112, 2, 1, "", "update_from_json"]], "smac.runner": [[113, 1, 1, "", "AbstractRunner"], [113, 1, 1, "", "DaskParallelRunner"], [113, 5, 1, "", "FirstRunCrashedException"], [113, 5, 1, "", "TargetAlgorithmAbortException"], [113, 1, 1, "", "TargetFunctionRunner"], [114, 0, 0, "-", "abstract_runner"], [115, 0, 0, "-", "abstract_serial_runner"], [116, 0, 0, "-", "dask_runner"], [117, 0, 0, "-", "exceptions"], [118, 0, 0, "-", "target_function_runner"], [119, 0, 0, "-", "target_function_script_runner"]], "smac.runner.AbstractRunner": [[113, 2, 1, "", "count_available_workers"], [113, 2, 1, "", "is_running"], [113, 2, 1, "", "iter_results"], [113, 3, 1, "", "meta"], [113, 2, 1, "", "run"], [113, 2, 1, "", "run_wrapper"], [113, 2, 1, "", "submit_trial"], [113, 2, 1, "", "wait"]], "smac.runner.DaskParallelRunner": [[113, 2, 1, "", "__del__"], [113, 2, 1, "", "close"], [113, 2, 1, "", "count_available_workers"], [113, 2, 1, "", "is_running"], [113, 2, 1, "", "iter_results"], [113, 2, 1, "", "run"], [113, 2, 1, "", "submit_trial"], [113, 2, 1, "", "wait"]], "smac.runner.TargetFunctionRunner": [[113, 2, 1, "", "__call__"], [113, 3, 1, "", "meta"], [113, 2, 1, "", "run"]], "smac.runner.abstract_runner": [[114, 1, 1, "", "AbstractRunner"]], "smac.runner.abstract_runner.AbstractRunner": [[114, 2, 1, "", "count_available_workers"], [114, 2, 1, "", "is_running"], [114, 2, 1, "", "iter_results"], [114, 3, 1, "", "meta"], [114, 2, 1, "", "run"], [114, 2, 1, "", "run_wrapper"], [114, 2, 1, "", "submit_trial"], [114, 2, 1, "", "wait"]], "smac.runner.abstract_serial_runner": [[115, 1, 1, "", "AbstractSerialRunner"]], "smac.runner.abstract_serial_runner.AbstractSerialRunner": [[115, 2, 1, "", "count_available_workers"], [115, 2, 1, "", "is_running"], [115, 2, 1, "", "iter_results"], [115, 2, 1, "", "submit_trial"], [115, 2, 1, "", "wait"]], "smac.runner.dask_runner": [[116, 1, 1, "", "DaskParallelRunner"]], "smac.runner.dask_runner.DaskParallelRunner": [[116, 2, 1, "", "__del__"], [116, 2, 1, "", "close"], [116, 2, 1, "", "count_available_workers"], [116, 2, 1, "", "is_running"], [116, 2, 1, "", "iter_results"], [116, 2, 1, "", "run"], [116, 2, 1, "", "submit_trial"], [116, 2, 1, "", "wait"]], "smac.runner.exceptions": [[117, 5, 1, "", "FirstRunCrashedException"], [117, 5, 1, "", "TargetAlgorithmAbortException"]], "smac.runner.target_function_runner": [[118, 1, 1, "", "TargetFunctionRunner"]], "smac.runner.target_function_runner.TargetFunctionRunner": [[118, 2, 1, "", "__call__"], [118, 3, 1, "", "meta"], [118, 2, 1, "", "run"]], "smac.runner.target_function_script_runner": [[119, 1, 1, "", "TargetFunctionScriptRunner"]], "smac.runner.target_function_script_runner.TargetFunctionScriptRunner": [[119, 2, 1, "", "__call__"], [119, 3, 1, "", "meta"], [119, 2, 1, "", "run"]], "smac.scenario": [[120, 1, 1, "", "Scenario"]], "smac.scenario.Scenario": [[120, 2, 1, "", "__post_init__"], [120, 2, 1, "", "count_instance_features"], [120, 2, 1, "", "count_objectives"], [120, 2, 1, "", "load"], [120, 2, 1, "", "make_serializable"], [120, 3, 1, "", "meta"], [120, 2, 1, "", "save"]], "smac.utils": [[122, 0, 0, "-", "configspace"], [123, 0, 0, "-", "data_structures"], [124, 0, 0, "-", "logging"], [125, 0, 0, "-", "multi_objective"], [126, 0, 0, "-", "pareto_front"], [127, 0, 0, "-", "subspaces"]], "smac.utils.configspace": [[122, 6, 1, "", "convert_configurations_to_array"], [122, 6, 1, "", "get_conditional_hyperparameters"], [122, 6, 1, "", "get_config_hash"], [122, 6, 1, "", "get_types"], [122, 6, 1, "", "print_config_changes"]], "smac.utils.data_structures": [[123, 6, 1, "", "batch"], [123, 6, 1, "", "recursively_compare_dicts"]], "smac.utils.logging": [[124, 6, 1, "", "get_logger"], [124, 6, 1, "", "setup_logging"]], "smac.utils.multi_objective": [[125, 6, 1, "", "normalize_costs"]], "smac.utils.pareto_front": [[126, 6, 1, "", "calculate_pareto_front"], [126, 6, 1, "", "sort_by_crowding_distance"]], "smac.utils.subspaces": [[128, 0, 0, "-", "boing_subspace"], [129, 0, 0, "-", "turbo_subspace"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:exception", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "titleterms": {"experiment": [0, 1], "instal": [0, 1], "window": [0, 1], "via": [0, 1], "wsl": [0, 1], "requir": 1, "anaconda": 1, "conda": 1, "forg": 1, "packag": 2, "overview": [2, 151], "featur": 2, "comparison": 2, "get": 3, "start": [3, 18], "configur": [3, 13], "space": 3, "target": [3, 18, 146], "function": [3, 13, 18, 24, 25, 26, 27, 28, 29, 30, 31, 122, 123, 124, 125, 126, 130, 142, 146], "scenario": [3, 120], "facad": [3, 42, 43, 44, 45, 46, 47, 48, 49], "minim": 4, "exampl": [4, 149], "api": 5, "refer": [5, 6], "glossari": 7, "f": 8, "A": 8, "q": 8, "licens": 9, "continu": [10, 134], "reproduc": 11, "optim": [12, 14, 15, 16, 18, 134], "compon": 13, "surrog": 13, "model": [13, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "acquisit": [13, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "maxim": [13, 32, 33, 34, 35, 36, 37, 38], "initi": 13, "design": 13, "random": 13, "intensifi": [13, 57, 58, 59, 60, 61], "selector": 13, "multi": [13, 14, 15, 138, 140, 144, 149], "object": [13, 15, 142, 144, 149], "algorithm": 13, "runhistori": [13, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "encod": [13, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "callback": [13, 39, 40, 41, 133], "fidel": [14, 140, 149], "across": 16, "instanc": [16, 140, 149], "ask": [17, 132], "tell": [17, 132], "interfac": [17, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 147, 149], "command": [18, 147, 149], "line": [18, 147, 149], "call": [18, 146], "return": 18, "stop": 19, "criteria": 19, "termin": 19, "cost": 19, "threshold": 19, "automat": 19, "log": [20, 124], "level": 20, "custom": [20, 133], "file": 20, "parallel": 21, "run": 21, "cluster": 21, "advanc": 22, "usag": 22, "navig": 22, "smac": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "modul": [23, 24, 32, 39, 42, 50, 57, 62, 65, 67, 71, 78, 85, 89, 93, 98, 100, 113, 121, 127], "abstract_acquisition_funct": 25, "class": [25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 66, 68, 69, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 116, 118, 119, 120], "confidence_bound": 26, "expected_improv": 27, "integrated_acquisition_funct": 28, "prior_acqusition_funct": 29, "probability_improv": 30, "thompson": 31, "abstract_acqusition_maxim": 33, "differential_evolut": 34, "helper": 35, "local_and_random_search": 36, "local_search": 37, "random_search": 38, "metadata_callback": 41, "abstract_facad": 43, "algorithm_configuration_facad": 44, "blackbox_facad": 45, "hyperband_facad": 46, "hyperparameter_optimization_facad": 47, "multi_fidelity_facad": 48, "random_facad": 49, "initial_design": [50, 51, 52, 53, 54, 55, 56], "abstract_initial_design": 51, "default_design": 52, "factorial_design": 53, "latin_hypercube_design": 54, "random_design": [55, 93, 94, 95, 96, 97], "sobol_design": 56, "abstract_intensifi": 58, "hyperband": 59, "successive_halv": 61, "main": [62, 63, 64], "config_selector": 63, "smbo": 64, "abstract_model": 66, "gaussian_process": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "abstract_gaussian_process": 68, "gpytorch_gaussian_process": 70, "kernel": [71, 72, 73, 74, 75, 76], "base_kernel": 72, "hamming_kernel": 73, "matern_kernel": 74, "rbf_kernel": 75, "white_kernel": 76, "mcmc_gaussian_process": 77, "prior": [78, 79, 80, 81, 82, 83, 135], "abstract_prior": 79, "gamma_prior": 80, "horseshoe_prior": 81, "log_normal_prior": 82, "tophat_prior": 83, "multi_objective_model": 84, "random_forest": [85, 86, 87], "abstract_random_forest": 86, "random_model": 88, "multi_object": [89, 90, 91, 92, 125], "abstract_multi_objective_algorithm": 90, "aggregation_strategi": 91, "parego": [92, 143], "abstract_random_design": 94, "annealing_design": 95, "modulus_design": 96, "probability_design": 97, "dataclass": 99, "abstract_encod": 101, "boing_encod": 102, "eips_encod": 103, "inverse_scaled_encod": 105, "log_encod": 106, "log_scaled_encod": 107, "scaled_encod": 108, "sqrt_scaled_encod": 109, "enumer": 110, "error": 111, "except": [111, 117], "runner": [113, 114, 115, 116, 117, 118, 119], "abstract_runn": 114, "abstract_serial_runn": 115, "dask_runn": 116, "target_function_runn": 118, "target_function_script_runn": 119, "util": [121, 122, 123, 124, 125, 126, 127, 128, 129], "configspac": 122, "data_structur": 123, "pareto_front": 126, "subspac": [127, 128, 129], "boing_subspac": 128, "turbo_subspac": 129, "quadrat": 130, "support": 131, "vector": 131, "machin": 131, "cross": 131, "valid": 131, "an": 134, "user": 135, "over": 135, "optimum": 135, "basic": [136, 149], "comput": [137, 141, 145, 148, 150, 153], "time": [137, 141, 145, 148, 150, 153], "layer": 138, "perceptron": 138, "us": 138, "multipl": [138, 139], "epoch": 138, "stochast": 139, "gradient": 139, "descent": 139, "On": 139, "dataset": 139, "2d": 142, "schaffer": 142, "weight": 142, "from": 146, "script": 146, "figur": 151, "home": 152, "contact": 152}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Experimental": [[0, "experimental"]], "Installation in Windows via WSL": [[0, "installation-in-windows-via-wsl"]], "Installation": [[1, "installation"]], "Requirements": [[1, "requirements"]], "Anaconda": [[1, "anaconda"]], "Conda-forge": [[1, "conda-forge"]], "Windows via WSL (Experimental)": [[1, "windows-via-wsl-experimental"]], "Package Overview": [[2, "package-overview"]], "Features": [[2, "features"]], "Comparison": [[2, "comparison"]], "Getting Started": [[3, "getting-started"]], "Configuration Space": [[3, "configuration-space"]], "Target Function": [[3, "target-function"]], "Scenario": [[3, "scenario"]], "Facade": [[3, "facade"]], "Minimal Example": [[4, "minimal-example"]], "API References": [[5, "api-references"]], "References": [[6, "references"]], "Glossary": [[7, "glossary"]], "F.A.Q.": [[8, "f-a-q"]], "License": [[9, "license"]], "Continue": [[10, "continue"]], "Reproducibility": [[11, "reproducibility"]], "Optimizations": [[12, "optimizations"]], "Components": [[13, "components"]], "Surrogate Model": [[13, "surrogate-model"]], "Acquisition Function": [[13, "acquisition-function"]], "Acquisition Maximizer": [[13, "acquisition-maximizer"]], "Initial Design": [[13, "initial-design"]], "Random Design": [[13, "random-design"]], "Intensifier": [[13, "intensifier"]], "Configuration Selector": [[13, "configuration-selector"]], "Multi-Objective Algorithm": [[13, "multi-objective-algorithm"]], "RunHistory": [[13, "runhistory"]], "RunHistory Encoder": [[13, "runhistory-encoder"]], "Callback": [[13, "callback"]], "Multi-Fidelity Optimization": [[14, "multi-fidelity-optimization"]], "Multi-Objective Optimization": [[15, "multi-objective-optimization"]], "Optimization across Instances": [[16, "optimization-across-instances"]], "Ask-and-Tell Interface": [[17, "ask-and-tell-interface"]], "Command-Line Interface": [[18, "command-line-interface"], [147, "command-line-interface"], [149, "command-line-interface"]], "Call of the Target Function": [[18, "call-of-the-target-function"]], "Return of the Target Function": [[18, "return-of-the-target-function"]], "Start the Optimization": [[18, "start-the-optimization"]], "Stopping Criteria": [[19, "stopping-criteria"]], "Termination Cost Threshold": [[19, "termination-cost-threshold"]], "Automatically Stopping": [[19, "automatically-stopping"]], "Logging": [[20, "logging"]], "Level": [[20, "level"]], "Custom File": [[20, "custom-file"]], "Parallelism": [[21, "parallelism"]], "Running on a Cluster": [[21, "running-on-a-cluster"]], "Advanced Usage": [[22, "advanced-usage"]], "Navigation": [[22, "navigation"]], "smac.acquisition": [[23, "module-smac.acquisition"]], "Interfaces": [[23, "interfaces"], [24, "interfaces"], [25, "interfaces"], [26, "interfaces"], [27, "interfaces"], [28, "interfaces"], [29, "interfaces"], [30, "interfaces"], [31, "interfaces"], [32, "interfaces"], [33, "interfaces"], [34, "interfaces"], [35, "interfaces"], [36, "interfaces"], [37, "interfaces"], [38, "interfaces"], [39, "interfaces"], [40, "interfaces"], [41, "interfaces"], [42, "interfaces"], [43, "interfaces"], [44, "interfaces"], [45, "interfaces"], [46, "interfaces"], [47, "interfaces"], [48, "interfaces"], [49, "interfaces"], [50, "interfaces"], [51, "interfaces"], [52, "interfaces"], [53, "interfaces"], [54, "interfaces"], [55, "interfaces"], [56, "interfaces"], [57, "interfaces"], [58, "interfaces"], [59, "interfaces"], [60, "interfaces"], [61, "interfaces"], [62, "interfaces"], [63, "interfaces"], [64, "interfaces"], [65, "interfaces"], [66, "interfaces"], [67, "interfaces"], [68, "interfaces"], [69, "interfaces"], [70, "interfaces"], [71, "interfaces"], [72, "interfaces"], [73, "interfaces"], [74, "interfaces"], [75, "interfaces"], [76, "interfaces"], [77, "interfaces"], [78, "interfaces"], [79, "interfaces"], [80, "interfaces"], [81, "interfaces"], [82, "interfaces"], [83, "interfaces"], [84, "interfaces"], [85, "interfaces"], [86, "interfaces"], [87, "interfaces"], [88, "interfaces"], [89, "interfaces"], [90, "interfaces"], [91, "interfaces"], [92, "interfaces"], [93, "interfaces"], [94, "interfaces"], [95, "interfaces"], [96, "interfaces"], [97, "interfaces"], [98, "interfaces"], [99, "interfaces"], [100, "interfaces"], [101, "interfaces"], [102, "interfaces"], [103, "interfaces"], [104, "interfaces"], [105, "interfaces"], [106, "interfaces"], [107, "interfaces"], [108, "interfaces"], [109, "interfaces"], [110, "interfaces"], [111, "interfaces"], [112, "interfaces"], [113, "interfaces"], [114, "interfaces"], [115, "interfaces"], [116, "interfaces"], [117, "interfaces"], [118, "interfaces"], [119, "interfaces"], [120, "interfaces"], [121, "interfaces"], [122, "interfaces"], [123, "interfaces"], [124, "interfaces"], [125, "interfaces"], [126, "interfaces"], [127, "interfaces"], [128, "interfaces"], [129, "interfaces"]], "Modules": [[23, "modules"], [24, "modules"], [32, "modules"], [39, "modules"], [42, "modules"], [50, "modules"], [57, "modules"], [62, "modules"], [65, "modules"], [67, "modules"], [71, "modules"], [78, "modules"], [85, "modules"], [89, "modules"], [93, "modules"], [98, "modules"], [100, "modules"], [113, "modules"], [121, "modules"], [127, "modules"]], "smac.acquisition.function": [[24, "module-smac.acquisition.function"]], "smac.acquisition.function.abstract_acquisition_function": [[25, "module-smac.acquisition.function.abstract_acquisition_function"]], "Classes": [[25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [40, "classes"], [41, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [63, "classes"], [64, "classes"], [66, "classes"], [68, "classes"], [69, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [99, "classes"], [101, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [112, "classes"], [114, "classes"], [115, "classes"], [116, "classes"], [118, "classes"], [119, "classes"], [120, "classes"]], "smac.acquisition.function.confidence_bound": [[26, "module-smac.acquisition.function.confidence_bound"]], "smac.acquisition.function.expected_improvement": [[27, "module-smac.acquisition.function.expected_improvement"]], "smac.acquisition.function.integrated_acquisition_function": [[28, "module-smac.acquisition.function.integrated_acquisition_function"]], "smac.acquisition.function.prior_acqusition_function": [[29, "module-smac.acquisition.function.prior_acqusition_function"]], "smac.acquisition.function.probability_improvement": [[30, "module-smac.acquisition.function.probability_improvement"]], "smac.acquisition.function.thompson": [[31, "module-smac.acquisition.function.thompson"]], "smac.acquisition.maximizer": [[32, "module-smac.acquisition.maximizer"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[33, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"]], "smac.acquisition.maximizer.differential_evolution": [[34, "module-smac.acquisition.maximizer.differential_evolution"]], "smac.acquisition.maximizer.helpers": [[35, "module-smac.acquisition.maximizer.helpers"]], "smac.acquisition.maximizer.local_and_random_search": [[36, "module-smac.acquisition.maximizer.local_and_random_search"]], "smac.acquisition.maximizer.local_search": [[37, "module-smac.acquisition.maximizer.local_search"]], "smac.acquisition.maximizer.random_search": [[38, "module-smac.acquisition.maximizer.random_search"]], "smac.callback": [[39, "module-smac.callback"]], "smac.callback.callback": [[40, "module-smac.callback.callback"]], "smac.callback.metadata_callback": [[41, "module-smac.callback.metadata_callback"]], "smac.facade": [[42, "module-smac.facade"]], "smac.facade.abstract_facade": [[43, "module-smac.facade.abstract_facade"]], "smac.facade.algorithm_configuration_facade": [[44, "module-smac.facade.algorithm_configuration_facade"]], "smac.facade.blackbox_facade": [[45, "module-smac.facade.blackbox_facade"]], "smac.facade.hyperband_facade": [[46, "module-smac.facade.hyperband_facade"]], "smac.facade.hyperparameter_optimization_facade": [[47, "module-smac.facade.hyperparameter_optimization_facade"]], "smac.facade.multi_fidelity_facade": [[48, "module-smac.facade.multi_fidelity_facade"]], "smac.facade.random_facade": [[49, "module-smac.facade.random_facade"]], "smac.initial_design": [[50, "module-smac.initial_design"]], "smac.initial_design.abstract_initial_design": [[51, "module-smac.initial_design.abstract_initial_design"]], "smac.initial_design.default_design": [[52, "module-smac.initial_design.default_design"]], "smac.initial_design.factorial_design": [[53, "module-smac.initial_design.factorial_design"]], "smac.initial_design.latin_hypercube_design": [[54, "module-smac.initial_design.latin_hypercube_design"]], "smac.initial_design.random_design": [[55, "module-smac.initial_design.random_design"]], "smac.initial_design.sobol_design": [[56, "module-smac.initial_design.sobol_design"]], "smac.intensifier": [[57, "module-smac.intensifier"]], "smac.intensifier.abstract_intensifier": [[58, "module-smac.intensifier.abstract_intensifier"]], "smac.intensifier.hyperband": [[59, "module-smac.intensifier.hyperband"]], "smac.intensifier.intensifier": [[60, "module-smac.intensifier.intensifier"]], "smac.intensifier.successive_halving": [[61, "module-smac.intensifier.successive_halving"]], "smac.main": [[62, "module-smac.main"]], "smac.main.config_selector": [[63, "module-smac.main.config_selector"]], "smac.main.smbo": [[64, "module-smac.main.smbo"]], "smac.model": [[65, "module-smac.model"]], "smac.model.abstract_model": [[66, "module-smac.model.abstract_model"]], "smac.model.gaussian_process": [[67, "module-smac.model.gaussian_process"]], "smac.model.gaussian_process.abstract_gaussian_process": [[68, "module-smac.model.gaussian_process.abstract_gaussian_process"]], "smac.model.gaussian_process.gaussian_process": [[69, "module-smac.model.gaussian_process.gaussian_process"]], "smac.model.gaussian_process.gpytorch_gaussian_process": [[70, "module-smac.model.gaussian_process.gpytorch_gaussian_process"]], "smac.model.gaussian_process.kernels": [[71, "module-smac.model.gaussian_process.kernels"]], "smac.model.gaussian_process.kernels.base_kernels": [[72, "module-smac.model.gaussian_process.kernels.base_kernels"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[73, "module-smac.model.gaussian_process.kernels.hamming_kernel"]], "smac.model.gaussian_process.kernels.matern_kernel": [[74, "module-smac.model.gaussian_process.kernels.matern_kernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[75, "module-smac.model.gaussian_process.kernels.rbf_kernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[76, "module-smac.model.gaussian_process.kernels.white_kernel"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[77, "module-smac.model.gaussian_process.mcmc_gaussian_process"]], "smac.model.gaussian_process.priors": [[78, "module-smac.model.gaussian_process.priors"]], "smac.model.gaussian_process.priors.abstract_prior": [[79, "module-smac.model.gaussian_process.priors.abstract_prior"]], "smac.model.gaussian_process.priors.gamma_prior": [[80, "module-smac.model.gaussian_process.priors.gamma_prior"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[81, "module-smac.model.gaussian_process.priors.horseshoe_prior"]], "smac.model.gaussian_process.priors.log_normal_prior": [[82, "module-smac.model.gaussian_process.priors.log_normal_prior"]], "smac.model.gaussian_process.priors.tophat_prior": [[83, "module-smac.model.gaussian_process.priors.tophat_prior"]], "smac.model.multi_objective_model": [[84, "module-smac.model.multi_objective_model"]], "smac.model.random_forest": [[85, "module-smac.model.random_forest"]], "smac.model.random_forest.abstract_random_forest": [[86, "module-smac.model.random_forest.abstract_random_forest"]], "smac.model.random_forest.random_forest": [[87, "module-smac.model.random_forest.random_forest"]], "smac.model.random_model": [[88, "module-smac.model.random_model"]], "smac.multi_objective": [[89, "module-smac.multi_objective"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[90, "module-smac.multi_objective.abstract_multi_objective_algorithm"]], "smac.multi_objective.aggregation_strategy": [[91, "module-smac.multi_objective.aggregation_strategy"]], "smac.multi_objective.parego": [[92, "module-smac.multi_objective.parego"]], "smac.random_design": [[93, "module-smac.random_design"]], "smac.random_design.abstract_random_design": [[94, "module-smac.random_design.abstract_random_design"]], "smac.random_design.annealing_design": [[95, "module-smac.random_design.annealing_design"]], "smac.random_design.modulus_design": [[96, "module-smac.random_design.modulus_design"]], "smac.random_design.probability_design": [[97, "module-smac.random_design.probability_design"]], "smac.runhistory": [[98, "module-smac.runhistory"]], "smac.runhistory.dataclasses": [[99, "module-smac.runhistory.dataclasses"]], "smac.runhistory.encoder": [[100, "module-smac.runhistory.encoder"]], "smac.runhistory.encoder.abstract_encoder": [[101, "module-smac.runhistory.encoder.abstract_encoder"]], "smac.runhistory.encoder.boing_encoder": [[102, "module-smac.runhistory.encoder.boing_encoder"]], "smac.runhistory.encoder.eips_encoder": [[103, "module-smac.runhistory.encoder.eips_encoder"]], "smac.runhistory.encoder.encoder": [[104, "module-smac.runhistory.encoder.encoder"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[105, "module-smac.runhistory.encoder.inverse_scaled_encoder"]], "smac.runhistory.encoder.log_encoder": [[106, "module-smac.runhistory.encoder.log_encoder"]], "smac.runhistory.encoder.log_scaled_encoder": [[107, "module-smac.runhistory.encoder.log_scaled_encoder"]], "smac.runhistory.encoder.scaled_encoder": [[108, "module-smac.runhistory.encoder.scaled_encoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[109, "module-smac.runhistory.encoder.sqrt_scaled_encoder"]], "smac.runhistory.enumerations": [[110, "module-smac.runhistory.enumerations"]], "smac.runhistory.errors": [[111, "module-smac.runhistory.errors"]], "Exceptions": [[111, "exceptions"], [117, "exceptions"]], "smac.runhistory.runhistory": [[112, "module-smac.runhistory.runhistory"]], "smac.runner": [[113, "module-smac.runner"]], "smac.runner.abstract_runner": [[114, "module-smac.runner.abstract_runner"]], "smac.runner.abstract_serial_runner": [[115, "module-smac.runner.abstract_serial_runner"]], "smac.runner.dask_runner": [[116, "module-smac.runner.dask_runner"]], "smac.runner.exceptions": [[117, "module-smac.runner.exceptions"]], "smac.runner.target_function_runner": [[118, "module-smac.runner.target_function_runner"]], "smac.runner.target_function_script_runner": [[119, "module-smac.runner.target_function_script_runner"]], "smac.scenario": [[120, "module-smac.scenario"]], "smac.utils": [[121, "module-smac.utils"]], "smac.utils.configspace": [[122, "module-smac.utils.configspace"]], "Functions": [[122, "functions"], [123, "functions"], [124, "functions"], [125, "functions"], [126, "functions"]], "smac.utils.data_structures": [[123, "module-smac.utils.data_structures"]], "smac.utils.logging": [[124, "module-smac.utils.logging"]], "smac.utils.multi_objective": [[125, "module-smac.utils.multi_objective"]], "smac.utils.pareto_front": [[126, "module-smac.utils.pareto_front"]], "smac.utils.subspaces": [[127, "module-smac.utils.subspaces"]], "smac.utils.subspaces.boing_subspace": [[128, "module-smac.utils.subspaces.boing_subspace"]], "smac.utils.subspaces.turbo_subspace": [[129, "module-smac.utils.subspaces.turbo_subspace"]], "Quadratic Function": [[130, "quadratic-function"]], "Support Vector Machine with Cross-Validation": [[131, "support-vector-machine-with-cross-validation"]], "Ask-and-Tell": [[132, "ask-and-tell"]], "Custom Callback": [[133, "custom-callback"]], "Continue an Optimization": [[134, "continue-an-optimization"]], "User Priors over the Optimum": [[135, "user-priors-over-the-optimum"]], "Basics": [[136, "basics"], [149, "basics"]], "Computation times": [[137, "computation-times"], [141, "computation-times"], [145, "computation-times"], [148, "computation-times"], [150, "computation-times"], [153, "computation-times"]], "Multi-Layer Perceptron Using Multiple Epochs": [[138, "multi-layer-perceptron-using-multiple-epochs"]], "Stochastic Gradient Descent On Multiple Datasets": [[139, "stochastic-gradient-descent-on-multiple-datasets"]], "Multi-Fidelity and Multi-Instances": [[140, "multi-fidelity-and-multi-instances"], [149, "multi-fidelity-and-multi-instances"]], "2D Schaffer Function with Objective Weights": [[142, "d-schaffer-function-with-objective-weights"]], "ParEGO": [[143, "parego"]], "Multi-Objective": [[144, "multi-objective"], [149, "multi-objective"]], "Call Target Function From Script": [[146, "call-target-function-from-script"]], "Examples": [[149, "examples"]], "Overview Figure": [[151, "overview-figure"]], "Home": [[152, "home"]], "Contact": [[152, "contact"]]}, "indexentries": {"bb": [[7, "term-BB"]], "bo": [[7, "term-BO"]], "bohb": [[7, "term-BOHB"]], "bayesian optimization": [[7, "term-Bayesian-Optimization"]], "black-box": [[7, "term-Black-Box"]], "budget": [[7, "term-Budget"]], "cli": [[7, "term-CLI"]], "cv": [[7, "term-CV"]], "gp": [[7, "term-GP"]], "gp-mcmc": [[7, "term-GP-MCMC"]], "hb": [[7, "term-HB"]], "hp": [[7, "term-HP"]], "hyperband": [[7, "term-Hyperband"]], "incumbent": [[7, "term-Incumbent"]], "instances": [[7, "term-Instances"]], "intensification": [[7, "term-Intensification"]], "mf": [[7, "term-MF"]], "multi-fidelity": [[7, "term-Multi-Fidelity"]], "multi-objective": [[7, "term-Multi-Objective"]], "objective": [[7, "term-Objective"]], "rf": [[7, "term-RF"]], "roar": [[7, "term-ROAR"]], "random online adaptive racing": [[7, "term-Random-Online-Adaptive-Racing"]], "smac": [[7, "term-SMAC"]], "smbo": [[7, "term-SMBO"]], "target function": [[7, "term-Target-Function"]], "trial": [[7, "term-Trial"]], "module": [[23, "module-smac.acquisition"], [24, "module-smac.acquisition.function"], [25, "module-smac.acquisition.function.abstract_acquisition_function"], [26, "module-smac.acquisition.function.confidence_bound"], [27, "module-smac.acquisition.function.expected_improvement"], [28, "module-smac.acquisition.function.integrated_acquisition_function"], [29, "module-smac.acquisition.function.prior_acqusition_function"], [30, "module-smac.acquisition.function.probability_improvement"], [31, "module-smac.acquisition.function.thompson"], [32, "module-smac.acquisition.maximizer"], [33, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"], [34, "module-smac.acquisition.maximizer.differential_evolution"], [35, "module-smac.acquisition.maximizer.helpers"], [36, "module-smac.acquisition.maximizer.local_and_random_search"], [37, "module-smac.acquisition.maximizer.local_search"], [38, "module-smac.acquisition.maximizer.random_search"], [39, "module-smac.callback"], [40, "module-smac.callback.callback"], [41, "module-smac.callback.metadata_callback"], [42, "module-smac.facade"], [43, "module-smac.facade.abstract_facade"], [44, "module-smac.facade.algorithm_configuration_facade"], [45, "module-smac.facade.blackbox_facade"], [46, "module-smac.facade.hyperband_facade"], [47, "module-smac.facade.hyperparameter_optimization_facade"], [48, "module-smac.facade.multi_fidelity_facade"], [49, "module-smac.facade.random_facade"], [50, "module-smac.initial_design"], [51, "module-smac.initial_design.abstract_initial_design"], [52, "module-smac.initial_design.default_design"], [53, "module-smac.initial_design.factorial_design"], [54, "module-smac.initial_design.latin_hypercube_design"], [55, "module-smac.initial_design.random_design"], [56, "module-smac.initial_design.sobol_design"], [57, "module-smac.intensifier"], [58, "module-smac.intensifier.abstract_intensifier"], [59, "module-smac.intensifier.hyperband"], [60, "module-smac.intensifier.intensifier"], [61, "module-smac.intensifier.successive_halving"], [62, "module-smac.main"], [63, "module-smac.main.config_selector"], [64, "module-smac.main.smbo"], [65, "module-smac.model"], [66, "module-smac.model.abstract_model"], [67, "module-smac.model.gaussian_process"], [68, "module-smac.model.gaussian_process.abstract_gaussian_process"], [69, "module-smac.model.gaussian_process.gaussian_process"], [70, "module-smac.model.gaussian_process.gpytorch_gaussian_process"], [71, "module-smac.model.gaussian_process.kernels"], [72, "module-smac.model.gaussian_process.kernels.base_kernels"], [73, "module-smac.model.gaussian_process.kernels.hamming_kernel"], [74, "module-smac.model.gaussian_process.kernels.matern_kernel"], [75, "module-smac.model.gaussian_process.kernels.rbf_kernel"], [76, "module-smac.model.gaussian_process.kernels.white_kernel"], [77, "module-smac.model.gaussian_process.mcmc_gaussian_process"], [78, "module-smac.model.gaussian_process.priors"], [79, "module-smac.model.gaussian_process.priors.abstract_prior"], [80, "module-smac.model.gaussian_process.priors.gamma_prior"], [81, "module-smac.model.gaussian_process.priors.horseshoe_prior"], [82, "module-smac.model.gaussian_process.priors.log_normal_prior"], [83, "module-smac.model.gaussian_process.priors.tophat_prior"], [84, "module-smac.model.multi_objective_model"], [85, "module-smac.model.random_forest"], [86, "module-smac.model.random_forest.abstract_random_forest"], [87, "module-smac.model.random_forest.random_forest"], [88, "module-smac.model.random_model"], [89, "module-smac.multi_objective"], [90, "module-smac.multi_objective.abstract_multi_objective_algorithm"], [91, "module-smac.multi_objective.aggregation_strategy"], [92, "module-smac.multi_objective.parego"], [93, "module-smac.random_design"], [94, "module-smac.random_design.abstract_random_design"], [95, "module-smac.random_design.annealing_design"], [96, "module-smac.random_design.modulus_design"], [97, "module-smac.random_design.probability_design"], [98, "module-smac.runhistory"], [99, "module-smac.runhistory.dataclasses"], [100, "module-smac.runhistory.encoder"], [101, "module-smac.runhistory.encoder.abstract_encoder"], [102, "module-smac.runhistory.encoder.boing_encoder"], [103, "module-smac.runhistory.encoder.eips_encoder"], [104, "module-smac.runhistory.encoder.encoder"], [105, "module-smac.runhistory.encoder.inverse_scaled_encoder"], [106, "module-smac.runhistory.encoder.log_encoder"], [107, "module-smac.runhistory.encoder.log_scaled_encoder"], [108, "module-smac.runhistory.encoder.scaled_encoder"], [109, "module-smac.runhistory.encoder.sqrt_scaled_encoder"], [110, "module-smac.runhistory.enumerations"], [111, "module-smac.runhistory.errors"], [112, "module-smac.runhistory.runhistory"], [113, "module-smac.runner"], [114, "module-smac.runner.abstract_runner"], [115, "module-smac.runner.abstract_serial_runner"], [116, "module-smac.runner.dask_runner"], [117, "module-smac.runner.exceptions"], [118, "module-smac.runner.target_function_runner"], [119, "module-smac.runner.target_function_script_runner"], [120, "module-smac.scenario"], [121, "module-smac.utils"], [122, "module-smac.utils.configspace"], [123, "module-smac.utils.data_structures"], [124, "module-smac.utils.logging"], [125, "module-smac.utils.multi_objective"], [126, "module-smac.utils.pareto_front"], [127, "module-smac.utils.subspaces"], [128, "module-smac.utils.subspaces.boing_subspace"], [129, "module-smac.utils.subspaces.turbo_subspace"]], "smac.acquisition": [[23, "module-smac.acquisition"]], "abstractacquisitionfunction (class in smac.acquisition.function)": [[24, "smac.acquisition.function.AbstractAcquisitionFunction"]], "ei (class in smac.acquisition.function)": [[24, "smac.acquisition.function.EI"]], "eips (class in smac.acquisition.function)": [[24, "smac.acquisition.function.EIPS"]], "integratedacquisitionfunction (class in smac.acquisition.function)": [[24, "smac.acquisition.function.IntegratedAcquisitionFunction"]], "lcb (class in smac.acquisition.function)": [[24, "smac.acquisition.function.LCB"]], "pi (class in smac.acquisition.function)": [[24, "smac.acquisition.function.PI"]], "prioracquisitionfunction (class in smac.acquisition.function)": [[24, "smac.acquisition.function.PriorAcquisitionFunction"]], "ts (class in smac.acquisition.function)": [[24, "smac.acquisition.function.TS"]], "__call__() (smac.acquisition.function.abstractacquisitionfunction method)": [[24, "smac.acquisition.function.AbstractAcquisitionFunction.__call__"]], "_acquisition_function (smac.acquisition.function.integratedacquisitionfunction attribute)": [[24, "smac.acquisition.function.IntegratedAcquisitionFunction._acquisition_function"]], "_beta (smac.acquisition.function.lcb attribute)": [[24, "smac.acquisition.function.LCB._beta"]], "_eta (smac.acquisition.function.ei attribute)": [[24, "smac.acquisition.function.EI._eta"]], "_eta (smac.acquisition.function.integratedacquisitionfunction attribute)": [[24, "smac.acquisition.function.IntegratedAcquisitionFunction._eta"]], "_functions (smac.acquisition.function.integratedacquisitionfunction attribute)": [[24, "smac.acquisition.function.IntegratedAcquisitionFunction._functions"]], "_log (smac.acquisition.function.ei attribute)": [[24, "smac.acquisition.function.EI._log"]], "_num_data (smac.acquisition.function.lcb attribute)": [[24, "smac.acquisition.function.LCB._num_data"]], "_xi (smac.acquisition.function.ei attribute)": [[24, "smac.acquisition.function.EI._xi"]], "meta (smac.acquisition.function.abstractacquisitionfunction property)": [[24, "smac.acquisition.function.AbstractAcquisitionFunction.meta"]], "meta (smac.acquisition.function.ei property)": [[24, "smac.acquisition.function.EI.meta"]], "meta (smac.acquisition.function.integratedacquisitionfunction property)": [[24, "smac.acquisition.function.IntegratedAcquisitionFunction.meta"]], "meta (smac.acquisition.function.lcb property)": [[24, "smac.acquisition.function.LCB.meta"]], "meta (smac.acquisition.function.pi property)": [[24, "smac.acquisition.function.PI.meta"]], "meta (smac.acquisition.function.prioracquisitionfunction property)": [[24, "smac.acquisition.function.PriorAcquisitionFunction.meta"]], "model (smac.acquisition.function.abstractacquisitionfunction property)": [[24, "smac.acquisition.function.AbstractAcquisitionFunction.model"]], "model (smac.acquisition.function.prioracquisitionfunction property)": [[24, "smac.acquisition.function.PriorAcquisitionFunction.model"]], "name (smac.acquisition.function.abstractacquisitionfunction property)": [[24, "smac.acquisition.function.AbstractAcquisitionFunction.name"]], "name (smac.acquisition.function.ei property)": [[24, "smac.acquisition.function.EI.name"]], "name (smac.acquisition.function.eips property)": [[24, "smac.acquisition.function.EIPS.name"]], "name (smac.acquisition.function.integratedacquisitionfunction property)": [[24, "smac.acquisition.function.IntegratedAcquisitionFunction.name"]], "name (smac.acquisition.function.lcb property)": [[24, "smac.acquisition.function.LCB.name"]], "name (smac.acquisition.function.pi property)": [[24, "smac.acquisition.function.PI.name"]], "name (smac.acquisition.function.prioracquisitionfunction property)": [[24, "smac.acquisition.function.PriorAcquisitionFunction.name"]], "name (smac.acquisition.function.ts property)": [[24, "smac.acquisition.function.TS.name"]], "smac.acquisition.function": [[24, "module-smac.acquisition.function"]], "update() (smac.acquisition.function.abstractacquisitionfunction method)": [[24, "smac.acquisition.function.AbstractAcquisitionFunction.update"]], "abstractacquisitionfunction (class in smac.acquisition.function.abstract_acquisition_function)": [[25, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction"]], "__call__() (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction method)": [[25, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.__call__"]], "meta (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[25, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.meta"]], "model (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[25, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.model"]], "name (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[25, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.name"]], "smac.acquisition.function.abstract_acquisition_function": [[25, "module-smac.acquisition.function.abstract_acquisition_function"]], "update() (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction method)": [[25, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.update"]], "lcb (class in smac.acquisition.function.confidence_bound)": [[26, "smac.acquisition.function.confidence_bound.LCB"]], "_beta (smac.acquisition.function.confidence_bound.lcb attribute)": [[26, "smac.acquisition.function.confidence_bound.LCB._beta"]], "_num_data (smac.acquisition.function.confidence_bound.lcb attribute)": [[26, "smac.acquisition.function.confidence_bound.LCB._num_data"]], "meta (smac.acquisition.function.confidence_bound.lcb property)": [[26, "smac.acquisition.function.confidence_bound.LCB.meta"]], "name (smac.acquisition.function.confidence_bound.lcb property)": [[26, "smac.acquisition.function.confidence_bound.LCB.name"]], "smac.acquisition.function.confidence_bound": [[26, "module-smac.acquisition.function.confidence_bound"]], "ei (class in smac.acquisition.function.expected_improvement)": [[27, "smac.acquisition.function.expected_improvement.EI"]], "eips (class in smac.acquisition.function.expected_improvement)": [[27, "smac.acquisition.function.expected_improvement.EIPS"]], "_eta (smac.acquisition.function.expected_improvement.ei attribute)": [[27, "smac.acquisition.function.expected_improvement.EI._eta"]], "_log (smac.acquisition.function.expected_improvement.ei attribute)": [[27, "smac.acquisition.function.expected_improvement.EI._log"]], "_xi (smac.acquisition.function.expected_improvement.ei attribute)": [[27, "smac.acquisition.function.expected_improvement.EI._xi"]], "meta (smac.acquisition.function.expected_improvement.ei property)": [[27, "smac.acquisition.function.expected_improvement.EI.meta"]], "name (smac.acquisition.function.expected_improvement.ei property)": [[27, "smac.acquisition.function.expected_improvement.EI.name"]], "name (smac.acquisition.function.expected_improvement.eips property)": [[27, "smac.acquisition.function.expected_improvement.EIPS.name"]], "smac.acquisition.function.expected_improvement": [[27, "module-smac.acquisition.function.expected_improvement"]], "integratedacquisitionfunction (class in smac.acquisition.function.integrated_acquisition_function)": [[28, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction"]], "_acquisition_function (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction attribute)": [[28, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction._acquisition_function"]], "_eta (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction attribute)": [[28, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction._eta"]], "_functions (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction attribute)": [[28, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction._functions"]], "meta (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction property)": [[28, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction.meta"]], "name (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction property)": [[28, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction.name"]], "smac.acquisition.function.integrated_acquisition_function": [[28, "module-smac.acquisition.function.integrated_acquisition_function"]], "prioracquisitionfunction (class in smac.acquisition.function.prior_acqusition_function)": [[29, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction"]], "meta (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[29, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.meta"]], "model (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[29, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.model"]], "name (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[29, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.name"]], "smac.acquisition.function.prior_acqusition_function": [[29, "module-smac.acquisition.function.prior_acqusition_function"]], "pi (class in smac.acquisition.function.probability_improvement)": [[30, "smac.acquisition.function.probability_improvement.PI"]], "meta (smac.acquisition.function.probability_improvement.pi property)": [[30, "smac.acquisition.function.probability_improvement.PI.meta"]], "name (smac.acquisition.function.probability_improvement.pi property)": [[30, "smac.acquisition.function.probability_improvement.PI.name"]], "smac.acquisition.function.probability_improvement": [[30, "module-smac.acquisition.function.probability_improvement"]], "ts (class in smac.acquisition.function.thompson)": [[31, "smac.acquisition.function.thompson.TS"]], "name (smac.acquisition.function.thompson.ts property)": [[31, "smac.acquisition.function.thompson.TS.name"]], "smac.acquisition.function.thompson": [[31, "module-smac.acquisition.function.thompson"]], "abstractacquisitionmaximizer (class in smac.acquisition.maximizer)": [[32, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer"]], "differentialevolution (class in smac.acquisition.maximizer)": [[32, "smac.acquisition.maximizer.DifferentialEvolution"]], "localandsortedpriorrandomsearch (class in smac.acquisition.maximizer)": [[32, "smac.acquisition.maximizer.LocalAndSortedPriorRandomSearch"]], "localandsortedrandomsearch (class in smac.acquisition.maximizer)": [[32, "smac.acquisition.maximizer.LocalAndSortedRandomSearch"]], "localsearch (class in smac.acquisition.maximizer)": [[32, "smac.acquisition.maximizer.LocalSearch"]], "randomsearch (class in smac.acquisition.maximizer)": [[32, "smac.acquisition.maximizer.RandomSearch"]], "acquisition_function (smac.acquisition.maximizer.abstractacquisitionmaximizer property)": [[32, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.acquisition_function"]], "acquisition_function (smac.acquisition.maximizer.localandsortedrandomsearch property)": [[32, "smac.acquisition.maximizer.LocalAndSortedRandomSearch.acquisition_function"]], "maximize() (smac.acquisition.maximizer.abstractacquisitionmaximizer method)": [[32, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.maximize"]], "meta (smac.acquisition.maximizer.abstractacquisitionmaximizer property)": [[32, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.meta"]], "meta (smac.acquisition.maximizer.localandsortedrandomsearch property)": [[32, "smac.acquisition.maximizer.LocalAndSortedRandomSearch.meta"]], "meta (smac.acquisition.maximizer.localsearch property)": [[32, "smac.acquisition.maximizer.LocalSearch.meta"]], "smac.acquisition.maximizer": [[32, "module-smac.acquisition.maximizer"]], "abstractacquisitionmaximizer (class in smac.acquisition.maximizer.abstract_acqusition_maximizer)": [[33, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer"]], "acquisition_function (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer property)": [[33, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.acquisition_function"]], "maximize() (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer method)": [[33, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.maximize"]], "meta (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer property)": [[33, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.meta"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[33, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"]], "differentialevolution (class in smac.acquisition.maximizer.differential_evolution)": [[34, "smac.acquisition.maximizer.differential_evolution.DifferentialEvolution"]], "smac.acquisition.maximizer.differential_evolution": [[34, "module-smac.acquisition.maximizer.differential_evolution"]], "challengerlist (class in smac.acquisition.maximizer.helpers)": [[35, "smac.acquisition.maximizer.helpers.ChallengerList"]], "smac.acquisition.maximizer.helpers": [[35, "module-smac.acquisition.maximizer.helpers"]], "localandsortedpriorrandomsearch (class in smac.acquisition.maximizer.local_and_random_search)": [[36, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedPriorRandomSearch"]], "localandsortedrandomsearch (class in smac.acquisition.maximizer.local_and_random_search)": [[36, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch"]], "acquisition_function (smac.acquisition.maximizer.local_and_random_search.localandsortedrandomsearch property)": [[36, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch.acquisition_function"]], "meta (smac.acquisition.maximizer.local_and_random_search.localandsortedrandomsearch property)": [[36, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch.meta"]], "smac.acquisition.maximizer.local_and_random_search": [[36, "module-smac.acquisition.maximizer.local_and_random_search"]], "localsearch (class in smac.acquisition.maximizer.local_search)": [[37, "smac.acquisition.maximizer.local_search.LocalSearch"]], "meta (smac.acquisition.maximizer.local_search.localsearch property)": [[37, "smac.acquisition.maximizer.local_search.LocalSearch.meta"]], "smac.acquisition.maximizer.local_search": [[37, "module-smac.acquisition.maximizer.local_search"]], "randomsearch (class in smac.acquisition.maximizer.random_search)": [[38, "smac.acquisition.maximizer.random_search.RandomSearch"]], "smac.acquisition.maximizer.random_search": [[38, "module-smac.acquisition.maximizer.random_search"]], "callback (class in smac.callback)": [[39, "smac.callback.Callback"]], "metadatacallback (class in smac.callback)": [[39, "smac.callback.MetadataCallback"]], "on_ask_end() (smac.callback.callback method)": [[39, "smac.callback.Callback.on_ask_end"]], "on_ask_start() (smac.callback.callback method)": [[39, "smac.callback.Callback.on_ask_start"]], "on_end() (smac.callback.callback method)": [[39, "smac.callback.Callback.on_end"]], "on_iteration_end() (smac.callback.callback method)": [[39, "smac.callback.Callback.on_iteration_end"]], "on_iteration_start() (smac.callback.callback method)": [[39, "smac.callback.Callback.on_iteration_start"]], "on_next_configurations_end() (smac.callback.callback method)": [[39, "smac.callback.Callback.on_next_configurations_end"]], "on_next_configurations_start() (smac.callback.callback method)": [[39, "smac.callback.Callback.on_next_configurations_start"]], "on_start() (smac.callback.callback method)": [[39, "smac.callback.Callback.on_start"]], "on_start() (smac.callback.metadatacallback method)": [[39, "smac.callback.MetadataCallback.on_start"]], "on_tell_end() (smac.callback.callback method)": [[39, "smac.callback.Callback.on_tell_end"]], "on_tell_start() (smac.callback.callback method)": [[39, "smac.callback.Callback.on_tell_start"]], "smac.callback": [[39, "module-smac.callback"]], "callback (class in smac.callback.callback)": [[40, "smac.callback.callback.Callback"]], "on_ask_end() (smac.callback.callback.callback method)": [[40, "smac.callback.callback.Callback.on_ask_end"]], "on_ask_start() (smac.callback.callback.callback method)": [[40, "smac.callback.callback.Callback.on_ask_start"]], "on_end() (smac.callback.callback.callback method)": [[40, "smac.callback.callback.Callback.on_end"]], "on_iteration_end() (smac.callback.callback.callback method)": [[40, "smac.callback.callback.Callback.on_iteration_end"]], "on_iteration_start() (smac.callback.callback.callback method)": [[40, "smac.callback.callback.Callback.on_iteration_start"]], "on_next_configurations_end() (smac.callback.callback.callback method)": [[40, "smac.callback.callback.Callback.on_next_configurations_end"]], "on_next_configurations_start() (smac.callback.callback.callback method)": [[40, "smac.callback.callback.Callback.on_next_configurations_start"]], "on_start() (smac.callback.callback.callback method)": [[40, "smac.callback.callback.Callback.on_start"]], "on_tell_end() (smac.callback.callback.callback method)": [[40, "smac.callback.callback.Callback.on_tell_end"]], "on_tell_start() (smac.callback.callback.callback method)": [[40, "smac.callback.callback.Callback.on_tell_start"]], "smac.callback.callback": [[40, "module-smac.callback.callback"]], "metadatacallback (class in smac.callback.metadata_callback)": [[41, "smac.callback.metadata_callback.MetadataCallback"]], "on_start() (smac.callback.metadata_callback.metadatacallback method)": [[41, "smac.callback.metadata_callback.MetadataCallback.on_start"]], "smac.callback.metadata_callback": [[41, "module-smac.callback.metadata_callback"]], "abstractfacade (class in smac.facade)": [[42, "smac.facade.AbstractFacade"]], "algorithmconfigurationfacade (class in smac.facade)": [[42, "smac.facade.AlgorithmConfigurationFacade"]], "blackboxfacade (class in smac.facade)": [[42, "smac.facade.BlackBoxFacade"]], "hyperbandfacade (class in smac.facade)": [[42, "smac.facade.HyperbandFacade"]], "hyperparameteroptimizationfacade (class in smac.facade)": [[42, "smac.facade.HyperparameterOptimizationFacade"]], "multifidelityfacade (class in smac.facade)": [[42, "smac.facade.MultiFidelityFacade"]], "randomfacade (class in smac.facade)": [[42, "smac.facade.RandomFacade"]], "ask() (smac.facade.abstractfacade method)": [[42, "smac.facade.AbstractFacade.ask"]], "get_acquisition_function() (smac.facade.abstractfacade static method)": [[42, "smac.facade.AbstractFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.algorithmconfigurationfacade static method)": [[42, "smac.facade.AlgorithmConfigurationFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.blackboxfacade static method)": [[42, "smac.facade.BlackBoxFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.hyperparameteroptimizationfacade static method)": [[42, "smac.facade.HyperparameterOptimizationFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.randomfacade static method)": [[42, "smac.facade.RandomFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.abstractfacade static method)": [[42, "smac.facade.AbstractFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.algorithmconfigurationfacade static method)": [[42, "smac.facade.AlgorithmConfigurationFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.blackboxfacade static method)": [[42, "smac.facade.BlackBoxFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.hyperparameteroptimizationfacade static method)": [[42, "smac.facade.HyperparameterOptimizationFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.randomfacade static method)": [[42, "smac.facade.RandomFacade.get_acquisition_maximizer"]], "get_config_selector() (smac.facade.abstractfacade static method)": [[42, "smac.facade.AbstractFacade.get_config_selector"]], "get_initial_design() (smac.facade.abstractfacade static method)": [[42, "smac.facade.AbstractFacade.get_initial_design"]], "get_initial_design() (smac.facade.algorithmconfigurationfacade static method)": [[42, "smac.facade.AlgorithmConfigurationFacade.get_initial_design"]], "get_initial_design() (smac.facade.blackboxfacade static method)": [[42, "smac.facade.BlackBoxFacade.get_initial_design"]], "get_initial_design() (smac.facade.hyperparameteroptimizationfacade static method)": [[42, "smac.facade.HyperparameterOptimizationFacade.get_initial_design"]], "get_initial_design() (smac.facade.multifidelityfacade static method)": [[42, "smac.facade.MultiFidelityFacade.get_initial_design"]], "get_initial_design() (smac.facade.randomfacade static method)": [[42, "smac.facade.RandomFacade.get_initial_design"]], "get_intensifier() (smac.facade.abstractfacade static method)": [[42, "smac.facade.AbstractFacade.get_intensifier"]], "get_intensifier() (smac.facade.algorithmconfigurationfacade static method)": [[42, "smac.facade.AlgorithmConfigurationFacade.get_intensifier"]], "get_intensifier() (smac.facade.blackboxfacade static method)": [[42, "smac.facade.BlackBoxFacade.get_intensifier"]], "get_intensifier() (smac.facade.hyperbandfacade static method)": [[42, "smac.facade.HyperbandFacade.get_intensifier"]], "get_intensifier() (smac.facade.hyperparameteroptimizationfacade static method)": [[42, "smac.facade.HyperparameterOptimizationFacade.get_intensifier"]], "get_intensifier() (smac.facade.multifidelityfacade static method)": [[42, "smac.facade.MultiFidelityFacade.get_intensifier"]], "get_intensifier() (smac.facade.randomfacade static method)": [[42, "smac.facade.RandomFacade.get_intensifier"]], "get_kernel() (smac.facade.blackboxfacade static method)": [[42, "smac.facade.BlackBoxFacade.get_kernel"]], "get_model() (smac.facade.abstractfacade static method)": [[42, "smac.facade.AbstractFacade.get_model"]], "get_model() (smac.facade.algorithmconfigurationfacade static method)": [[42, "smac.facade.AlgorithmConfigurationFacade.get_model"]], "get_model() (smac.facade.blackboxfacade static method)": [[42, "smac.facade.BlackBoxFacade.get_model"]], "get_model() (smac.facade.hyperparameteroptimizationfacade static method)": [[42, "smac.facade.HyperparameterOptimizationFacade.get_model"]], "get_model() (smac.facade.randomfacade static method)": [[42, "smac.facade.RandomFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.abstractfacade static method)": [[42, "smac.facade.AbstractFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.algorithmconfigurationfacade static method)": [[42, "smac.facade.AlgorithmConfigurationFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.blackboxfacade static method)": [[42, "smac.facade.BlackBoxFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.hyperparameteroptimizationfacade static method)": [[42, "smac.facade.HyperparameterOptimizationFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.randomfacade static method)": [[42, "smac.facade.RandomFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.abstractfacade static method)": [[42, "smac.facade.AbstractFacade.get_random_design"]], "get_random_design() (smac.facade.algorithmconfigurationfacade static method)": [[42, "smac.facade.AlgorithmConfigurationFacade.get_random_design"]], "get_random_design() (smac.facade.blackboxfacade static method)": [[42, "smac.facade.BlackBoxFacade.get_random_design"]], "get_random_design() (smac.facade.hyperparameteroptimizationfacade static method)": [[42, "smac.facade.HyperparameterOptimizationFacade.get_random_design"]], "get_random_design() (smac.facade.randomfacade static method)": [[42, "smac.facade.RandomFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.abstractfacade static method)": [[42, "smac.facade.AbstractFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.algorithmconfigurationfacade static method)": [[42, "smac.facade.AlgorithmConfigurationFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.blackboxfacade static method)": [[42, "smac.facade.BlackBoxFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.hyperparameteroptimizationfacade static method)": [[42, "smac.facade.HyperparameterOptimizationFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.randomfacade static method)": [[42, "smac.facade.RandomFacade.get_runhistory_encoder"]], "intensifier (smac.facade.abstractfacade property)": [[42, "smac.facade.AbstractFacade.intensifier"]], "meta (smac.facade.abstractfacade property)": [[42, "smac.facade.AbstractFacade.meta"]], "optimize() (smac.facade.abstractfacade method)": [[42, "smac.facade.AbstractFacade.optimize"]], "optimizer (smac.facade.abstractfacade property)": [[42, "smac.facade.AbstractFacade.optimizer"]], "runhistory (smac.facade.abstractfacade property)": [[42, "smac.facade.AbstractFacade.runhistory"]], "scenario (smac.facade.abstractfacade property)": [[42, "smac.facade.AbstractFacade.scenario"]], "smac.facade": [[42, "module-smac.facade"]], "tell() (smac.facade.abstractfacade method)": [[42, "smac.facade.AbstractFacade.tell"]], "validate() (smac.facade.abstractfacade method)": [[42, "smac.facade.AbstractFacade.validate"]], "abstractfacade (class in smac.facade.abstract_facade)": [[43, "smac.facade.abstract_facade.AbstractFacade"]], "ask() (smac.facade.abstract_facade.abstractfacade method)": [[43, "smac.facade.abstract_facade.AbstractFacade.ask"]], "get_acquisition_function() (smac.facade.abstract_facade.abstractfacade static method)": [[43, "smac.facade.abstract_facade.AbstractFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.abstract_facade.abstractfacade static method)": [[43, "smac.facade.abstract_facade.AbstractFacade.get_acquisition_maximizer"]], "get_config_selector() (smac.facade.abstract_facade.abstractfacade static method)": [[43, "smac.facade.abstract_facade.AbstractFacade.get_config_selector"]], "get_initial_design() (smac.facade.abstract_facade.abstractfacade static method)": [[43, "smac.facade.abstract_facade.AbstractFacade.get_initial_design"]], "get_intensifier() (smac.facade.abstract_facade.abstractfacade static method)": [[43, "smac.facade.abstract_facade.AbstractFacade.get_intensifier"]], "get_model() (smac.facade.abstract_facade.abstractfacade static method)": [[43, "smac.facade.abstract_facade.AbstractFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.abstract_facade.abstractfacade static method)": [[43, "smac.facade.abstract_facade.AbstractFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.abstract_facade.abstractfacade static method)": [[43, "smac.facade.abstract_facade.AbstractFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.abstract_facade.abstractfacade static method)": [[43, "smac.facade.abstract_facade.AbstractFacade.get_runhistory_encoder"]], "intensifier (smac.facade.abstract_facade.abstractfacade property)": [[43, "smac.facade.abstract_facade.AbstractFacade.intensifier"]], "meta (smac.facade.abstract_facade.abstractfacade property)": [[43, "smac.facade.abstract_facade.AbstractFacade.meta"]], "optimize() (smac.facade.abstract_facade.abstractfacade method)": [[43, "smac.facade.abstract_facade.AbstractFacade.optimize"]], "optimizer (smac.facade.abstract_facade.abstractfacade property)": [[43, "smac.facade.abstract_facade.AbstractFacade.optimizer"]], "runhistory (smac.facade.abstract_facade.abstractfacade property)": [[43, "smac.facade.abstract_facade.AbstractFacade.runhistory"]], "scenario (smac.facade.abstract_facade.abstractfacade property)": [[43, "smac.facade.abstract_facade.AbstractFacade.scenario"]], "smac.facade.abstract_facade": [[43, "module-smac.facade.abstract_facade"]], "tell() (smac.facade.abstract_facade.abstractfacade method)": [[43, "smac.facade.abstract_facade.AbstractFacade.tell"]], "validate() (smac.facade.abstract_facade.abstractfacade method)": [[43, "smac.facade.abstract_facade.AbstractFacade.validate"]], "algorithmconfigurationfacade (class in smac.facade.algorithm_configuration_facade)": [[44, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade"]], "get_acquisition_function() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[44, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[44, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[44, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_initial_design"]], "get_intensifier() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[44, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_intensifier"]], "get_model() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[44, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[44, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[44, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[44, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_runhistory_encoder"]], "smac.facade.algorithm_configuration_facade": [[44, "module-smac.facade.algorithm_configuration_facade"]], "blackboxfacade (class in smac.facade.blackbox_facade)": [[45, "smac.facade.blackbox_facade.BlackBoxFacade"]], "get_acquisition_function() (smac.facade.blackbox_facade.blackboxfacade static method)": [[45, "smac.facade.blackbox_facade.BlackBoxFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.blackbox_facade.blackboxfacade static method)": [[45, "smac.facade.blackbox_facade.BlackBoxFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.blackbox_facade.blackboxfacade static method)": [[45, "smac.facade.blackbox_facade.BlackBoxFacade.get_initial_design"]], "get_intensifier() (smac.facade.blackbox_facade.blackboxfacade static method)": [[45, "smac.facade.blackbox_facade.BlackBoxFacade.get_intensifier"]], "get_kernel() (smac.facade.blackbox_facade.blackboxfacade static method)": [[45, "smac.facade.blackbox_facade.BlackBoxFacade.get_kernel"]], "get_model() (smac.facade.blackbox_facade.blackboxfacade static method)": [[45, "smac.facade.blackbox_facade.BlackBoxFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.blackbox_facade.blackboxfacade static method)": [[45, "smac.facade.blackbox_facade.BlackBoxFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.blackbox_facade.blackboxfacade static method)": [[45, "smac.facade.blackbox_facade.BlackBoxFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.blackbox_facade.blackboxfacade static method)": [[45, "smac.facade.blackbox_facade.BlackBoxFacade.get_runhistory_encoder"]], "smac.facade.blackbox_facade": [[45, "module-smac.facade.blackbox_facade"]], "hyperbandfacade (class in smac.facade.hyperband_facade)": [[46, "smac.facade.hyperband_facade.HyperbandFacade"]], "get_intensifier() (smac.facade.hyperband_facade.hyperbandfacade static method)": [[46, "smac.facade.hyperband_facade.HyperbandFacade.get_intensifier"]], "smac.facade.hyperband_facade": [[46, "module-smac.facade.hyperband_facade"]], "hyperparameteroptimizationfacade (class in smac.facade.hyperparameter_optimization_facade)": [[47, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade"]], "get_acquisition_function() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[47, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[47, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[47, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_initial_design"]], "get_intensifier() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[47, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_intensifier"]], "get_model() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[47, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[47, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[47, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[47, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_runhistory_encoder"]], "smac.facade.hyperparameter_optimization_facade": [[47, "module-smac.facade.hyperparameter_optimization_facade"]], "multifidelityfacade (class in smac.facade.multi_fidelity_facade)": [[48, "smac.facade.multi_fidelity_facade.MultiFidelityFacade"]], "get_initial_design() (smac.facade.multi_fidelity_facade.multifidelityfacade static method)": [[48, "smac.facade.multi_fidelity_facade.MultiFidelityFacade.get_initial_design"]], "get_intensifier() (smac.facade.multi_fidelity_facade.multifidelityfacade static method)": [[48, "smac.facade.multi_fidelity_facade.MultiFidelityFacade.get_intensifier"]], "smac.facade.multi_fidelity_facade": [[48, "module-smac.facade.multi_fidelity_facade"]], "randomfacade (class in smac.facade.random_facade)": [[49, "smac.facade.random_facade.RandomFacade"]], "get_acquisition_function() (smac.facade.random_facade.randomfacade static method)": [[49, "smac.facade.random_facade.RandomFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.random_facade.randomfacade static method)": [[49, "smac.facade.random_facade.RandomFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.random_facade.randomfacade static method)": [[49, "smac.facade.random_facade.RandomFacade.get_initial_design"]], "get_intensifier() (smac.facade.random_facade.randomfacade static method)": [[49, "smac.facade.random_facade.RandomFacade.get_intensifier"]], "get_model() (smac.facade.random_facade.randomfacade static method)": [[49, "smac.facade.random_facade.RandomFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.random_facade.randomfacade static method)": [[49, "smac.facade.random_facade.RandomFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.random_facade.randomfacade static method)": [[49, "smac.facade.random_facade.RandomFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.random_facade.randomfacade static method)": [[49, "smac.facade.random_facade.RandomFacade.get_runhistory_encoder"]], "smac.facade.random_facade": [[49, "module-smac.facade.random_facade"]], "abstractinitialdesign (class in smac.initial_design)": [[50, "smac.initial_design.AbstractInitialDesign"]], "defaultinitialdesign (class in smac.initial_design)": [[50, "smac.initial_design.DefaultInitialDesign"]], "factorialinitialdesign (class in smac.initial_design)": [[50, "smac.initial_design.FactorialInitialDesign"]], "latinhypercubeinitialdesign (class in smac.initial_design)": [[50, "smac.initial_design.LatinHypercubeInitialDesign"]], "randominitialdesign (class in smac.initial_design)": [[50, "smac.initial_design.RandomInitialDesign"]], "sobolinitialdesign (class in smac.initial_design)": [[50, "smac.initial_design.SobolInitialDesign"]], "meta (smac.initial_design.abstractinitialdesign property)": [[50, "smac.initial_design.AbstractInitialDesign.meta"]], "select_configurations() (smac.initial_design.abstractinitialdesign method)": [[50, "smac.initial_design.AbstractInitialDesign.select_configurations"]], "smac.initial_design": [[50, "module-smac.initial_design"]], "abstractinitialdesign (class in smac.initial_design.abstract_initial_design)": [[51, "smac.initial_design.abstract_initial_design.AbstractInitialDesign"]], "meta (smac.initial_design.abstract_initial_design.abstractinitialdesign property)": [[51, "smac.initial_design.abstract_initial_design.AbstractInitialDesign.meta"]], "select_configurations() (smac.initial_design.abstract_initial_design.abstractinitialdesign method)": [[51, "smac.initial_design.abstract_initial_design.AbstractInitialDesign.select_configurations"]], "smac.initial_design.abstract_initial_design": [[51, "module-smac.initial_design.abstract_initial_design"]], "defaultinitialdesign (class in smac.initial_design.default_design)": [[52, "smac.initial_design.default_design.DefaultInitialDesign"]], "smac.initial_design.default_design": [[52, "module-smac.initial_design.default_design"]], "factorialinitialdesign (class in smac.initial_design.factorial_design)": [[53, "smac.initial_design.factorial_design.FactorialInitialDesign"]], "smac.initial_design.factorial_design": [[53, "module-smac.initial_design.factorial_design"]], "latinhypercubeinitialdesign (class in smac.initial_design.latin_hypercube_design)": [[54, "smac.initial_design.latin_hypercube_design.LatinHypercubeInitialDesign"]], "smac.initial_design.latin_hypercube_design": [[54, "module-smac.initial_design.latin_hypercube_design"]], "randominitialdesign (class in smac.initial_design.random_design)": [[55, "smac.initial_design.random_design.RandomInitialDesign"]], "smac.initial_design.random_design": [[55, "module-smac.initial_design.random_design"]], "sobolinitialdesign (class in smac.initial_design.sobol_design)": [[56, "smac.initial_design.sobol_design.SobolInitialDesign"]], "smac.initial_design.sobol_design": [[56, "module-smac.initial_design.sobol_design"]], "abstractintensifier (class in smac.intensifier)": [[57, "smac.intensifier.AbstractIntensifier"]], "hyperband (class in smac.intensifier)": [[57, "smac.intensifier.Hyperband"]], "intensifier (class in smac.intensifier)": [[57, "smac.intensifier.Intensifier"]], "successivehalving (class in smac.intensifier)": [[57, "smac.intensifier.SuccessiveHalving"]], "__iter__() (smac.intensifier.abstractintensifier method)": [[57, "smac.intensifier.AbstractIntensifier.__iter__"]], "__iter__() (smac.intensifier.intensifier method)": [[57, "smac.intensifier.Intensifier.__iter__"]], "__post_init__() (smac.intensifier.abstractintensifier method)": [[57, "smac.intensifier.AbstractIntensifier.__post_init__"]], "__post_init__() (smac.intensifier.successivehalving method)": [[57, "smac.intensifier.SuccessiveHalving.__post_init__"]], "config_generator (smac.intensifier.abstractintensifier property)": [[57, "smac.intensifier.AbstractIntensifier.config_generator"]], "config_selector (smac.intensifier.abstractintensifier property)": [[57, "smac.intensifier.AbstractIntensifier.config_selector"]], "get_callback() (smac.intensifier.abstractintensifier method)": [[57, "smac.intensifier.AbstractIntensifier.get_callback"]], "get_incumbent() (smac.intensifier.abstractintensifier method)": [[57, "smac.intensifier.AbstractIntensifier.get_incumbent"]], "get_incumbent_instance_seed_budget_key_differences() (smac.intensifier.abstractintensifier method)": [[57, "smac.intensifier.AbstractIntensifier.get_incumbent_instance_seed_budget_key_differences"]], "get_incumbent_instance_seed_budget_keys() (smac.intensifier.abstractintensifier method)": [[57, "smac.intensifier.AbstractIntensifier.get_incumbent_instance_seed_budget_keys"]], "get_incumbents() (smac.intensifier.abstractintensifier method)": [[57, "smac.intensifier.AbstractIntensifier.get_incumbents"]], "get_instance_seed_budget_keys() (smac.intensifier.abstractintensifier method)": [[57, "smac.intensifier.AbstractIntensifier.get_instance_seed_budget_keys"]], "get_instance_seed_budget_keys() (smac.intensifier.successivehalving method)": [[57, "smac.intensifier.SuccessiveHalving.get_instance_seed_budget_keys"]], "get_instance_seed_keys_of_interest() (smac.intensifier.abstractintensifier method)": [[57, "smac.intensifier.AbstractIntensifier.get_instance_seed_keys_of_interest"]], "get_rejected_configs() (smac.intensifier.abstractintensifier method)": [[57, "smac.intensifier.AbstractIntensifier.get_rejected_configs"]], "get_state() (smac.intensifier.abstractintensifier method)": [[57, "smac.intensifier.AbstractIntensifier.get_state"]], "get_state() (smac.intensifier.hyperband method)": [[57, "smac.intensifier.Hyperband.get_state"]], "get_state() (smac.intensifier.intensifier method)": [[57, "smac.intensifier.Intensifier.get_state"]], "get_state() (smac.intensifier.successivehalving method)": [[57, "smac.intensifier.SuccessiveHalving.get_state"]], "get_trials_of_interest() (smac.intensifier.abstractintensifier method)": [[57, "smac.intensifier.AbstractIntensifier.get_trials_of_interest"]], "get_trials_of_interest() (smac.intensifier.successivehalving method)": [[57, "smac.intensifier.SuccessiveHalving.get_trials_of_interest"]], "incumbents_changed (smac.intensifier.abstractintensifier property)": [[57, "smac.intensifier.AbstractIntensifier.incumbents_changed"]], "load() (smac.intensifier.abstractintensifier method)": [[57, "smac.intensifier.AbstractIntensifier.load"]], "meta (smac.intensifier.abstractintensifier property)": [[57, "smac.intensifier.AbstractIntensifier.meta"]], "meta (smac.intensifier.successivehalving property)": [[57, "smac.intensifier.SuccessiveHalving.meta"]], "print_tracker() (smac.intensifier.successivehalving method)": [[57, "smac.intensifier.SuccessiveHalving.print_tracker"]], "reset() (smac.intensifier.abstractintensifier method)": [[57, "smac.intensifier.AbstractIntensifier.reset"]], "reset() (smac.intensifier.hyperband method)": [[57, "smac.intensifier.Hyperband.reset"]], "reset() (smac.intensifier.intensifier method)": [[57, "smac.intensifier.Intensifier.reset"]], "reset() (smac.intensifier.successivehalving method)": [[57, "smac.intensifier.SuccessiveHalving.reset"]], "runhistory (smac.intensifier.abstractintensifier property)": [[57, "smac.intensifier.AbstractIntensifier.runhistory"]], "save() (smac.intensifier.abstractintensifier method)": [[57, "smac.intensifier.AbstractIntensifier.save"]], "set_state() (smac.intensifier.abstractintensifier method)": [[57, "smac.intensifier.AbstractIntensifier.set_state"]], "set_state() (smac.intensifier.hyperband method)": [[57, "smac.intensifier.Hyperband.set_state"]], "set_state() (smac.intensifier.intensifier method)": [[57, "smac.intensifier.Intensifier.set_state"]], "set_state() (smac.intensifier.successivehalving method)": [[57, "smac.intensifier.SuccessiveHalving.set_state"]], "smac.intensifier": [[57, "module-smac.intensifier"]], "trajectory (smac.intensifier.abstractintensifier property)": [[57, "smac.intensifier.AbstractIntensifier.trajectory"]], "update_incumbents() (smac.intensifier.abstractintensifier method)": [[57, "smac.intensifier.AbstractIntensifier.update_incumbents"]], "used_walltime (smac.intensifier.abstractintensifier property)": [[57, "smac.intensifier.AbstractIntensifier.used_walltime"]], "uses_budgets (smac.intensifier.abstractintensifier property)": [[57, "smac.intensifier.AbstractIntensifier.uses_budgets"]], "uses_budgets (smac.intensifier.intensifier property)": [[57, "smac.intensifier.Intensifier.uses_budgets"]], "uses_budgets (smac.intensifier.successivehalving property)": [[57, "smac.intensifier.SuccessiveHalving.uses_budgets"]], "uses_instances (smac.intensifier.abstractintensifier property)": [[57, "smac.intensifier.AbstractIntensifier.uses_instances"]], "uses_instances (smac.intensifier.intensifier property)": [[57, "smac.intensifier.Intensifier.uses_instances"]], "uses_instances (smac.intensifier.successivehalving property)": [[57, "smac.intensifier.SuccessiveHalving.uses_instances"]], "uses_seeds (smac.intensifier.abstractintensifier property)": [[57, "smac.intensifier.AbstractIntensifier.uses_seeds"]], "uses_seeds (smac.intensifier.intensifier property)": [[57, "smac.intensifier.Intensifier.uses_seeds"]], "uses_seeds (smac.intensifier.successivehalving property)": [[57, "smac.intensifier.SuccessiveHalving.uses_seeds"]], "abstractintensifier (class in smac.intensifier.abstract_intensifier)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier"]], "__iter__() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.__iter__"]], "__post_init__() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.__post_init__"]], "config_generator (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.config_generator"]], "config_selector (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.config_selector"]], "get_callback() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_callback"]], "get_incumbent() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_incumbent"]], "get_incumbent_instance_seed_budget_key_differences() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_incumbent_instance_seed_budget_key_differences"]], "get_incumbent_instance_seed_budget_keys() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_incumbent_instance_seed_budget_keys"]], "get_incumbents() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_incumbents"]], "get_instance_seed_budget_keys() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_instance_seed_budget_keys"]], "get_instance_seed_keys_of_interest() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_instance_seed_keys_of_interest"]], "get_rejected_configs() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_rejected_configs"]], "get_state() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_state"]], "get_trials_of_interest() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_trials_of_interest"]], "incumbents_changed (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.incumbents_changed"]], "load() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.load"]], "meta (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.meta"]], "reset() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.reset"]], "runhistory (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.runhistory"]], "save() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.save"]], "set_state() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.set_state"]], "smac.intensifier.abstract_intensifier": [[58, "module-smac.intensifier.abstract_intensifier"]], "trajectory (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.trajectory"]], "update_incumbents() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.update_incumbents"]], "used_walltime (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.used_walltime"]], "uses_budgets (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_budgets"]], "uses_instances (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_instances"]], "uses_seeds (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[58, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_seeds"]], "hyperband (class in smac.intensifier.hyperband)": [[59, "smac.intensifier.hyperband.Hyperband"]], "get_state() (smac.intensifier.hyperband.hyperband method)": [[59, "smac.intensifier.hyperband.Hyperband.get_state"]], "reset() (smac.intensifier.hyperband.hyperband method)": [[59, "smac.intensifier.hyperband.Hyperband.reset"]], "set_state() (smac.intensifier.hyperband.hyperband method)": [[59, "smac.intensifier.hyperband.Hyperband.set_state"]], "smac.intensifier.hyperband": [[59, "module-smac.intensifier.hyperband"]], "intensifier (class in smac.intensifier.intensifier)": [[60, "smac.intensifier.intensifier.Intensifier"]], "__iter__() (smac.intensifier.intensifier.intensifier method)": [[60, "smac.intensifier.intensifier.Intensifier.__iter__"]], "get_state() (smac.intensifier.intensifier.intensifier method)": [[60, "smac.intensifier.intensifier.Intensifier.get_state"]], "reset() (smac.intensifier.intensifier.intensifier method)": [[60, "smac.intensifier.intensifier.Intensifier.reset"]], "set_state() (smac.intensifier.intensifier.intensifier method)": [[60, "smac.intensifier.intensifier.Intensifier.set_state"]], "smac.intensifier.intensifier": [[60, "module-smac.intensifier.intensifier"]], "uses_budgets (smac.intensifier.intensifier.intensifier property)": [[60, "smac.intensifier.intensifier.Intensifier.uses_budgets"]], "uses_instances (smac.intensifier.intensifier.intensifier property)": [[60, "smac.intensifier.intensifier.Intensifier.uses_instances"]], "uses_seeds (smac.intensifier.intensifier.intensifier property)": [[60, "smac.intensifier.intensifier.Intensifier.uses_seeds"]], "successivehalving (class in smac.intensifier.successive_halving)": [[61, "smac.intensifier.successive_halving.SuccessiveHalving"]], "__post_init__() (smac.intensifier.successive_halving.successivehalving method)": [[61, "smac.intensifier.successive_halving.SuccessiveHalving.__post_init__"]], "get_instance_seed_budget_keys() (smac.intensifier.successive_halving.successivehalving method)": [[61, "smac.intensifier.successive_halving.SuccessiveHalving.get_instance_seed_budget_keys"]], "get_state() (smac.intensifier.successive_halving.successivehalving method)": [[61, "smac.intensifier.successive_halving.SuccessiveHalving.get_state"]], "get_trials_of_interest() (smac.intensifier.successive_halving.successivehalving method)": [[61, "smac.intensifier.successive_halving.SuccessiveHalving.get_trials_of_interest"]], "meta (smac.intensifier.successive_halving.successivehalving property)": [[61, "smac.intensifier.successive_halving.SuccessiveHalving.meta"]], "print_tracker() (smac.intensifier.successive_halving.successivehalving method)": [[61, "smac.intensifier.successive_halving.SuccessiveHalving.print_tracker"]], "reset() (smac.intensifier.successive_halving.successivehalving method)": [[61, "smac.intensifier.successive_halving.SuccessiveHalving.reset"]], "set_state() (smac.intensifier.successive_halving.successivehalving method)": [[61, "smac.intensifier.successive_halving.SuccessiveHalving.set_state"]], "smac.intensifier.successive_halving": [[61, "module-smac.intensifier.successive_halving"]], "uses_budgets (smac.intensifier.successive_halving.successivehalving property)": [[61, "smac.intensifier.successive_halving.SuccessiveHalving.uses_budgets"]], "uses_instances (smac.intensifier.successive_halving.successivehalving property)": [[61, "smac.intensifier.successive_halving.SuccessiveHalving.uses_instances"]], "uses_seeds (smac.intensifier.successive_halving.successivehalving property)": [[61, "smac.intensifier.successive_halving.SuccessiveHalving.uses_seeds"]], "smac.main": [[62, "module-smac.main"]], "configselector (class in smac.main.config_selector)": [[63, "smac.main.config_selector.ConfigSelector"]], "__iter__() (smac.main.config_selector.configselector method)": [[63, "smac.main.config_selector.ConfigSelector.__iter__"]], "meta (smac.main.config_selector.configselector property)": [[63, "smac.main.config_selector.ConfigSelector.meta"]], "smac.main.config_selector": [[63, "module-smac.main.config_selector"]], "smbo (class in smac.main.smbo)": [[64, "smac.main.smbo.SMBO"]], "ask() (smac.main.smbo.smbo method)": [[64, "smac.main.smbo.SMBO.ask"]], "budget_exhausted (smac.main.smbo.smbo property)": [[64, "smac.main.smbo.SMBO.budget_exhausted"]], "exists() (smac.main.smbo.smbo method)": [[64, "smac.main.smbo.SMBO.exists"]], "intensifier (smac.main.smbo.smbo property)": [[64, "smac.main.smbo.SMBO.intensifier"]], "load() (smac.main.smbo.smbo method)": [[64, "smac.main.smbo.SMBO.load"]], "optimize() (smac.main.smbo.smbo method)": [[64, "smac.main.smbo.SMBO.optimize"]], "print_stats() (smac.main.smbo.smbo method)": [[64, "smac.main.smbo.SMBO.print_stats"]], "register_callback() (smac.main.smbo.smbo method)": [[64, "smac.main.smbo.SMBO.register_callback"]], "remaining_cputime (smac.main.smbo.smbo property)": [[64, "smac.main.smbo.SMBO.remaining_cputime"]], "remaining_trials (smac.main.smbo.smbo property)": [[64, "smac.main.smbo.SMBO.remaining_trials"]], "remaining_walltime (smac.main.smbo.smbo property)": [[64, "smac.main.smbo.SMBO.remaining_walltime"]], "reset() (smac.main.smbo.smbo method)": [[64, "smac.main.smbo.SMBO.reset"]], "runhistory (smac.main.smbo.smbo property)": [[64, "smac.main.smbo.SMBO.runhistory"]], "save() (smac.main.smbo.smbo method)": [[64, "smac.main.smbo.SMBO.save"]], "smac.main.smbo": [[64, "module-smac.main.smbo"]], "tell() (smac.main.smbo.smbo method)": [[64, "smac.main.smbo.SMBO.tell"]], "update_acquisition_function() (smac.main.smbo.smbo method)": [[64, "smac.main.smbo.SMBO.update_acquisition_function"]], "update_model() (smac.main.smbo.smbo method)": [[64, "smac.main.smbo.SMBO.update_model"]], "used_target_function_walltime (smac.main.smbo.smbo property)": [[64, "smac.main.smbo.SMBO.used_target_function_walltime"]], "used_walltime (smac.main.smbo.smbo property)": [[64, "smac.main.smbo.SMBO.used_walltime"]], "validate() (smac.main.smbo.smbo method)": [[64, "smac.main.smbo.SMBO.validate"]], "abstractmodel (class in smac.model)": [[65, "smac.model.AbstractModel"]], "multiobjectivemodel (class in smac.model)": [[65, "smac.model.MultiObjectiveModel"]], "randommodel (class in smac.model)": [[65, "smac.model.RandomModel"]], "meta (smac.model.abstractmodel property)": [[65, "smac.model.AbstractModel.meta"]], "models (smac.model.multiobjectivemodel property)": [[65, "smac.model.MultiObjectiveModel.models"]], "predict() (smac.model.abstractmodel method)": [[65, "smac.model.AbstractModel.predict"]], "predict_marginalized() (smac.model.abstractmodel method)": [[65, "smac.model.AbstractModel.predict_marginalized"]], "predict_marginalized() (smac.model.multiobjectivemodel method)": [[65, "smac.model.MultiObjectiveModel.predict_marginalized"]], "smac.model": [[65, "module-smac.model"]], "train() (smac.model.abstractmodel method)": [[65, "smac.model.AbstractModel.train"]], "abstractmodel (class in smac.model.abstract_model)": [[66, "smac.model.abstract_model.AbstractModel"]], "meta (smac.model.abstract_model.abstractmodel property)": [[66, "smac.model.abstract_model.AbstractModel.meta"]], "predict() (smac.model.abstract_model.abstractmodel method)": [[66, "smac.model.abstract_model.AbstractModel.predict"]], "predict_marginalized() (smac.model.abstract_model.abstractmodel method)": [[66, "smac.model.abstract_model.AbstractModel.predict_marginalized"]], "smac.model.abstract_model": [[66, "module-smac.model.abstract_model"]], "train() (smac.model.abstract_model.abstractmodel method)": [[66, "smac.model.abstract_model.AbstractModel.train"]], "abstractgaussianprocess (class in smac.model.gaussian_process)": [[67, "smac.model.gaussian_process.AbstractGaussianProcess"]], "gaussianprocess (class in smac.model.gaussian_process)": [[67, "smac.model.gaussian_process.GaussianProcess"]], "mcmcgaussianprocess (class in smac.model.gaussian_process)": [[67, "smac.model.gaussian_process.MCMCGaussianProcess"]], "meta (smac.model.gaussian_process.abstractgaussianprocess property)": [[67, "smac.model.gaussian_process.AbstractGaussianProcess.meta"]], "meta (smac.model.gaussian_process.gaussianprocess property)": [[67, "smac.model.gaussian_process.GaussianProcess.meta"]], "meta (smac.model.gaussian_process.mcmcgaussianprocess property)": [[67, "smac.model.gaussian_process.MCMCGaussianProcess.meta"]], "models (smac.model.gaussian_process.mcmcgaussianprocess property)": [[67, "smac.model.gaussian_process.MCMCGaussianProcess.models"]], "sample_functions() (smac.model.gaussian_process.gaussianprocess method)": [[67, "smac.model.gaussian_process.GaussianProcess.sample_functions"]], "smac.model.gaussian_process": [[67, "module-smac.model.gaussian_process"]], "abstractgaussianprocess (class in smac.model.gaussian_process.abstract_gaussian_process)": [[68, "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess"]], "meta (smac.model.gaussian_process.abstract_gaussian_process.abstractgaussianprocess property)": [[68, "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess.meta"]], "smac.model.gaussian_process.abstract_gaussian_process": [[68, "module-smac.model.gaussian_process.abstract_gaussian_process"]], "gaussianprocess (class in smac.model.gaussian_process.gaussian_process)": [[69, "smac.model.gaussian_process.gaussian_process.GaussianProcess"]], "meta (smac.model.gaussian_process.gaussian_process.gaussianprocess property)": [[69, "smac.model.gaussian_process.gaussian_process.GaussianProcess.meta"]], "sample_functions() (smac.model.gaussian_process.gaussian_process.gaussianprocess method)": [[69, "smac.model.gaussian_process.gaussian_process.GaussianProcess.sample_functions"]], "smac.model.gaussian_process.gaussian_process": [[69, "module-smac.model.gaussian_process.gaussian_process"]], "smac.model.gaussian_process.gpytorch_gaussian_process": [[70, "module-smac.model.gaussian_process.gpytorch_gaussian_process"]], "abstractkernel (class in smac.model.gaussian_process.kernels)": [[71, "smac.model.gaussian_process.kernels.AbstractKernel"]], "constantkernel (class in smac.model.gaussian_process.kernels)": [[71, "smac.model.gaussian_process.kernels.ConstantKernel"]], "hammingkernel (class in smac.model.gaussian_process.kernels)": [[71, "smac.model.gaussian_process.kernels.HammingKernel"]], "maternkernel (class in smac.model.gaussian_process.kernels)": [[71, "smac.model.gaussian_process.kernels.MaternKernel"]], "productkernel (class in smac.model.gaussian_process.kernels)": [[71, "smac.model.gaussian_process.kernels.ProductKernel"]], "rbfkernel (class in smac.model.gaussian_process.kernels)": [[71, "smac.model.gaussian_process.kernels.RBFKernel"]], "sumkernel (class in smac.model.gaussian_process.kernels)": [[71, "smac.model.gaussian_process.kernels.SumKernel"]], "whitekernel (class in smac.model.gaussian_process.kernels)": [[71, "smac.model.gaussian_process.kernels.WhiteKernel"]], "__call__() (smac.model.gaussian_process.kernels.abstractkernel method)": [[71, "smac.model.gaussian_process.kernels.AbstractKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.constantkernel method)": [[71, "smac.model.gaussian_process.kernels.ConstantKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.productkernel method)": [[71, "smac.model.gaussian_process.kernels.ProductKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.sumkernel method)": [[71, "smac.model.gaussian_process.kernels.SumKernel.__call__"]], "get_params() (smac.model.gaussian_process.kernels.abstractkernel method)": [[71, "smac.model.gaussian_process.kernels.AbstractKernel.get_params"]], "has_conditions (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[71, "smac.model.gaussian_process.kernels.AbstractKernel.has_conditions"]], "hyperparameter_length_scale (smac.model.gaussian_process.kernels.hammingkernel property)": [[71, "smac.model.gaussian_process.kernels.HammingKernel.hyperparameter_length_scale"]], "hyperparameters (smac.model.gaussian_process.kernels.abstractkernel property)": [[71, "smac.model.gaussian_process.kernels.AbstractKernel.hyperparameters"]], "meta (smac.model.gaussian_process.kernels.abstractkernel property)": [[71, "smac.model.gaussian_process.kernels.AbstractKernel.meta"]], "meta (smac.model.gaussian_process.kernels.hammingkernel property)": [[71, "smac.model.gaussian_process.kernels.HammingKernel.meta"]], "n_dims (smac.model.gaussian_process.kernels.abstractkernel property)": [[71, "smac.model.gaussian_process.kernels.AbstractKernel.n_dims"]], "operate_on (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[71, "smac.model.gaussian_process.kernels.AbstractKernel.operate_on"]], "prior (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[71, "smac.model.gaussian_process.kernels.AbstractKernel.prior"]], "smac.model.gaussian_process.kernels": [[71, "module-smac.model.gaussian_process.kernels"]], "abstractkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[72, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel"]], "constantkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[72, "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel"]], "productkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[72, "smac.model.gaussian_process.kernels.base_kernels.ProductKernel"]], "sumkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[72, "smac.model.gaussian_process.kernels.base_kernels.SumKernel"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.abstractkernel method)": [[72, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.constantkernel method)": [[72, "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.productkernel method)": [[72, "smac.model.gaussian_process.kernels.base_kernels.ProductKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.sumkernel method)": [[72, "smac.model.gaussian_process.kernels.base_kernels.SumKernel.__call__"]], "get_params() (smac.model.gaussian_process.kernels.base_kernels.abstractkernel method)": [[72, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.get_params"]], "has_conditions (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[72, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.has_conditions"]], "hyperparameters (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[72, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.hyperparameters"]], "meta (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[72, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.meta"]], "n_dims (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[72, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.n_dims"]], "operate_on (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[72, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.operate_on"]], "prior (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[72, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.prior"]], "smac.model.gaussian_process.kernels.base_kernels": [[72, "module-smac.model.gaussian_process.kernels.base_kernels"]], "hammingkernel (class in smac.model.gaussian_process.kernels.hamming_kernel)": [[73, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel"]], "hyperparameter_length_scale (smac.model.gaussian_process.kernels.hamming_kernel.hammingkernel property)": [[73, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel.hyperparameter_length_scale"]], "meta (smac.model.gaussian_process.kernels.hamming_kernel.hammingkernel property)": [[73, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel.meta"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[73, "module-smac.model.gaussian_process.kernels.hamming_kernel"]], "maternkernel (class in smac.model.gaussian_process.kernels.matern_kernel)": [[74, "smac.model.gaussian_process.kernels.matern_kernel.MaternKernel"]], "smac.model.gaussian_process.kernels.matern_kernel": [[74, "module-smac.model.gaussian_process.kernels.matern_kernel"]], "rbfkernel (class in smac.model.gaussian_process.kernels.rbf_kernel)": [[75, "smac.model.gaussian_process.kernels.rbf_kernel.RBFKernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[75, "module-smac.model.gaussian_process.kernels.rbf_kernel"]], "whitekernel (class in smac.model.gaussian_process.kernels.white_kernel)": [[76, "smac.model.gaussian_process.kernels.white_kernel.WhiteKernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[76, "module-smac.model.gaussian_process.kernels.white_kernel"]], "mcmcgaussianprocess (class in smac.model.gaussian_process.mcmc_gaussian_process)": [[77, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess"]], "meta (smac.model.gaussian_process.mcmc_gaussian_process.mcmcgaussianprocess property)": [[77, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess.meta"]], "models (smac.model.gaussian_process.mcmc_gaussian_process.mcmcgaussianprocess property)": [[77, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess.models"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[77, "module-smac.model.gaussian_process.mcmc_gaussian_process"]], "gammaprior (class in smac.model.gaussian_process.priors)": [[78, "smac.model.gaussian_process.priors.GammaPrior"]], "horseshoeprior (class in smac.model.gaussian_process.priors)": [[78, "smac.model.gaussian_process.priors.HorseshoePrior"]], "lognormalprior (class in smac.model.gaussian_process.priors)": [[78, "smac.model.gaussian_process.priors.LogNormalPrior"]], "softtophatprior (class in smac.model.gaussian_process.priors)": [[78, "smac.model.gaussian_process.priors.SoftTopHatPrior"]], "tophatprior (class in smac.model.gaussian_process.priors)": [[78, "smac.model.gaussian_process.priors.TophatPrior"]], "get_gradient() (smac.model.gaussian_process.priors.softtophatprior method)": [[78, "smac.model.gaussian_process.priors.SoftTopHatPrior.get_gradient"]], "get_gradient() (smac.model.gaussian_process.priors.tophatprior method)": [[78, "smac.model.gaussian_process.priors.TophatPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.softtophatprior method)": [[78, "smac.model.gaussian_process.priors.SoftTopHatPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.gammaprior property)": [[78, "smac.model.gaussian_process.priors.GammaPrior.meta"]], "meta (smac.model.gaussian_process.priors.horseshoeprior property)": [[78, "smac.model.gaussian_process.priors.HorseshoePrior.meta"]], "meta (smac.model.gaussian_process.priors.lognormalprior property)": [[78, "smac.model.gaussian_process.priors.LogNormalPrior.meta"]], "meta (smac.model.gaussian_process.priors.softtophatprior property)": [[78, "smac.model.gaussian_process.priors.SoftTopHatPrior.meta"]], "meta (smac.model.gaussian_process.priors.tophatprior property)": [[78, "smac.model.gaussian_process.priors.TophatPrior.meta"]], "smac.model.gaussian_process.priors": [[78, "module-smac.model.gaussian_process.priors"]], "abstractprior (class in smac.model.gaussian_process.priors.abstract_prior)": [[79, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior"]], "get_gradient() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[79, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[79, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.abstract_prior.abstractprior property)": [[79, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.meta"]], "sample_from_prior() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[79, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.sample_from_prior"]], "smac.model.gaussian_process.priors.abstract_prior": [[79, "module-smac.model.gaussian_process.priors.abstract_prior"]], "gammaprior (class in smac.model.gaussian_process.priors.gamma_prior)": [[80, "smac.model.gaussian_process.priors.gamma_prior.GammaPrior"]], "meta (smac.model.gaussian_process.priors.gamma_prior.gammaprior property)": [[80, "smac.model.gaussian_process.priors.gamma_prior.GammaPrior.meta"]], "smac.model.gaussian_process.priors.gamma_prior": [[80, "module-smac.model.gaussian_process.priors.gamma_prior"]], "horseshoeprior (class in smac.model.gaussian_process.priors.horseshoe_prior)": [[81, "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior"]], "meta (smac.model.gaussian_process.priors.horseshoe_prior.horseshoeprior property)": [[81, "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior.meta"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[81, "module-smac.model.gaussian_process.priors.horseshoe_prior"]], "lognormalprior (class in smac.model.gaussian_process.priors.log_normal_prior)": [[82, "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior"]], "meta (smac.model.gaussian_process.priors.log_normal_prior.lognormalprior property)": [[82, "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior.meta"]], "smac.model.gaussian_process.priors.log_normal_prior": [[82, "module-smac.model.gaussian_process.priors.log_normal_prior"]], "softtophatprior (class in smac.model.gaussian_process.priors.tophat_prior)": [[83, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior"]], "tophatprior (class in smac.model.gaussian_process.priors.tophat_prior)": [[83, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior"]], "get_gradient() (smac.model.gaussian_process.priors.tophat_prior.softtophatprior method)": [[83, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.get_gradient"]], "get_gradient() (smac.model.gaussian_process.priors.tophat_prior.tophatprior method)": [[83, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.tophat_prior.softtophatprior method)": [[83, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.tophat_prior.softtophatprior property)": [[83, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.meta"]], "meta (smac.model.gaussian_process.priors.tophat_prior.tophatprior property)": [[83, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior.meta"]], "smac.model.gaussian_process.priors.tophat_prior": [[83, "module-smac.model.gaussian_process.priors.tophat_prior"]], "multiobjectivemodel (class in smac.model.multi_objective_model)": [[84, "smac.model.multi_objective_model.MultiObjectiveModel"]], "models (smac.model.multi_objective_model.multiobjectivemodel property)": [[84, "smac.model.multi_objective_model.MultiObjectiveModel.models"]], "predict_marginalized() (smac.model.multi_objective_model.multiobjectivemodel method)": [[84, "smac.model.multi_objective_model.MultiObjectiveModel.predict_marginalized"]], "smac.model.multi_objective_model": [[84, "module-smac.model.multi_objective_model"]], "abstractrandomforest (class in smac.model.random_forest)": [[85, "smac.model.random_forest.AbstractRandomForest"]], "randomforest (class in smac.model.random_forest)": [[85, "smac.model.random_forest.RandomForest"]], "meta (smac.model.random_forest.randomforest property)": [[85, "smac.model.random_forest.RandomForest.meta"]], "predict_marginalized() (smac.model.random_forest.randomforest method)": [[85, "smac.model.random_forest.RandomForest.predict_marginalized"]], "smac.model.random_forest": [[85, "module-smac.model.random_forest"]], "abstractrandomforest (class in smac.model.random_forest.abstract_random_forest)": [[86, "smac.model.random_forest.abstract_random_forest.AbstractRandomForest"]], "smac.model.random_forest.abstract_random_forest": [[86, "module-smac.model.random_forest.abstract_random_forest"]], "randomforest (class in smac.model.random_forest.random_forest)": [[87, "smac.model.random_forest.random_forest.RandomForest"]], "meta (smac.model.random_forest.random_forest.randomforest property)": [[87, "smac.model.random_forest.random_forest.RandomForest.meta"]], "predict_marginalized() (smac.model.random_forest.random_forest.randomforest method)": [[87, "smac.model.random_forest.random_forest.RandomForest.predict_marginalized"]], "smac.model.random_forest.random_forest": [[87, "module-smac.model.random_forest.random_forest"]], "randommodel (class in smac.model.random_model)": [[88, "smac.model.random_model.RandomModel"]], "smac.model.random_model": [[88, "module-smac.model.random_model"]], "abstractmultiobjectivealgorithm (class in smac.multi_objective)": [[89, "smac.multi_objective.AbstractMultiObjectiveAlgorithm"]], "meanaggregationstrategy (class in smac.multi_objective)": [[89, "smac.multi_objective.MeanAggregationStrategy"]], "parego (class in smac.multi_objective)": [[89, "smac.multi_objective.ParEGO"]], "__call__() (smac.multi_objective.abstractmultiobjectivealgorithm method)": [[89, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.__call__"]], "__call__() (smac.multi_objective.meanaggregationstrategy method)": [[89, "smac.multi_objective.MeanAggregationStrategy.__call__"]], "__call__() (smac.multi_objective.parego method)": [[89, "smac.multi_objective.ParEGO.__call__"]], "meta (smac.multi_objective.abstractmultiobjectivealgorithm property)": [[89, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.meta"]], "meta (smac.multi_objective.meanaggregationstrategy property)": [[89, "smac.multi_objective.MeanAggregationStrategy.meta"]], "meta (smac.multi_objective.parego property)": [[89, "smac.multi_objective.ParEGO.meta"]], "smac.multi_objective": [[89, "module-smac.multi_objective"]], "update_on_iteration_start() (smac.multi_objective.abstractmultiobjectivealgorithm method)": [[89, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.update_on_iteration_start"]], "update_on_iteration_start() (smac.multi_objective.parego method)": [[89, "smac.multi_objective.ParEGO.update_on_iteration_start"]], "abstractmultiobjectivealgorithm (class in smac.multi_objective.abstract_multi_objective_algorithm)": [[90, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm"]], "__call__() (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm method)": [[90, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.__call__"]], "meta (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm property)": [[90, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.meta"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[90, "module-smac.multi_objective.abstract_multi_objective_algorithm"]], "update_on_iteration_start() (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm method)": [[90, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.update_on_iteration_start"]], "meanaggregationstrategy (class in smac.multi_objective.aggregation_strategy)": [[91, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy"]], "__call__() (smac.multi_objective.aggregation_strategy.meanaggregationstrategy method)": [[91, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy.__call__"]], "meta (smac.multi_objective.aggregation_strategy.meanaggregationstrategy property)": [[91, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy.meta"]], "smac.multi_objective.aggregation_strategy": [[91, "module-smac.multi_objective.aggregation_strategy"]], "parego (class in smac.multi_objective.parego)": [[92, "smac.multi_objective.parego.ParEGO"]], "__call__() (smac.multi_objective.parego.parego method)": [[92, "smac.multi_objective.parego.ParEGO.__call__"]], "meta (smac.multi_objective.parego.parego property)": [[92, "smac.multi_objective.parego.ParEGO.meta"]], "smac.multi_objective.parego": [[92, "module-smac.multi_objective.parego"]], "update_on_iteration_start() (smac.multi_objective.parego.parego method)": [[92, "smac.multi_objective.parego.ParEGO.update_on_iteration_start"]], "abstractrandomdesign (class in smac.random_design)": [[93, "smac.random_design.AbstractRandomDesign"]], "cosineannealingrandomdesign (class in smac.random_design)": [[93, "smac.random_design.CosineAnnealingRandomDesign"]], "dynamicmodulusrandomdesign (class in smac.random_design)": [[93, "smac.random_design.DynamicModulusRandomDesign"]], "dynamicprobabilityrandomdesign (class in smac.random_design)": [[93, "smac.random_design.DynamicProbabilityRandomDesign"]], "modulusrandomdesign (class in smac.random_design)": [[93, "smac.random_design.ModulusRandomDesign"]], "probabilityrandomdesign (class in smac.random_design)": [[93, "smac.random_design.ProbabilityRandomDesign"]], "check() (smac.random_design.abstractrandomdesign method)": [[93, "smac.random_design.AbstractRandomDesign.check"]], "check() (smac.random_design.cosineannealingrandomdesign method)": [[93, "smac.random_design.CosineAnnealingRandomDesign.check"]], "check() (smac.random_design.dynamicmodulusrandomdesign method)": [[93, "smac.random_design.DynamicModulusRandomDesign.check"]], "check() (smac.random_design.dynamicprobabilityrandomdesign method)": [[93, "smac.random_design.DynamicProbabilityRandomDesign.check"]], "check() (smac.random_design.modulusrandomdesign method)": [[93, "smac.random_design.ModulusRandomDesign.check"]], "check() (smac.random_design.probabilityrandomdesign method)": [[93, "smac.random_design.ProbabilityRandomDesign.check"]], "meta (smac.random_design.abstractrandomdesign property)": [[93, "smac.random_design.AbstractRandomDesign.meta"]], "meta (smac.random_design.cosineannealingrandomdesign property)": [[93, "smac.random_design.CosineAnnealingRandomDesign.meta"]], "meta (smac.random_design.dynamicmodulusrandomdesign property)": [[93, "smac.random_design.DynamicModulusRandomDesign.meta"]], "meta (smac.random_design.dynamicprobabilityrandomdesign property)": [[93, "smac.random_design.DynamicProbabilityRandomDesign.meta"]], "meta (smac.random_design.modulusrandomdesign property)": [[93, "smac.random_design.ModulusRandomDesign.meta"]], "meta (smac.random_design.probabilityrandomdesign property)": [[93, "smac.random_design.ProbabilityRandomDesign.meta"]], "next_iteration() (smac.random_design.abstractrandomdesign method)": [[93, "smac.random_design.AbstractRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.cosineannealingrandomdesign method)": [[93, "smac.random_design.CosineAnnealingRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.dynamicmodulusrandomdesign method)": [[93, "smac.random_design.DynamicModulusRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.dynamicprobabilityrandomdesign method)": [[93, "smac.random_design.DynamicProbabilityRandomDesign.next_iteration"]], "smac.random_design": [[93, "module-smac.random_design"]], "abstractrandomdesign (class in smac.random_design.abstract_random_design)": [[94, "smac.random_design.abstract_random_design.AbstractRandomDesign"]], "check() (smac.random_design.abstract_random_design.abstractrandomdesign method)": [[94, "smac.random_design.abstract_random_design.AbstractRandomDesign.check"]], "meta (smac.random_design.abstract_random_design.abstractrandomdesign property)": [[94, "smac.random_design.abstract_random_design.AbstractRandomDesign.meta"]], "next_iteration() (smac.random_design.abstract_random_design.abstractrandomdesign method)": [[94, "smac.random_design.abstract_random_design.AbstractRandomDesign.next_iteration"]], "smac.random_design.abstract_random_design": [[94, "module-smac.random_design.abstract_random_design"]], "cosineannealingrandomdesign (class in smac.random_design.annealing_design)": [[95, "smac.random_design.annealing_design.CosineAnnealingRandomDesign"]], "check() (smac.random_design.annealing_design.cosineannealingrandomdesign method)": [[95, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.check"]], "meta (smac.random_design.annealing_design.cosineannealingrandomdesign property)": [[95, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.meta"]], "next_iteration() (smac.random_design.annealing_design.cosineannealingrandomdesign method)": [[95, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.next_iteration"]], "smac.random_design.annealing_design": [[95, "module-smac.random_design.annealing_design"]], "dynamicmodulusrandomdesign (class in smac.random_design.modulus_design)": [[96, "smac.random_design.modulus_design.DynamicModulusRandomDesign"]], "modulusrandomdesign (class in smac.random_design.modulus_design)": [[96, "smac.random_design.modulus_design.ModulusRandomDesign"]], "check() (smac.random_design.modulus_design.dynamicmodulusrandomdesign method)": [[96, "smac.random_design.modulus_design.DynamicModulusRandomDesign.check"]], "check() (smac.random_design.modulus_design.modulusrandomdesign method)": [[96, "smac.random_design.modulus_design.ModulusRandomDesign.check"]], "meta (smac.random_design.modulus_design.dynamicmodulusrandomdesign property)": [[96, "smac.random_design.modulus_design.DynamicModulusRandomDesign.meta"]], "meta (smac.random_design.modulus_design.modulusrandomdesign property)": [[96, "smac.random_design.modulus_design.ModulusRandomDesign.meta"]], "next_iteration() (smac.random_design.modulus_design.dynamicmodulusrandomdesign method)": [[96, "smac.random_design.modulus_design.DynamicModulusRandomDesign.next_iteration"]], "smac.random_design.modulus_design": [[96, "module-smac.random_design.modulus_design"]], "dynamicprobabilityrandomdesign (class in smac.random_design.probability_design)": [[97, "smac.random_design.probability_design.DynamicProbabilityRandomDesign"]], "probabilityrandomdesign (class in smac.random_design.probability_design)": [[97, "smac.random_design.probability_design.ProbabilityRandomDesign"]], "check() (smac.random_design.probability_design.dynamicprobabilityrandomdesign method)": [[97, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.check"]], "check() (smac.random_design.probability_design.probabilityrandomdesign method)": [[97, "smac.random_design.probability_design.ProbabilityRandomDesign.check"]], "meta (smac.random_design.probability_design.dynamicprobabilityrandomdesign property)": [[97, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.meta"]], "meta (smac.random_design.probability_design.probabilityrandomdesign property)": [[97, "smac.random_design.probability_design.ProbabilityRandomDesign.meta"]], "next_iteration() (smac.random_design.probability_design.dynamicprobabilityrandomdesign method)": [[97, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.next_iteration"]], "smac.random_design.probability_design": [[97, "module-smac.random_design.probability_design"]], "instanceseedbudgetkey (class in smac.runhistory)": [[98, "smac.runhistory.InstanceSeedBudgetKey"]], "instanceseedkey (class in smac.runhistory)": [[98, "smac.runhistory.InstanceSeedKey"]], "runhistory (class in smac.runhistory)": [[98, "smac.runhistory.RunHistory"]], "statustype (class in smac.runhistory)": [[98, "smac.runhistory.StatusType"]], "trialinfo (class in smac.runhistory)": [[98, "smac.runhistory.TrialInfo"]], "trialkey (class in smac.runhistory)": [[98, "smac.runhistory.TrialKey"]], "trialvalue (class in smac.runhistory)": [[98, "smac.runhistory.TrialValue"]], "__contains__() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.__contains__"]], "__eq__() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.__eq__"]], "__getitem__() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.__getitem__"]], "__iter__() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.__iter__"]], "__len__() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.__len__"]], "add() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.add"]], "add_running_trial() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.add_running_trial"]], "add_trial() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.add_trial"]], "average_cost() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.average_cost"]], "config_ids (smac.runhistory.runhistory property)": [[98, "smac.runhistory.RunHistory.config_ids"]], "empty() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.empty"]], "finished (smac.runhistory.runhistory property)": [[98, "smac.runhistory.RunHistory.finished"]], "get_config() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.get_config"]], "get_config_id() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.get_config_id"]], "get_configs() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.get_configs"]], "get_configs_per_budget() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.get_configs_per_budget"]], "get_cost() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.get_cost"]], "get_instance_seed_budget_key() (smac.runhistory.trialinfo method)": [[98, "smac.runhistory.TrialInfo.get_instance_seed_budget_key"]], "get_instance_seed_budget_keys() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.get_instance_seed_budget_keys"]], "get_instance_seed_key() (smac.runhistory.instanceseedbudgetkey method)": [[98, "smac.runhistory.InstanceSeedBudgetKey.get_instance_seed_key"]], "get_instance_seed_key() (smac.runhistory.trialinfo method)": [[98, "smac.runhistory.TrialInfo.get_instance_seed_key"]], "get_min_cost() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.get_min_cost"]], "get_running_configs() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.get_running_configs"]], "get_running_trials() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.get_running_trials"]], "get_trials() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.get_trials"]], "has_config() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.has_config"]], "ids_config (smac.runhistory.runhistory property)": [[98, "smac.runhistory.RunHistory.ids_config"]], "incremental_update_cost() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.incremental_update_cost"]], "load() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.load"]], "min_cost() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.min_cost"]], "multi_objective_algorithm (smac.runhistory.runhistory property)": [[98, "smac.runhistory.RunHistory.multi_objective_algorithm"]], "objective_bounds (smac.runhistory.runhistory property)": [[98, "smac.runhistory.RunHistory.objective_bounds"]], "reset() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.reset"]], "running (smac.runhistory.runhistory property)": [[98, "smac.runhistory.RunHistory.running"]], "save() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.save"]], "smac.runhistory": [[98, "module-smac.runhistory"]], "submitted (smac.runhistory.runhistory property)": [[98, "smac.runhistory.RunHistory.submitted"]], "sum_cost() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.sum_cost"]], "update() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.update"]], "update_cost() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.update_cost"]], "update_costs() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.update_costs"]], "update_from_json() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.update_from_json"]], "instanceseedbudgetkey (class in smac.runhistory.dataclasses)": [[99, "smac.runhistory.dataclasses.InstanceSeedBudgetKey"]], "instanceseedkey (class in smac.runhistory.dataclasses)": [[99, "smac.runhistory.dataclasses.InstanceSeedKey"]], "trajectoryitem (class in smac.runhistory.dataclasses)": [[99, "smac.runhistory.dataclasses.TrajectoryItem"]], "trialinfo (class in smac.runhistory.dataclasses)": [[99, "smac.runhistory.dataclasses.TrialInfo"]], "trialkey (class in smac.runhistory.dataclasses)": [[99, "smac.runhistory.dataclasses.TrialKey"]], "trialvalue (class in smac.runhistory.dataclasses)": [[99, "smac.runhistory.dataclasses.TrialValue"]], "get_instance_seed_budget_key() (smac.runhistory.dataclasses.trialinfo method)": [[99, "smac.runhistory.dataclasses.TrialInfo.get_instance_seed_budget_key"]], "get_instance_seed_key() (smac.runhistory.dataclasses.instanceseedbudgetkey method)": [[99, "smac.runhistory.dataclasses.InstanceSeedBudgetKey.get_instance_seed_key"]], "get_instance_seed_key() (smac.runhistory.dataclasses.trialinfo method)": [[99, "smac.runhistory.dataclasses.TrialInfo.get_instance_seed_key"]], "smac.runhistory.dataclasses": [[99, "module-smac.runhistory.dataclasses"]], "abstractrunhistoryencoder (class in smac.runhistory.encoder)": [[100, "smac.runhistory.encoder.AbstractRunHistoryEncoder"]], "runhistoryeipsencoder (class in smac.runhistory.encoder)": [[100, "smac.runhistory.encoder.RunHistoryEIPSEncoder"]], "runhistoryencoder (class in smac.runhistory.encoder)": [[100, "smac.runhistory.encoder.RunHistoryEncoder"]], "runhistoryinversescaledencoder (class in smac.runhistory.encoder)": [[100, "smac.runhistory.encoder.RunHistoryInverseScaledEncoder"]], "runhistorylogencoder (class in smac.runhistory.encoder)": [[100, "smac.runhistory.encoder.RunHistoryLogEncoder"]], "runhistorylogscaledencoder (class in smac.runhistory.encoder)": [[100, "smac.runhistory.encoder.RunHistoryLogScaledEncoder"]], "runhistoryscaledencoder (class in smac.runhistory.encoder)": [[100, "smac.runhistory.encoder.RunHistoryScaledEncoder"]], "runhistorysqrtscaledencoder (class in smac.runhistory.encoder)": [[100, "smac.runhistory.encoder.RunHistorySqrtScaledEncoder"]], "get_configurations() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[100, "smac.runhistory.encoder.AbstractRunHistoryEncoder.get_configurations"]], "meta (smac.runhistory.encoder.abstractrunhistoryencoder property)": [[100, "smac.runhistory.encoder.AbstractRunHistoryEncoder.meta"]], "multi_objective_algorithm (smac.runhistory.encoder.abstractrunhistoryencoder property)": [[100, "smac.runhistory.encoder.AbstractRunHistoryEncoder.multi_objective_algorithm"]], "runhistory (smac.runhistory.encoder.abstractrunhistoryencoder property)": [[100, "smac.runhistory.encoder.AbstractRunHistoryEncoder.runhistory"]], "smac.runhistory.encoder": [[100, "module-smac.runhistory.encoder"]], "transform() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[100, "smac.runhistory.encoder.AbstractRunHistoryEncoder.transform"]], "transform_response_values() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[100, "smac.runhistory.encoder.AbstractRunHistoryEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryeipsencoder method)": [[100, "smac.runhistory.encoder.RunHistoryEIPSEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryencoder method)": [[100, "smac.runhistory.encoder.RunHistoryEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryinversescaledencoder method)": [[100, "smac.runhistory.encoder.RunHistoryInverseScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorylogencoder method)": [[100, "smac.runhistory.encoder.RunHistoryLogEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorylogscaledencoder method)": [[100, "smac.runhistory.encoder.RunHistoryLogScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryscaledencoder method)": [[100, "smac.runhistory.encoder.RunHistoryScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorysqrtscaledencoder method)": [[100, "smac.runhistory.encoder.RunHistorySqrtScaledEncoder.transform_response_values"]], "abstractrunhistoryencoder (class in smac.runhistory.encoder.abstract_encoder)": [[101, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder"]], "get_configurations() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[101, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.get_configurations"]], "meta (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder property)": [[101, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.meta"]], "multi_objective_algorithm (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder property)": [[101, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.multi_objective_algorithm"]], "runhistory (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder property)": [[101, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.runhistory"]], "smac.runhistory.encoder.abstract_encoder": [[101, "module-smac.runhistory.encoder.abstract_encoder"]], "transform() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[101, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.transform"]], "transform_response_values() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[101, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.transform_response_values"]], "smac.runhistory.encoder.boing_encoder": [[102, "module-smac.runhistory.encoder.boing_encoder"]], "runhistoryeipsencoder (class in smac.runhistory.encoder.eips_encoder)": [[103, "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder"]], "smac.runhistory.encoder.eips_encoder": [[103, "module-smac.runhistory.encoder.eips_encoder"]], "transform_response_values() (smac.runhistory.encoder.eips_encoder.runhistoryeipsencoder method)": [[103, "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder.transform_response_values"]], "runhistoryencoder (class in smac.runhistory.encoder.encoder)": [[104, "smac.runhistory.encoder.encoder.RunHistoryEncoder"]], "smac.runhistory.encoder.encoder": [[104, "module-smac.runhistory.encoder.encoder"]], "transform_response_values() (smac.runhistory.encoder.encoder.runhistoryencoder method)": [[104, "smac.runhistory.encoder.encoder.RunHistoryEncoder.transform_response_values"]], "runhistoryinversescaledencoder (class in smac.runhistory.encoder.inverse_scaled_encoder)": [[105, "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[105, "module-smac.runhistory.encoder.inverse_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.inverse_scaled_encoder.runhistoryinversescaledencoder method)": [[105, "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder.transform_response_values"]], "runhistorylogencoder (class in smac.runhistory.encoder.log_encoder)": [[106, "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder"]], "smac.runhistory.encoder.log_encoder": [[106, "module-smac.runhistory.encoder.log_encoder"]], "transform_response_values() (smac.runhistory.encoder.log_encoder.runhistorylogencoder method)": [[106, "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder.transform_response_values"]], "runhistorylogscaledencoder (class in smac.runhistory.encoder.log_scaled_encoder)": [[107, "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder"]], "smac.runhistory.encoder.log_scaled_encoder": [[107, "module-smac.runhistory.encoder.log_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.log_scaled_encoder.runhistorylogscaledencoder method)": [[107, "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder.transform_response_values"]], "runhistoryscaledencoder (class in smac.runhistory.encoder.scaled_encoder)": [[108, "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder"]], "smac.runhistory.encoder.scaled_encoder": [[108, "module-smac.runhistory.encoder.scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.scaled_encoder.runhistoryscaledencoder method)": [[108, "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder.transform_response_values"]], "runhistorysqrtscaledencoder (class in smac.runhistory.encoder.sqrt_scaled_encoder)": [[109, "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[109, "module-smac.runhistory.encoder.sqrt_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.sqrt_scaled_encoder.runhistorysqrtscaledencoder method)": [[109, "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder.transform_response_values"]], "statustype (class in smac.runhistory.enumerations)": [[110, "smac.runhistory.enumerations.StatusType"]], "smac.runhistory.enumerations": [[110, "module-smac.runhistory.enumerations"]], "notevaluatederror": [[111, "smac.runhistory.errors.NotEvaluatedError"]], "smac.runhistory.errors": [[111, "module-smac.runhistory.errors"]], "runhistory (class in smac.runhistory.runhistory)": [[112, "smac.runhistory.runhistory.RunHistory"]], "__contains__() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.__contains__"]], "__eq__() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.__eq__"]], "__getitem__() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.__getitem__"]], "__iter__() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.__iter__"]], "__len__() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.__len__"]], "add() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.add"]], "add_running_trial() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.add_running_trial"]], "add_trial() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.add_trial"]], "average_cost() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.average_cost"]], "config_ids (smac.runhistory.runhistory.runhistory property)": [[112, "smac.runhistory.runhistory.RunHistory.config_ids"]], "empty() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.empty"]], "finished (smac.runhistory.runhistory.runhistory property)": [[112, "smac.runhistory.runhistory.RunHistory.finished"]], "get_config() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.get_config"]], "get_config_id() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.get_config_id"]], "get_configs() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.get_configs"]], "get_configs_per_budget() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.get_configs_per_budget"]], "get_cost() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.get_cost"]], "get_instance_seed_budget_keys() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.get_instance_seed_budget_keys"]], "get_min_cost() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.get_min_cost"]], "get_running_configs() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.get_running_configs"]], "get_running_trials() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.get_running_trials"]], "get_trials() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.get_trials"]], "has_config() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.has_config"]], "ids_config (smac.runhistory.runhistory.runhistory property)": [[112, "smac.runhistory.runhistory.RunHistory.ids_config"]], "incremental_update_cost() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.incremental_update_cost"]], "load() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.load"]], "min_cost() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.min_cost"]], "multi_objective_algorithm (smac.runhistory.runhistory.runhistory property)": [[112, "smac.runhistory.runhistory.RunHistory.multi_objective_algorithm"]], "objective_bounds (smac.runhistory.runhistory.runhistory property)": [[112, "smac.runhistory.runhistory.RunHistory.objective_bounds"]], "reset() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.reset"]], "running (smac.runhistory.runhistory.runhistory property)": [[112, "smac.runhistory.runhistory.RunHistory.running"]], "save() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.save"]], "smac.runhistory.runhistory": [[112, "module-smac.runhistory.runhistory"]], "submitted (smac.runhistory.runhistory.runhistory property)": [[112, "smac.runhistory.runhistory.RunHistory.submitted"]], "sum_cost() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.sum_cost"]], "update() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.update"]], "update_cost() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.update_cost"]], "update_costs() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.update_costs"]], "update_from_json() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.update_from_json"]], "abstractrunner (class in smac.runner)": [[113, "smac.runner.AbstractRunner"]], "daskparallelrunner (class in smac.runner)": [[113, "smac.runner.DaskParallelRunner"]], "firstruncrashedexception": [[113, "smac.runner.FirstRunCrashedException"], [117, "smac.runner.exceptions.FirstRunCrashedException"]], "targetalgorithmabortexception": [[113, "smac.runner.TargetAlgorithmAbortException"], [117, "smac.runner.exceptions.TargetAlgorithmAbortException"]], "targetfunctionrunner (class in smac.runner)": [[113, "smac.runner.TargetFunctionRunner"]], "__call__() (smac.runner.targetfunctionrunner method)": [[113, "smac.runner.TargetFunctionRunner.__call__"]], "__del__() (smac.runner.daskparallelrunner method)": [[113, "smac.runner.DaskParallelRunner.__del__"]], "close() (smac.runner.daskparallelrunner method)": [[113, "smac.runner.DaskParallelRunner.close"]], "count_available_workers() (smac.runner.abstractrunner method)": [[113, "smac.runner.AbstractRunner.count_available_workers"]], "count_available_workers() (smac.runner.daskparallelrunner method)": [[113, "smac.runner.DaskParallelRunner.count_available_workers"]], "is_running() (smac.runner.abstractrunner method)": [[113, "smac.runner.AbstractRunner.is_running"]], "is_running() (smac.runner.daskparallelrunner method)": [[113, "smac.runner.DaskParallelRunner.is_running"]], "iter_results() (smac.runner.abstractrunner method)": [[113, "smac.runner.AbstractRunner.iter_results"]], "iter_results() (smac.runner.daskparallelrunner method)": [[113, "smac.runner.DaskParallelRunner.iter_results"]], "meta (smac.runner.abstractrunner property)": [[113, "smac.runner.AbstractRunner.meta"]], "meta (smac.runner.targetfunctionrunner property)": [[113, "smac.runner.TargetFunctionRunner.meta"]], "run() (smac.runner.abstractrunner method)": [[113, "smac.runner.AbstractRunner.run"]], "run() (smac.runner.daskparallelrunner method)": [[113, "smac.runner.DaskParallelRunner.run"]], "run() (smac.runner.targetfunctionrunner method)": [[113, "smac.runner.TargetFunctionRunner.run"]], "run_wrapper() (smac.runner.abstractrunner method)": [[113, "smac.runner.AbstractRunner.run_wrapper"]], "smac.runner": [[113, "module-smac.runner"]], "submit_trial() (smac.runner.abstractrunner method)": [[113, "smac.runner.AbstractRunner.submit_trial"]], "submit_trial() (smac.runner.daskparallelrunner method)": [[113, "smac.runner.DaskParallelRunner.submit_trial"]], "wait() (smac.runner.abstractrunner method)": [[113, "smac.runner.AbstractRunner.wait"]], "wait() (smac.runner.daskparallelrunner method)": [[113, "smac.runner.DaskParallelRunner.wait"]], "abstractrunner (class in smac.runner.abstract_runner)": [[114, "smac.runner.abstract_runner.AbstractRunner"]], "count_available_workers() (smac.runner.abstract_runner.abstractrunner method)": [[114, "smac.runner.abstract_runner.AbstractRunner.count_available_workers"]], "is_running() (smac.runner.abstract_runner.abstractrunner method)": [[114, "smac.runner.abstract_runner.AbstractRunner.is_running"]], "iter_results() (smac.runner.abstract_runner.abstractrunner method)": [[114, "smac.runner.abstract_runner.AbstractRunner.iter_results"]], "meta (smac.runner.abstract_runner.abstractrunner property)": [[114, "smac.runner.abstract_runner.AbstractRunner.meta"]], "run() (smac.runner.abstract_runner.abstractrunner method)": [[114, "smac.runner.abstract_runner.AbstractRunner.run"]], "run_wrapper() (smac.runner.abstract_runner.abstractrunner method)": [[114, "smac.runner.abstract_runner.AbstractRunner.run_wrapper"]], "smac.runner.abstract_runner": [[114, "module-smac.runner.abstract_runner"]], "submit_trial() (smac.runner.abstract_runner.abstractrunner method)": [[114, "smac.runner.abstract_runner.AbstractRunner.submit_trial"]], "wait() (smac.runner.abstract_runner.abstractrunner method)": [[114, "smac.runner.abstract_runner.AbstractRunner.wait"]], "abstractserialrunner (class in smac.runner.abstract_serial_runner)": [[115, "smac.runner.abstract_serial_runner.AbstractSerialRunner"]], "count_available_workers() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[115, "smac.runner.abstract_serial_runner.AbstractSerialRunner.count_available_workers"]], "is_running() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[115, "smac.runner.abstract_serial_runner.AbstractSerialRunner.is_running"]], "iter_results() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[115, "smac.runner.abstract_serial_runner.AbstractSerialRunner.iter_results"]], "smac.runner.abstract_serial_runner": [[115, "module-smac.runner.abstract_serial_runner"]], "submit_trial() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[115, "smac.runner.abstract_serial_runner.AbstractSerialRunner.submit_trial"]], "wait() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[115, "smac.runner.abstract_serial_runner.AbstractSerialRunner.wait"]], "daskparallelrunner (class in smac.runner.dask_runner)": [[116, "smac.runner.dask_runner.DaskParallelRunner"]], "__del__() (smac.runner.dask_runner.daskparallelrunner method)": [[116, "smac.runner.dask_runner.DaskParallelRunner.__del__"]], "close() (smac.runner.dask_runner.daskparallelrunner method)": [[116, "smac.runner.dask_runner.DaskParallelRunner.close"]], "count_available_workers() (smac.runner.dask_runner.daskparallelrunner method)": [[116, "smac.runner.dask_runner.DaskParallelRunner.count_available_workers"]], "is_running() (smac.runner.dask_runner.daskparallelrunner method)": [[116, "smac.runner.dask_runner.DaskParallelRunner.is_running"]], "iter_results() (smac.runner.dask_runner.daskparallelrunner method)": [[116, "smac.runner.dask_runner.DaskParallelRunner.iter_results"]], "run() (smac.runner.dask_runner.daskparallelrunner method)": [[116, "smac.runner.dask_runner.DaskParallelRunner.run"]], "smac.runner.dask_runner": [[116, "module-smac.runner.dask_runner"]], "submit_trial() (smac.runner.dask_runner.daskparallelrunner method)": [[116, "smac.runner.dask_runner.DaskParallelRunner.submit_trial"]], "wait() (smac.runner.dask_runner.daskparallelrunner method)": [[116, "smac.runner.dask_runner.DaskParallelRunner.wait"]], "smac.runner.exceptions": [[117, "module-smac.runner.exceptions"]], "targetfunctionrunner (class in smac.runner.target_function_runner)": [[118, "smac.runner.target_function_runner.TargetFunctionRunner"]], "__call__() (smac.runner.target_function_runner.targetfunctionrunner method)": [[118, "smac.runner.target_function_runner.TargetFunctionRunner.__call__"]], "meta (smac.runner.target_function_runner.targetfunctionrunner property)": [[118, "smac.runner.target_function_runner.TargetFunctionRunner.meta"]], "run() (smac.runner.target_function_runner.targetfunctionrunner method)": [[118, "smac.runner.target_function_runner.TargetFunctionRunner.run"]], "smac.runner.target_function_runner": [[118, "module-smac.runner.target_function_runner"]], "targetfunctionscriptrunner (class in smac.runner.target_function_script_runner)": [[119, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner"]], "__call__() (smac.runner.target_function_script_runner.targetfunctionscriptrunner method)": [[119, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner.__call__"]], "meta (smac.runner.target_function_script_runner.targetfunctionscriptrunner property)": [[119, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner.meta"]], "run() (smac.runner.target_function_script_runner.targetfunctionscriptrunner method)": [[119, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner.run"]], "smac.runner.target_function_script_runner": [[119, "module-smac.runner.target_function_script_runner"]], "scenario (class in smac.scenario)": [[120, "smac.scenario.Scenario"]], "__post_init__() (smac.scenario.scenario method)": [[120, "smac.scenario.Scenario.__post_init__"]], "count_instance_features() (smac.scenario.scenario method)": [[120, "smac.scenario.Scenario.count_instance_features"]], "count_objectives() (smac.scenario.scenario method)": [[120, "smac.scenario.Scenario.count_objectives"]], "load() (smac.scenario.scenario static method)": [[120, "smac.scenario.Scenario.load"]], "make_serializable() (smac.scenario.scenario static method)": [[120, "smac.scenario.Scenario.make_serializable"]], "meta (smac.scenario.scenario property)": [[120, "smac.scenario.Scenario.meta"]], "save() (smac.scenario.scenario method)": [[120, "smac.scenario.Scenario.save"]], "smac.scenario": [[120, "module-smac.scenario"]], "smac.utils": [[121, "module-smac.utils"]], "convert_configurations_to_array() (in module smac.utils.configspace)": [[122, "smac.utils.configspace.convert_configurations_to_array"]], "get_conditional_hyperparameters() (in module smac.utils.configspace)": [[122, "smac.utils.configspace.get_conditional_hyperparameters"]], "get_config_hash() (in module smac.utils.configspace)": [[122, "smac.utils.configspace.get_config_hash"]], "get_types() (in module smac.utils.configspace)": [[122, "smac.utils.configspace.get_types"]], "print_config_changes() (in module smac.utils.configspace)": [[122, "smac.utils.configspace.print_config_changes"]], "smac.utils.configspace": [[122, "module-smac.utils.configspace"]], "batch() (in module smac.utils.data_structures)": [[123, "smac.utils.data_structures.batch"]], "recursively_compare_dicts() (in module smac.utils.data_structures)": [[123, "smac.utils.data_structures.recursively_compare_dicts"]], "smac.utils.data_structures": [[123, "module-smac.utils.data_structures"]], "get_logger() (in module smac.utils.logging)": [[124, "smac.utils.logging.get_logger"]], "setup_logging() (in module smac.utils.logging)": [[124, "smac.utils.logging.setup_logging"]], "smac.utils.logging": [[124, "module-smac.utils.logging"]], "normalize_costs() (in module smac.utils.multi_objective)": [[125, "smac.utils.multi_objective.normalize_costs"]], "smac.utils.multi_objective": [[125, "module-smac.utils.multi_objective"]], "calculate_pareto_front() (in module smac.utils.pareto_front)": [[126, "smac.utils.pareto_front.calculate_pareto_front"]], "smac.utils.pareto_front": [[126, "module-smac.utils.pareto_front"]], "sort_by_crowding_distance() (in module smac.utils.pareto_front)": [[126, "smac.utils.pareto_front.sort_by_crowding_distance"]], "smac.utils.subspaces": [[127, "module-smac.utils.subspaces"]], "smac.utils.subspaces.boing_subspace": [[128, "module-smac.utils.subspaces.boing_subspace"]], "smac.utils.subspaces.turbo_subspace": [[129, "module-smac.utils.subspaces.turbo_subspace"]]}})